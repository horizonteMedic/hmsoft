/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import java.text.SimpleDateFormat;
import java.util.Date;
import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import static sistema.LaboratorioClinico.FechaNacimiento;

/**
 *
 * @author USER
 */
public class contanciaSaludCovid1 extends javax.swing.JFrame {
    clsConnection oConn1 = new clsConnection();
 clsFunciones  oFunc = new clsFunciones();
      //Ingreso ads = new Ingreso();
String sed="";
    String ipa="",seded="";
 String codvalor="";
 public static com.toedter.calendar.JDateChooser FechaNacimiento;
String medicouser="",cmppp;
//Ingreso objt=new Ingreso();
String edadd;
boolean asin,sin,invalido,igmreactivo,iggreactivo;
    /**
     * Creates new form contanciaSaludCovid
     */
    public contanciaSaludCovid1() {
        
     seded=clsGlobales.sedeSede;
           ipa=clsGlobales.ipIp;
        valorSede(seded);

        initComponents();
       // jComboBox1.setSelectedIndex(1);
        //cmpMedico();
        fechaDelDia();
        jTextDias.setEnabled(false);
        this.setTitle("DESCANSO MEDICO DE ANTIGENOS");
        jTextField1.setVisible(false);
jTextField2.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jLabel13 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDNI = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEdadIn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        btnImp = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        txtimp = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextFieldNOMBREC = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextDias = new javax.swing.JTextField();
        jTextresultado = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("N° Ficha :");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });
        txtNorden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNordenKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("El médico que  suscribe CMP:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Haber evaluado al SR. ");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Certifica:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("de");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setText("años de edad, identificado con DNI: ");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("el cual luego de la evaluación médica presenta el siguiente diagnóstico.");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("-");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("dias desde ");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Hasta");

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnImp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        btnImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrar.png"))); // NOI18N
        btnGuardar.setText("Guardar/Actualizar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        txtimp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtimpActionPerformed(evt);
            }
        });

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyPressed(evt);
            }
        });

        jDateChooser2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jDateChooser2KeyPressed(evt);
            }
        });

        jDateChooser3.setForeground(new java.awt.Color(204, 0, 0));

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Fecha del reporte:");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel15.setText("-Prueba rde Antigenos para covid-19");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel16.setText("Se expide la presente a solicitud del interesado y se le indico descanso medico por ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel15))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextresultado, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(255, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(27, 27, 27)
                                .addComponent(jTextFieldNOMBREC, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEdadIn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(89, 89, 89)))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnGuardar)
                                .addGap(39, 39, 39)
                                .addComponent(btnLimpiar)
                                .addGap(52, 52, 52)
                                .addComponent(btnImp)
                                .addGap(33, 33, 33)
                                .addComponent(txtimp, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextDias, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 46, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNOMBREC, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEdadIn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextresultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextDias, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGuardar)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImp)
                            .addComponent(txtimp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jDateChooser1.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener(){
            public void propertyChange(java.beans.PropertyChangeEvent evt){
                calcularDias();
            }
        });
        jDateChooser2.getDateEditor().addPropertyChangeListener(new java.beans.PropertyChangeListener(){
            public void propertyChange(java.beans.PropertyChangeEvent evt){
                calcularDias();
            }
        });

        getAccessibleContext().setAccessibleName("CERTIFICADO DE SALUD");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void resultadoAsin(){
  
                   String sQuery;

        sQuery  = "select chk_asintomatico,chk_sintomatico from constancia_salud_marsa1 where n_orden="+txtNorden.getText();
        oConn1.FnBoolQueryExecute(sQuery);
        try {
            if (oConn1.setResult.next())
            {
             asin= oConn1.setResult.getBoolean("chk_asintomatico");
             sin=oConn1.setResult.getBoolean("chk_sintomatico");
            
            }
           
           if(asin)
               jTextresultado.setText("Asintomatico");
           if(sin)
                jTextresultado.setText("Sintomatico");
            oConn1.sqlStmt.close();        
           oConn1.setResult.close();
        } catch (SQLException ex) 
        {
        }
    }
    
    private void CargarSedes(){
      String sQuery;        
        // Prepara el Query
        sQuery ="select s.nombre_sede from n_orden_ocupacional as n inner join sede as s on n.cod_sede=s.cod_sede where n_orden=" + txtNorden.getText().toString().trim();
        String cboSede="1";
        if (oConn1.FnBoolQueryExecute(sQuery))
        {
            try 
            {
                // Verifica resultados
                 while (oConn1.setResult.next())
                 {                     
                     // Obtiene los datos de la Consulta
                     sed=(oConn1.setResult.getString ("nombre_Sede"));
                     
                 }
                 
                 
                 // Cierra Resultados
                 oConn1.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeInformacion(ex.toString());
                Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        // selecciona
        //cboSede.setSelectedIndex(1);


}
     private void CargarSedes1(){
      String sQuery;        
        // Prepara el Query
        sQuery ="select s.nombre_sede from n_orden_ocupacional as n inner join sede as s on n.cod_sede=s.cod_sede where n_orden=" + txtimp.getText().toString().trim();
        String cboSede="1";
        if (oConn1.FnBoolQueryExecute(sQuery))
        {
            try 
            {
                // Verifica resultados
                 while (oConn1.setResult.next())
                 {                     
                     // Obtiene los datos de la Consulta
                     sed=(oConn1.setResult.getString ("nombre_Sede"));
                     
                 }
                 
                 
                 // Cierra Resultados
                 oConn1.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeInformacion(ex.toString());
                Logger.getLogger(Ingreso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        // selecciona
        //cboSede.setSelectedIndex(1);


}
    public void resultadolaboratorio(){
  
                   String sQuery;

        sQuery  = "select  n_orden,e.chkigm_reactivo, e.chkigm_noreactivo, e.chkigg_reactivo, e.chkigg_noreactivo, e.chkinvalido \n" +
"from examen_inmunologico as e where n_orden="+txtNorden.getText();
        oConn1.FnBoolQueryExecute(sQuery);
        try {
            if (oConn1.setResult.next()){
                invalido= oConn1.setResult.getBoolean("chkinvalido");
                igmreactivo=oConn1.setResult.getBoolean("chkigm_reactivo");
                iggreactivo=oConn1.setResult.getBoolean("chkigg_reactivo");
            }
            oConn1.sqlStmt.close();
            oConn1.setResult.close();
           if(invalido)
           {  jTextField1.setText("INVALIDO");
              jTextField2.setText("INVALIDO");
           
           }
           else
            if(igmreactivo)
                jTextField1.setText("POSITIVO");
              else
                    jTextField1.setText("NEGATIVO");
             if(iggreactivo)
                jTextField2.setText("POSITIVO");
              else
                    jTextField2.setText("NEGATIVO");
        } catch (SQLException ex) {
         
        }
    }
    
   /* public void cmpMedico(){
medicouser=objt.doctor;
       String sQuery;
//sed=ads.nombresede;
        sQuery  = "select cmp_user from usuarios where usuario_user='"+medicouser+"';";
        oConn1.FnBoolQueryExecute(sQuery);
        try {
            if (oConn1.setResult.next())
            {
              jTextField4.setText(oConn1.setResult.getString("cmp_user"));
             cmppp=oConn1.setResult.getString("cmp_user");

            }
            oConn1.sqlStmt.close();
            oConn1.setResult.close();
            
        } catch (SQLException ex) {
         
        }


}*/
void fechaDesde() throws ParseException{
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
//        oFunc.SubSistemaMensajeError(dateFormat.format(FechaDesde.getDate()));
        if(jDateChooser1.getDate()!=null){
	Date fechaInicial=dateFormat.parse(dateFormat.format(jDateChooser1.getDate()));
	Date fechaFinal=dateFormat.parse(dateFormat.format(jDateChooser2.getDate()));
        int dias=(int)((fechaFinal.getTime()- fechaInicial.getTime())/86400000) +1;
        jTextDias.setText(String.valueOf(dias));}
    }
public void calcularDias(){
        try {
            fechaDesde();
        } catch (ParseException ex) {
            Logger.getLogger(ConstanciaAltaMarsa.class.getName()).log(Level.SEVERE, null, ex);
        }
}

public void fechaDelDia(){
Date date = new Date();
//DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
//System.out.println("Fecha: "+dateFormat.format(date));
jDateChooser3.setDate(date);
}
private void Actualizar(){
        String sCodigo=txtNorden.getText();
        String strSqlStmt;
        Date  fecha=jDateChooser1.getDate();
        DateFormat f=new SimpleDateFormat("dd-MM-yyyy");
        String fecha1=f.format(fecha); 
        fecha1 +=" Hasta ";
        
         Date  fecha2=jDateChooser2.getDate();
        DateFormat f2=new SimpleDateFormat("dd-MM-yyyy");
        String fee=f2.format(fecha2); 
        fecha1 +=fee;
         Date  fecha3=jDateChooser3.getDate();
        DateFormat f3=new SimpleDateFormat("dd-MM-yyyy");
        String fecha4=f3.format(fecha3); 
        strSqlStmt="update certificadoMedico set indicacion='"+fecha1+"', cmp='"+jTextField4.getText()+"',años="+edadd 
             +",fecha='"+fecha4+"'"
                +",dias="+jTextDias.getText()
                + " WHERE cod_Certificado =" + sCodigo + ";";
            System.out.println("la fechad e actualziacion es :"+strSqlStmt);
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn1.FnBoolQueryExecuteUpdate(strSqlStmt)) {
         
                oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Éxito");
                imprimir();
                limpiar();          
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
        try {
            oConn1.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(contanciaSaludCovid1.class.getName()).log(Level.SEVERE, null, ex);
        }

        
    }
    private boolean imprimir(){
    boolean im = false;
int seleccion = JOptionPane.showOptionDialog(
    this, // Componente padre
    "¿Desea Imprimir?", //Mensaje
    "Seleccione una opción", // Título
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,    // null para icono por defecto.
    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
    "Si");
    if (seleccion != -1)
    {
   if((seleccion + 1)==1)
   {   if(sed.contains("Huancayo"))
                 printer12(Integer.valueOf(txtNorden.getText().toString()));
            else
      printer(Integer.valueOf(txtNorden.getText().toString()));
       im = true;
   }
   else
   {
      // PRESIONO NO
     }
    }
    return im;

}
    
    private boolean Grabar() throws SQLException{
        boolean bResult = false;
            Date  fecha=jDateChooser1.getDate();
        DateFormat f=new SimpleDateFormat("dd-MM-yyyy");
        String fecha1=f.format(fecha); 
        fecha1 +=" Hasta ";
        
         Date  fecha2=jDateChooser2.getDate();
        DateFormat f2=new SimpleDateFormat("dd-MM-yyyy");
        String fee=f2.format(fecha2); 
        fecha1 +=fee;   
        
             Date  fecha3=jDateChooser3.getDate();
        DateFormat f3=new SimpleDateFormat("dd-MM-yyyy");
        String fecha4=f3.format(fecha3); 
       String strSqlStmt ="insert into certificadoMedico values("+txtNorden.getText()+",'"+
            fecha1  +"','"+jTextField4.getText()+"',"+edadd+",'"+fecha4+"',"
                +jTextDias.getText()
               + ");	";
       // System.out.println("la fechad agregar es :"+strSqlStmt);    
             if (oConn1.FnBoolQueryExecuteUpdate(strSqlStmt)){
                
//                   oConn.setResult.next();
            
                   bResult = true;
                       oFunc.SubSistemaMensajeInformacion("Orden Registrada");
               }
              oConn1.sqlStmt.close();
              
                return bResult;       
        }
    
    
    
    
   private void printer(Integer cod){
                 Map parameters = new HashMap(); 
                parameters.put("orden",cod);      
                    try 
                {          
                    String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "constancia_salud_covid1.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
//                    JasperViewer viewer = new JasperViewer(myPrint, true);
                    JasperPrintManager.printReport(myPrint,true);
//                    viewer.setTitle("CONSTANCIA MÉDICA COVID 19");
                    // viewer.setAlwaysOnTop(true);
//                    viewer.setVisible(true);
                    
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
       
   private void printer12(Integer cod){
                 Map parameters = new HashMap(); 
                parameters.put("orden",cod);      
                    try 
                {          
                    String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "constancia_salud_covid3213.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
//                    JasperViewer viewer = new JasperViewer(myPrint, true);
                    JasperPrintManager.printReport(myPrint,true);
//                    viewer.setTitle("CONSTANCIA MÉDICA COVID 19");
                    // viewer.setAlwaysOnTop(true);
//                    viewer.setVisible(true);
                    
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
   
      
     public boolean OrdenExiste1()
    {
        boolean bResultado=false;
        if(!txtNorden.getText().isEmpty()){
        String sQuery;

        sQuery  = "select n_orden from n_orden_ocupacional where n_orden  ="+txtNorden.getText().toString();
        oConn1.FnBoolQueryExecute(sQuery);
        try {
            if (oConn1.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn1.sqlStmt.close();
            oConn1.setResult.close();
            
        } catch (SQLException ex) {
         
        }
        }       
        return bResultado;
        }
     public boolean OrdenExiste()
    {
        boolean bResultado=false;
        if(!txtNorden.getText().isEmpty()){
        String sQuery;

        sQuery  = "select cod_Certificado from certificadoMedico where cod_Certificado  ="+txtNorden.getText().toString();
        oConn1.FnBoolQueryExecute(sQuery);
        try {
            if (oConn1.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn1.sqlStmt.close();
            oConn1.setResult.close();
            
        } catch (SQLException ex) {
         
        }
        }       
        return bResultado;
        }
     public void valorSede(String sede){
if(sede.equals("Trujillo"))
codvalor="1";
if(sede.equals("Huamachuco"))
codvalor="2";
if(sede.equals("Huancayo"))
codvalor="3";
if(sede.equals("Trujillo-Pierola"))
codvalor="4";

}
    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        //activar(true);
        
        CargarSedes();
        valorSede(seded);
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
            
            if(OrdenExiste1()){
                 resultadoAsin();
                 resultadolaboratorio();
                String Sql="select concat(dp.apellidos_pa,' ',dp.nombres_pa) as nombreCompleto,dp.cod_pa as dni,    \n" +
"                         dp.fecha_nacimiento_pa    \n" +
"                     from datos_paciente as dp inner join n_orden_ocupacional as nocp on    \n" +
"                         dp.cod_pa=nocp.cod_pa "
                + "WHERE nocp.n_orden ="+txtNorden.getText().toString()+" AND nocp.cod_Sede="+codvalor;
                oConn1.FnBoolQueryExecute(Sql);
                try {
                    if (oConn1.setResult.next()) {
                        jTextFieldNOMBREC.setText(oConn1.setResult.getString("nombreCompleto"));
                        jTextFieldDNI.setText(oConn1.setResult.getString("dni"));
                        FechaNacimiento.setDate(oConn1.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdadIn.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) );
                        edadd=txtEdadIn.getText();
                        txtNorden.setEditable(false);
                        //   FechaHoy.requestFocusInWindow();
                   
             
                    }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Algunos Registros necesarios");
                    }
                    oConn1.sqlStmt.close();
                    oConn1.setResult.close();
                } catch (SQLException ex) {
                    oFunc.SubSistemaMensajeInformacion("Constancia:" + ex.getMessage().toString());}

            }
            JOptionPane.showMessageDialog(null, "Operación realizada correctamente");
            
            
        }
        else
            JOptionPane.showMessageDialog(null, "por favor ingrese el N° FICHA");
        
    }//GEN-LAST:event_txtNordenActionPerformed
private void limpiar(){
jTextField4.setText(null);
jTextFieldNOMBREC.setText(null);
jTextFieldDNI.setText(null);
txtEdadIn.setText(null);
txtNorden.setText(null);
txtNorden.setEditable(true);
//jTextField3.setText(null);
txtNorden.requestFocus();
jDateChooser1.setDate(null);
jDateChooser2.setDate(null);
}
    private void txtNordenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNordenKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtNordenKeyTyped

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpActionPerformed
CargarSedes1();
        if(!txtimp.getText().isEmpty()){
            if(sed.contains("Huancayo"))
                 print12(Integer.valueOf(txtimp.getText().toString()));
            else
            print(Integer.valueOf(txtimp.getText().toString()));
        }
    }//GEN-LAST:event_btnImpActionPerformed
    private void print(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("orden",cod);             
                
                try 
                {
                        String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "constancia_salud_covid1.jasper";
                        JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                        JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
                        JasperViewer viewer = new JasperViewer(myPrint, false);
                        JOptionPane.showMessageDialog(null,direccionReporte);
                        viewer.setTitle("CONSTANCIA SALUD MARSA");
                        // viewer.setAlwaysOnTop(true);
                        viewer.setVisible(true);
                   
                 } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
 
 }
        private void print12(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("orden",cod);             
                
                try 
                {
                        String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "constancia_salud_covid3213.jasper";
                        JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                        JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
                        JasperViewer viewer = new JasperViewer(myPrint, false);
                        JOptionPane.showMessageDialog(null,direccionReporte);
                        viewer.setTitle("CONSTANCIA SALUD MARSA");
                        // viewer.setAlwaysOnTop(true);
                        viewer.setVisible(true);
                   
                 } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
 
 }
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
CargarSedes();
        if(OrdenExiste()){
            Actualizar();
        }else{
            if(!txtNorden.getText().isEmpty()){
                try {

                    if(Grabar()){
                        imprimir();
                        limpiar();
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(ConstanciaAltaMarsa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtimpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtimpActionPerformed
      CargarSedes1();
        if(!txtimp.getText().isEmpty()){
            if(sed.contains("Huancayo"))
                 print12(Integer.valueOf(txtimp.getText().toString()));
            else
            print(Integer.valueOf(txtimp.getText().toString()));
        }
    }//GEN-LAST:event_txtimpActionPerformed

    private void jDateChooser1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyPressed
       calcularDias();
    }//GEN-LAST:event_jDateChooser1KeyPressed

    private void jDateChooser2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser2KeyPressed
             calcularDias();

    }//GEN-LAST:event_jDateChooser2KeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        cerrarVentana();
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public void cerrarVentana(){
        // JOptionPane.showMessageDialog(null, "probando para cerrar el stament");
        System.out.println("cerro esta ventana");
        try {
            if (oConn1.setResult != null) 
         
            oConn1.setResult.close();
         
            if ( oConn1.sqlStmt != null) 
             
                oConn1.sqlStmt .close();
             
            if (oConn1.oConnection != null) 
             
                oConn1.oConnection.close();
        } catch (SQLException ex) {
            Logger.getLogger(contanciaSaludCovid1.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    this.dispose();
      //  System.exit(0);

    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(contanciaSaludCovid1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(contanciaSaludCovid1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(contanciaSaludCovid1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(contanciaSaludCovid1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new contanciaSaludCovid1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImp;
    private javax.swing.JButton btnLimpiar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextDias;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextFieldDNI;
    private javax.swing.JTextField jTextFieldNOMBREC;
    private javax.swing.JTextField jTextresultado;
    private javax.swing.JTextField txtEdadIn;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtimp;
    // End of variables declaration//GEN-END:variables
}
