/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sistema;

import Clases.GestorTime;
import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import Clases.clsOperacionesUsuarios;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.text.Element;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import sun.misc.BASE64Decoder;


/**
 *
 * @author Richard
 */
public class Aptitud_Trabajos_EnCaliente extends javax.swing.JInternalFrame {    
    clsConnection oConn = new clsConnection();
    clsFunciones  oFunc = new clsFunciones();
     clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
   
    public Aptitud_Trabajos_EnCaliente() {
        initComponents();
        txtCertifica.setText( clsGlobales.sNomOperador +" - "+ clsGlobales.sCMPOperador );
        timer.start();
        if(clsGlobales.Norden>0)
        {
            txtNorden.setText(clsGlobales.Norden.toString());
            btnEditarActionPerformed(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTipoExamen = new javax.swing.JTextField();
        lblHora = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGenero = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtContratista = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPuestoPostula = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        chkApto = new javax.swing.JCheckBox();
        chkRestriccion = new javax.swing.JCheckBox();
        chkNoAptoTemp = new javax.swing.JCheckBox();
        Fecha = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        FechaHasta = new com.toedter.calendar.JDateChooser();
        chkNoApto = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        txtCertifica = new javax.swing.JTextField();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        txtImprimir = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CERTIFICADO DE APTITUD PARA TRABAJOS EN CALIENTE");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Aptitud"));

        jLabel1.setText("NÂº Historia Clinica :");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });
        txtNorden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNordenKeyTyped(evt);
            }
        });

        jLabel2.setText("Tipo de Examen :");

        lblHora.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTipoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txtTipoExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar))
                    .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Certifica que el Sr."));

        jLabel3.setText("Nombres y Apellidos :");

        jLabel4.setText("Edad :");

        jLabel5.setText("DNI :");

        jLabel6.setText("Genero :");

        jLabel7.setText("Empresa :");

        jLabel8.setText("Contratista :");

        jLabel9.setText("Puesto al que Postula :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPuestoPostula))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContratista)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtContratista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPuestoPostula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        buttonGroup1.add(chkApto);
        chkApto.setText("APTO (para el puesto en el que trabaja o postula)                                 ");
        chkApto.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkApto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAptoActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkRestriccion);
        chkRestriccion.setText("APTO CON RESTRICCION (para el puesto en el que trabaja o postula)");
        chkRestriccion.setEnabled(false);
        chkRestriccion.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkRestriccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRestriccionActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkNoAptoTemp);
        chkNoAptoTemp.setText("NO APTO TEMPORAL (para el puesto en el que trabaja o postula)        ");
        chkNoAptoTemp.setEnabled(false);
        chkNoAptoTemp.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkNoAptoTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNoAptoTempActionPerformed(evt);
            }
        });

        Fecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaPropertyChange(evt);
            }
        });

        jLabel11.setText("Fecha :");

        jLabel13.setText("Fecha Venc.");

        buttonGroup1.add(chkNoApto);
        chkNoApto.setText("NO APTO (para el puesto en el que trabaja o postula)                           ");
        chkNoApto.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkNoApto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNoAptoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkRestriccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkNoAptoTemp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(chkApto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkNoApto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(chkApto)
                .addGap(7, 7, 7)
                .addComponent(chkRestriccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkNoAptoTemp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkNoApto)
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(FechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        jScrollPane2.setViewportView(txtObservaciones);

        jLabel12.setText("Medico que Certifica :");

        btnGrabar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chek.gif"))); // NOI18N
        btnGrabar.setText("Grabar/Actualizar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        txtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 908, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtCertifica, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGrabar)
                                        .addGap(10, 10, 10)
                                        .addComponent(btnLimpiar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnImprimir))
                            .addComponent(jLabel12)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel12)
                        .addGap(8, 8, 8)
                        .addComponent(txtCertifica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnGrabar)
                                .addComponent(btnLimpiar)
                                .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnImprimir)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static com.toedter.calendar.JDateChooser FechaNacimiento;
    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
          FechaNacimiento = new com.toedter.calendar.JDateChooser();
       if(!txtNorden.getText().isEmpty()){
          if(!OrdenExiste()){     
       String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,d.sexo_pa,"
               + "d.ocupacion_pa,n.razon_empresa,n.razon_contrata ,n.n_orden, n.cargo_de, "
               + "n.nom_examen  \n" +
"                FROM datos_paciente AS d \n" +
"                INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) \n" 
               + "WHERE n.n_orden ='"+txtNorden.getText() +"'";
         oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtEmpresa.setText(oConn.setResult.getString("razon_empresa")); 
                        txtContratista.setText(oConn.setResult.getString("razon_contrata"));
                        txtDni.setText(oConn.setResult.getString("cod_pa"));
                        txtTipoExamen.setText(oConn.setResult.getString("nom_examen"));
                        txtPuestoPostula.setText(oConn.setResult.getString("cargo_de"));
                        String sexo=oConn.setResult.getString("sexo_pa");
                       txtGenero.setText(sexo.equals("M")?"MASCULINO" : "FEMENINO");    
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) );
                        txtNorden.setEditable(false);
                     // FechaHoy.requestFocusInWindow();
                     
                        Fecha();
                        fechaHasta();
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Algunos Registros necesarios(Alta en Ex-Ocupacionales)");
                    }
                oConn.setResult.close();
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("APTITUD:" + ex.getMessage().toString());}
          }else { oFunc.SubSistemaMensajeInformacion("NÂ° Orden registrado" );}
           } 
    }//GEN-LAST:event_txtNordenActionPerformed
   void fechaHasta(){
        Calendar hasta = Calendar.getInstance();
        hasta.add(Calendar.YEAR, 1);
        FechaHasta.setCalendar(hasta);
    }
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        if (!txtNorden.getText().isEmpty()) {
            if (OrdenExiste()) {
                ActualizarAptitud();
            } else {
                try {
                    if (validar()) {
                        if (Grabar()) {
                            imprimir();
                            Limpiar();
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(ConstanciaCovid19.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void txtNordenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNordenKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtNordenKeyTyped

    private void txtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImprimirActionPerformed
        
    }//GEN-LAST:event_txtImprimirActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        if(!txtImprimir.getText().isEmpty()){
            try {
                print(Integer.valueOf(txtImprimir.getText()));
            } catch (IOException ex) {
                Logger.getLogger(Aptitud_Trabajos_EnCaliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void chkAptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAptoActionPerformed
       
        fechaHasta();
    }//GEN-LAST:event_chkAptoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
        String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
               + "d.sexo_pa,d.ocupacion_pa,n.razon_empresa,n.razon_contrata , n.cargo_de, "
               + "n.nom_examen, ca.fecha_examen,ca.fecha_hasta, \n" +
"                ca.nom_medico, ca.chkapto, ca.chkapto_restriccion, ca.chkno_apto_temporal, \n" +
"                ca.chkno_apto, ca.txtobservaciones, ca.horasalida,  l.txthemoglobina,"
               + " l.txthematocrito, l.txtvsg,l.txtglucosabio, l.txtcreatininabio \n" +
"               FROM datos_paciente AS d \n" +
"               INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) \n" +
"               INNER JOIN aptitud_trabajos_encaliente AS ca ON (ca.n_orden = n.n_orden) \n" +
               "left JOIN lab_clinico AS l ON (l.n_orden = n.n_orden)  "+
"               WHERE n.n_orden ='"+txtNorden.getText() +"'";
                oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtEmpresa.setText(oConn.setResult.getString("razon_empresa")); 
                        txtContratista.setText(oConn.setResult.getString("razon_contrata"));
                        txtDni.setText(oConn.setResult.getString("cod_pa"));
                        txtTipoExamen.setText(oConn.setResult.getString("nom_examen"));
                        txtPuestoPostula.setText(oConn.setResult.getString("cargo_de"));
                        String sexo=oConn.setResult.getString("sexo_pa");
                        txtGenero.setText(sexo.equals("M")?"MASCULINO" : "FEMENINO");      
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) );
                        Fecha.setDate(oConn.setResult.getDate("fecha_examen"));
                        FechaHasta.setDate(oConn.setResult.getDate("fecha_hasta"));
                        txtCertifica.setText(oConn.setResult.getString("nom_medico"));
                        chkApto.setSelected(oConn.setResult.getBoolean("chkapto"));
                        chkRestriccion.setSelected(oConn.setResult.getBoolean("chkapto_restriccion"));
                        chkNoAptoTemp.setSelected(oConn.setResult.getBoolean("chkno_apto_temporal"));
                        chkNoApto.setSelected(oConn.setResult.getBoolean("chkno_apto"));
                        txtObservaciones.setText(oConn.setResult.getString("txtobservaciones"));
                        lblHora.setText(oConn.setResult.getString("horasalida"));
                      
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Algunos Registros necesarios");
                    }
                oConn.setResult.close();
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Ficha Aptitud:" + ex.getMessage().toString());}
       
           } 
    }//GEN-LAST:event_btnEditarActionPerformed

    private void FechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaPropertyChange
        if (((JTextField) Fecha.getDateEditor().getUiComponent()).getText().trim().length() > 2) {
            Calendar hasta = Calendar.getInstance();
            hasta.setTime(Fecha.getDate());
            hasta.add(Calendar.YEAR, 1);
            FechaHasta.setCalendar(hasta);
        }
    }//GEN-LAST:event_FechaPropertyChange

    private void chkNoAptoTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNoAptoTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkNoAptoTempActionPerformed

    private void chkRestriccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRestriccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkRestriccionActionPerformed

    private void chkNoAptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNoAptoActionPerformed
        // TODO add your handling code here:
        if(chkNoApto.isSelected())
           FechaHasta.setDate(null);
    }//GEN-LAST:event_chkNoAptoActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        cerrarVentana();
    }//GEN-LAST:event_formInternalFrameClosing

  public boolean OrdenExiste(){
        boolean bResultado=false;
        if(!txtNorden.getText().isEmpty()){
        String sQuery;

        sQuery  = "Select n_orden from aptitud_trabajos_encaliente Where n_orden ="+txtNorden.getText();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("NÃºmero de Orden Utilizado");
//              txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        }       
        return bResultado;
    }  
//  public void levantarObservacion(){
//       String strSqlStmt;
//        strSqlStmt = "DELETE FROM observaciones\n" +
//                    " WHERE n_orden='" + txtNorden.getText() + "'";
//        
//        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
//            oFunc.SubSistemaMensajeInformacion("Se levanto la Observacion con Ãxito");
//        } else {
//            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
//        }
//  }
  private boolean Grabar() throws SQLException{
        boolean bResult = false;
        String strSqlStmt;
        String Query;
        strSqlStmt ="INSERT INTO aptitud_trabajos_encaliente( n_orden, cod_pa, fecha_examen";
        Query= "values ('"+ txtNorden.getText()+"','"+txtDni.getText()+"','"+Fecha.getDate()+"'";
        if (((JTextField) FechaHasta.getDateEditor().getUiComponent()).getText().trim().length() > 1) {
            strSqlStmt += ", fecha_hasta";
            Query+= ",'"+FechaHasta.getDate()+"'";
        }
            strSqlStmt += ", nom_medico, chkapto,chkapto_restriccion, chkno_apto_temporal, chkno_apto, txtobservaciones, \n" +
"            horasalida,user_registro ";       
            Query+= ",'"+txtCertifica.getText()+  "','"+chkApto.isSelected()+"'"
                    + ",'"+chkRestriccion.isSelected()+  "','"+chkNoAptoTemp.isSelected()+ "','"+chkNoApto.isSelected()+"'"
                    + ",'"+txtObservaciones.getText()+"','"+lblHora.getText()+"','"+clsGlobales.sUser+"'";      

             if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + Query.concat(")"))){
//                   oConn.setResult.next();
                    oFunc.SubSistemaMensajeInformacion("Aptitud Registrada");
                   bResult = true;
               }
              
                try {
                    oConn.sqlStmt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Aptitud_Trabajos_EnCaliente.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                return bResult;       
        }
    
void Fecha(){
Date fechaDate = new Date();
//SimpleDateFormat formateador = new SimpleDateFormat("'HUAMACHUCO - ' EEEEE dd MMMMM yyyy");
Fecha.setDate(fechaDate);
}
    private boolean validar() {
        boolean bResultado = true;
        if (((JTextField) Fecha.getDateEditor().getUiComponent()).getText().trim().length() < 2) {
            oFunc.SubSistemaMensajeError("Ingrese Fecha ");
            bResultado = false;
        }
        if (buttonGroup1.isSelected(null)) {
            oFunc.SubSistemaMensajeError(" Seleccione: si esta Apto");
            bResultado = false;
        }
        return bResultado;
    }
  private boolean imprimir(){
    boolean im = false;
int seleccion = JOptionPane.showOptionDialog(
    this, // Componente padre
    "Â¿Desea Imprimir?", //Mensaje
    "Seleccione una opciÃ³n", // TÃ­tulo
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,    // null para icono por defecto.
    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
    "Si");
      if (seleccion != -1) {
          if ((seleccion + 1) == 1) {
              try {
                  printer(Integer.valueOf(txtNorden.getText()));
              } catch (IOException ex) {
                  Logger.getLogger(Aptitud_Trabajos_EnCaliente.class.getName()).log(Level.SEVERE, null, ex);
              }
              im = true;
          } else {
              // PRESIONO NO
          }
      }
    return im;
}
private void Limpiar(){
    txtNorden.setText(null);
    txtTipoExamen.setText(null);
    txtNombres.setText(null);
    txtDni.setText(null);
    txtEdad.setText(null);
    txtGenero.setText(null);
    txtEmpresa.setText(null);
    txtContratista.setText(null);
    txtPuestoPostula.setText(null);
    txtObservaciones.setText(null);
    buttonGroup1.clearSelection();
    Fecha.setDate(null);
    FechaHasta.setDate(null);
    txtNorden.setEditable(true);
    txtNorden.requestFocus();
 
}
  private void print(Integer cod) throws IOException{
             String dniUsuario=oPe.consultarDni("aptitud_trabajos_encaliente", String.valueOf(cod));
                String base64Sello=""; 
       try {

           base64Sello=oPe.consumirApiSello(String.valueOf(dniUsuario));           
       } catch (Exception ex) {
           Logger.getLogger(AntecedentesPatologicos.class.getName()).log(Level.SEVERE, null, ex);
       }

                
        Map parameters = new HashMap();
        parameters.put("Norden", cod);

              if(!base64Sello.contains("OTROJASPER"))
              {
                BufferedImage image = null;
                byte[] imageByte;

                BASE64Decoder decoder = new BASE64Decoder();
                    imageByte = decoder.decodeBuffer(base64Sello);
                ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);
                image = ImageIO.read(bis);
                bis.close();
                
                
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(image, "png", baos); 
                InputStream stream = new ByteArrayInputStream(baos.toByteArray());
                
                
                parameters.put("Sello",stream);             
              }
              
        try {
            String direccionReporte="";
            if( base64Sello.contains("OTROJASPER")){

             direccionReporte= System.getProperty("user.dir")
                    + "/reportes/Aptitud_Trabajos_EnCaliente.jasper";
            }
            else
             direccionReporte= System.getProperty("user.dir")
                    + "/reportes/Aptitud_Trabajos_EnCaliente_Digitalizado.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer viewer = new JasperViewer(myPrint, false);
                    viewer.setTitle("CERTIFICADO DE APTITUD PARA TRABAJOS EN CALIENTE");
                   // viewer.setAlwaysOnTop(true);
                    viewer.setVisible(true);
                 } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
 }
   private void printer(Integer cod) throws IOException{
         String dniUsuario=oPe.consultarDni("aptitud_trabajos_encaliente", String.valueOf(cod));
                String base64Sello=""; 
       try {

           base64Sello=oPe.consumirApiSello(String.valueOf(dniUsuario));           
       } catch (Exception ex) {
           Logger.getLogger(AntecedentesPatologicos.class.getName()).log(Level.SEVERE, null, ex);
       }

                
        Map parameters = new HashMap();
        parameters.put("Norden", cod);

              if(!base64Sello.contains("OTROJASPER"))
              {
                BufferedImage image = null;
                byte[] imageByte;

                BASE64Decoder decoder = new BASE64Decoder();
                    imageByte = decoder.decodeBuffer(base64Sello);
                ByteArrayInputStream bis = new ByteArrayInputStream(imageByte);
                image = ImageIO.read(bis);
                bis.close();
                
                
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                ImageIO.write(image, "png", baos); 
                InputStream stream = new ByteArrayInputStream(baos.toByteArray());
                
                
                parameters.put("Sello",stream);             
              }
              
        try {
            String direccionReporte="";
            if( base64Sello.contains("OTROJASPER")){

             direccionReporte= System.getProperty("user.dir")
                    + "/reportes/Aptitud_Trabajos_EnCaliente.jasper";
            }
            else
             direccionReporte= System.getProperty("user.dir")
                    + "/reportes/Aptitud_Trabajos_EnCaliente_Digitalizado.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                  JasperPrintManager.printReport(jasperPrint,true);
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
   Timer timer = new Timer(1000, new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            Date HorNew = new Date();
            SimpleDateFormat fechaforma = new SimpleDateFormat("hh:mm:ss a");
            String FfechaSystemA = fechaforma.format(HorNew);

            GestorTime.setFfechaSystem(FfechaSystemA);
            lblHora.setText(GestorTime.getFfechaSystem());
        }
    });
    
    public void ActualizarAptitud(){
        String sCodigo=txtNorden.getText();
        String strSqlStmt;
        strSqlStmt="UPDATE aptitud_trabajos_encaliente\n" +
                "   SET fecha_examen='"+Fecha.getDate()+"'";
            if (((JTextField) FechaHasta.getDateEditor().getUiComponent()).getText().trim().length() > 1) {
               strSqlStmt+= ",fecha_hasta='"+FechaHasta.getDate()+"'";
            }
                strSqlStmt+= ",nom_medico='"+txtCertifica.getText()+"'"
                + ",chkapto='"+chkApto.isSelected()+"'"
                + ",chkapto_restriccion='"+chkRestriccion.isSelected()+"'"
                + ",chkno_apto_temporal='"+chkNoAptoTemp.isSelected()+"'"
                + ",chkno_apto='"+chkNoApto.isSelected()+"'"
                + ",txtobservaciones='"+txtObservaciones.getText()+"'"
                + ",horasalida='"+lblHora.getText()+"'" +
        " WHERE n_orden='" + sCodigo + "'";
  
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Ãxito");
            imprimir();
            Limpiar();
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
        
        try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(Aptitud_Trabajos_EnCaliente.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void cerrarVentana(){
        // JOptionPane.showMessageDialog(null, "probando para cerrar el stament");
        System.out.println("cerro esta ventana");
        try {
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(Aptitud_Trabajos_EnCaliente.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    this.dispose();
      //  System.exit(0);

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha;
    private com.toedter.calendar.JDateChooser FechaHasta;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkApto;
    private javax.swing.JCheckBox chkNoApto;
    private javax.swing.JCheckBox chkNoAptoTemp;
    private javax.swing.JCheckBox chkRestriccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHora;
    private javax.swing.JTextField txtCertifica;
    private javax.swing.JTextField txtContratista;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtImprimir;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtPuestoPostula;
    private javax.swing.JTextField txtTipoExamen;
    // End of variables declaration//GEN-END:variables
}
