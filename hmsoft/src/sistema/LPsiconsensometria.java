/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsOperacionesUsuarios;
import com.toedter.calendar.JDateChooser;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author admin
 */
public class LPsiconsensometria extends javax.swing.JInternalFrame {

    clsConnection oConn = new clsConnection();
    clsFunciones  oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
   public LPsiconsensometria() {
       
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        FechaEx = new com.toedter.calendar.JDateChooser();
        btnLimpiar = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        txtImprimir = new javax.swing.JTextField();
        btnImprimir6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        chkO = new javax.swing.JCheckBox();
        chkA = new javax.swing.JCheckBox();
        chkB = new javax.swing.JCheckBox();
        chkAB = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        rbRHpositivo = new javax.swing.JRadioButton();
        rbRHnegativo = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        txtHemoglobina = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtHematocrito = new javax.swing.JTextField();
        txtGrupos = new javax.swing.JTextField();
        txtFactor = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtColesterol = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLDLColesterol = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHDLColesterol = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtVLDLColesterol = new javax.swing.JTextField();
        txtTrigliseridos = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("LABORATORIO");

        jLabel9.setText("Nro Ficha:");

        jLabel10.setText("Nombres:");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel11.setText("Edad: ");

        jLabel118.setText("Fecha :");

        FechaEx.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaExPropertyChange(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setMnemonic('l');
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "IMPRIMIR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(0, 0, 102))); // NOI18N

        txtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImprimirActionPerformed(evt);
            }
        });

        btnImprimir6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        btnImprimir6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir6)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtImprimir)
            .addComponent(btnImprimir6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrar.png"))); // NOI18N
        jButton2.setText("Guardar/Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("HEMATOLOGIA"));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("PRUEBAS ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("RESULTADOS ");

        jLabel8.setText("Grupo Sangu√≠neo :");

        buttonGroup1.add(chkO);
        chkO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkO.setText("O");
        chkO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkOActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkA);
        chkA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkA.setText("A");
        chkA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkB);
        chkB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkB.setText("B");
        chkB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBActionPerformed(evt);
            }
        });

        buttonGroup1.add(chkAB);
        chkAB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkAB.setText("AB");
        chkAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkABActionPerformed(evt);
            }
        });

        jLabel15.setText("Factor Rh :");

        buttonGroup2.add(rbRHpositivo);
        rbRHpositivo.setText("Rh(+)");
        rbRHpositivo.setPreferredSize(new java.awt.Dimension(55, 15));
        rbRHpositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRHpositivoActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbRHnegativo);
        rbRHnegativo.setText("Rh(-)");
        rbRHnegativo.setPreferredSize(new java.awt.Dimension(51, 15));
        rbRHnegativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRHnegativoActionPerformed(evt);
            }
        });

        jLabel18.setText("Hemoglobina :");

        txtHemoglobina.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtHemoglobina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHemoglobinaActionPerformed(evt);
            }
        });
        txtHemoglobina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHemoglobinaKeyTyped(evt);
            }
        });

        jLabel19.setText("Hematocrito :");

        txtHematocrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHematocritoActionPerformed(evt);
            }
        });

        txtGrupos.setEditable(false);

        txtFactor.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(rbRHnegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbRHpositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13)
                                            .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(chkO)
                                                .addGap(0, 0, 0)
                                                .addComponent(chkA)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(chkB)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkAB))
                                    .addComponent(txtGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtHemoglobina, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                .addComponent(txtHematocrito)))))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(chkO)
                    .addComponent(chkA)
                    .addComponent(chkB)
                    .addComponent(chkAB))
                .addGap(2, 2, 2)
                .addComponent(txtGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(rbRHpositivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbRHnegativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(txtFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel18)
                    .addComponent(txtHemoglobina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel19)
                    .addComponent(txtHematocrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("BIOQUIMICA"));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("PRUEBAS ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("RESULTADOS ");

        jLabel5.setText("Colesterol Total :");

        txtColesterol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColesterolActionPerformed(evt);
            }
        });
        txtColesterol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColesterolKeyTyped(evt);
            }
        });

        jLabel6.setText("L.D.L Colesterol :");

        txtLDLColesterol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLDLColesterolActionPerformed(evt);
            }
        });
        txtLDLColesterol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLDLColesterolKeyTyped(evt);
            }
        });

        jLabel7.setText("H.D.L Colesterol :");

        txtHDLColesterol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHDLColesterolActionPerformed(evt);
            }
        });
        txtHDLColesterol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHDLColesterolKeyTyped(evt);
            }
        });

        jLabel23.setText("V.L.D.L Colesterol :");

        txtVLDLColesterol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVLDLColesterolActionPerformed(evt);
            }
        });
        txtVLDLColesterol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVLDLColesterolKeyTyped(evt);
            }
        });

        txtTrigliseridos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrigliseridosActionPerformed(evt);
            }
        });
        txtTrigliseridos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTrigliseridosKeyTyped(evt);
            }
        });

        jLabel24.setText("Trigliceridos :");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel14)
                        .addGap(78, 78, 78)
                        .addComponent(jLabel16))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addComponent(txtColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(txtLDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addComponent(txtHDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel23)
                        .addGap(4, 4, 4)
                        .addComponent(txtVLDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTrigliseridos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5))
                    .addComponent(txtColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTrigliseridos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(txtLDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(txtHDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel23))
                    .addComponent(txtVLDLColesterol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(jButton2)
                                        .addGap(39, 39, 39)
                                        .addComponent(btnLimpiar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FechaEx, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(34, 34, 34)))
                        .addGap(72, 72, 72))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel118)
                            .addComponent(btnEditar))
                        .addComponent(FechaEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(btnLimpiar))
                        .addContainerGap())
                    .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("PSICOSENSOMETRIA", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        // TODO add your handling code here:
        JDateChooser FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
            if(!OrdenExiste()){
                String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
                + "d.sexo_pa,n.tipoprueba "
                + "FROM datos_paciente AS d "
                + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) "
                + "WHERE n.n_orden ='"+txtNorden.getText() +"'";
                oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) +" A√ëOS" );
                        oPe.fecha(FechaEx);
                        //   oPe.fecha(FechaHotel);
                    }else{
                        oFunc.SubSistemaMensajeError("No se encuentra registrado");
                    }
                    oConn.setResult.close();
                } catch (SQLException ex) {
                    oFunc.SubSistemaMensajeInformacion("LPsicosensometria:" + ex.getMessage().toString());}
            }else{
                oFunc.SubSistemaMensajeError("N¬∞ orden regitrado");
            }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void FechaExPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaExPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaExPropertyChange

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImprimirActionPerformed

    private void btnImprimir6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir6ActionPerformed
        // TODO add your handling code here:
        print (Integer.parseInt(txtImprimir.getText()));
    }//GEN-LAST:event_btnImprimir6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (OrdenExiste()) {
            Actualizar();
        } else {
            if (!txtNorden.getText().isEmpty()) {
                try {
                    if (validar()) {
                        if (Grabar()) {
                            imprimir();
                            limpiar();
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(InformePsicolaboral.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        JDateChooser FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
            String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,\n" +
"           t.* " +
"                   FROM datos_paciente AS d \n" +
"                   INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa)    \n" +
"                   INNER JOIN lpsiconsensometria AS t ON (t.n_orden = n.n_orden)  \n" +
"                   WHERE t.n_orden ="+txtNorden.getText()+";";
            oConn.FnBoolQueryExecute(Sql);
            try {
                if (oConn.setResult.next()) {
                    txtNombres.setText(oConn.setResult.getString("nombre"));
                    FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                    txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar()))+" A√ëOS" );
                    txtGrupos.setText(oConn.setResult.getString("txtgrupo_sang"));
                    txtFactor.setText(oConn.setResult.getString("txtfactor"));
                    txtHemoglobina.setText(oConn.setResult.getString("txthemoglobina"));
                    txtHematocrito.setText(oConn.setResult.getString("txthematocrito"));
                    txtColesterol.setText(oConn.setResult.getString("txtcolesterolt"));
                    txtTrigliseridos.setText(oConn.setResult.getString("txttrigliceridos"));
                    txtHDLColesterol.setText(oConn.setResult.getString("txthdlcolesterol"));
                    txtLDLColesterol.setText(oConn.setResult.getString("txtldlcolesterol"));
                    txtVLDLColesterol.setText(oConn.setResult.getString("vldlcolesterol"));
                    FechaEx.setDate(oConn.setResult.getDate("fecha"));
                }else{
                    oFunc.SubSistemaMensajeError("N¬∞ orden no registrado");
                }
                oConn.setResult.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeInformacion("Ficha LAnexo16A:" + ex.getMessage().toString());}
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void chkOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkOActionPerformed
        txtGrupos.setText("O");
    }//GEN-LAST:event_chkOActionPerformed

    private void chkAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAActionPerformed
        txtGrupos.setText("A");
    }//GEN-LAST:event_chkAActionPerformed

    private void chkBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBActionPerformed
        txtGrupos.setText("B");
    }//GEN-LAST:event_chkBActionPerformed

    private void chkABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkABActionPerformed
        txtGrupos.setText("AB");
    }//GEN-LAST:event_chkABActionPerformed

    private void rbRHpositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRHpositivoActionPerformed
        txtFactor.setText("+");
        /*  if(txtGrupoFacLab.getText() == null ? txtGFSPrevio.getText() == null : !txtGrupoFacLab.getText().equals(txtGFSPrevio.getText())){
            oFunc.SubSistemaMensajeError("Grupo Sanguinio incongruente por favotr revisar");
        }*/
    }//GEN-LAST:event_rbRHpositivoActionPerformed

    private void rbRHnegativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRHnegativoActionPerformed
        txtFactor.setText("-");
        /*        if(txtGrupoFacLab.getText() == null ? txtGFSPrevio.getText() == null : !txtGrupoFacLab.getText().equals(txtGFSPrevio.getText())){
            oFunc.SubSistemaMensajeError("Grupo Sanguinio incongruente por favotr revisar");
        }*/
    }//GEN-LAST:event_rbRHnegativoActionPerformed

    private void txtHemoglobinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHemoglobinaActionPerformed
//        if(!txtNorden.getText().isEmpty()){
//            String sql="SELECT dp.sexo_pa FROM datos_paciente as dp "
//            +"inner join n_orden_ocupacional AS n ON(dp.cod_pa = n.cod_pa) "
//            + "where n.n_orden="+txtNorden.getText().toString()+"";
//            oConn.FnBoolQueryExecute(sql);
//            String sexo;
//            try {
//                if (oConn.setResult.next())
//                {
//                    sexo = oConn.setResult.getString("sexo_pa");
//                    float hemoglobina=Float.parseFloat(txtHemoglobina.getText().toString());
//                    if ("M".equals(sexo)) {
//                        if(hemoglobina < 14 || hemoglobina > 20){
//                            //     System.out.println("entro a pintar de rojo:"+txtHemoglobina.getText().toString());
//                            txtHemoglobina.setForeground(Color.red);
//                        }
//                        else{
//                            txtHemoglobina.setForeground(Color.BLACK);
//                        }
//                    }
//                    if ("F".equals(sexo)) {
//                        if(hemoglobina < 13.5 || hemoglobina > 20){
//                            txtHemoglobina.setForeground(Color.red);
//                        }
//                        else{
//                            txtHemoglobina.setForeground(Color.BLACK);
//                        }
//                    }
//                }
//                oConn.setResult.close();
//            } catch (SQLException ex) {
//                oFunc.SubSistemaMensajeError("ERROR EN CONSULTA");
//            }
//        }
        txtHematocrito.requestFocus();
    }//GEN-LAST:event_txtHemoglobinaActionPerformed

    private void txtHemoglobinaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHemoglobinaKeyTyped

    }//GEN-LAST:event_txtHemoglobinaKeyTyped

    private void txtHematocritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHematocritoActionPerformed
        txtColesterol.requestFocus();
    }//GEN-LAST:event_txtHematocritoActionPerformed

    private void txtColesterolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColesterolActionPerformed
//        if (!txtColesterol.getText().equals("-")) {
//            float colesterol = Float.parseFloat(txtColesterol.getText().toString());
//            if (colesterol > 200) {
//                txtColesterol.setForeground(Color.red);
//            }
//        }
        txtTrigliseridos.requestFocus();
    }//GEN-LAST:event_txtColesterolActionPerformed

    private void txtColesterolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColesterolKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtColesterolKeyTyped

    private void txtLDLColesterolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLDLColesterolActionPerformed
//        if (!txtLDLColesterol.getText().equals("-")) {
//            float ldlcolesterol = Float.parseFloat(txtLDLColesterol.getText().toString());
//            if (ldlcolesterol > 129) {
//                txtLDLColesterol.setForeground(Color.red);
//            }
//        }
        txtHDLColesterol.requestFocus();
    }//GEN-LAST:event_txtLDLColesterolActionPerformed

    private void txtLDLColesterolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLDLColesterolKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtLDLColesterolKeyTyped

    private void txtHDLColesterolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHDLColesterolActionPerformed
//        if (!txtHDLColesterol.getText().equals("-")) {
//            float HDLcolesterol = Float.parseFloat(txtHDLColesterol.getText().toString());
//            if (HDLcolesterol < 40) {
//                txtHDLColesterol.setForeground(Color.red);
//            }
//        }
        txtVLDLColesterol.requestFocus();
    }//GEN-LAST:event_txtHDLColesterolActionPerformed

    private void txtHDLColesterolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHDLColesterolKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtHDLColesterolKeyTyped

    private void txtVLDLColesterolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVLDLColesterolActionPerformed
//        if (!txtVLDLColesterol.getText().equals("-")) {
//            float VLDcolesterol = Float.parseFloat(txtVLDLColesterol.getText().toString());
//            if (VLDcolesterol > 30) {
//                txtVLDLColesterol.setForeground(Color.red);
//            }
    }//GEN-LAST:event_txtVLDLColesterolActionPerformed

    private void txtVLDLColesterolKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVLDLColesterolKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtVLDLColesterolKeyTyped

    private void txtTrigliseridosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrigliseridosActionPerformed
//        if (!txtVLDLColesterol.getText().equals("-")) {
//            float trigliceridos = Float.parseFloat(txtTrigliseridos.getText().toString());
//            if (trigliceridos > 150) {
//                txtTrigliseridos.setForeground(Color.red);
//            }
//        }
        txtLDLColesterol.requestFocusInWindow();
    }//GEN-LAST:event_txtTrigliseridosActionPerformed

    private void txtTrigliseridosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrigliseridosKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtTrigliseridosKeyTyped
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaEx;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnImprimir6;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkA;
    private javax.swing.JCheckBox chkAB;
    private javax.swing.JCheckBox chkB;
    private javax.swing.JCheckBox chkO;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbRHnegativo;
    private javax.swing.JRadioButton rbRHpositivo;
    private javax.swing.JTextField txtColesterol;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtFactor;
    private javax.swing.JTextField txtGrupos;
    private javax.swing.JTextField txtHDLColesterol;
    private javax.swing.JTextField txtHematocrito;
    private javax.swing.JTextField txtHemoglobina;
    private javax.swing.JTextField txtImprimir;
    private javax.swing.JTextField txtLDLColesterol;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtTrigliseridos;
    private javax.swing.JTextField txtVLDLColesterol;
    // End of variables declaration//GEN-END:variables
    
    public boolean OrdenExiste(){
        boolean bResultado=false;
         if (!txtNorden.getText().isEmpty()) {
             String sQuery;
             sQuery = "Select n_orden from lpsiconsensometria where n_orden=" + txtNorden.getText();
             oConn.FnBoolQueryExecute(sQuery);
             try {
                 if (oConn.setResult.next()) {
                     bResultado = true;
                 }
                 oConn.setResult.close();
             } catch (SQLException ex) {
             }
         }      
        return bResultado;
     }
     private boolean validar() {
        boolean bResultado = true;

        if (((JTextField) FechaEx.getDateEditor().getUiComponent()).getText().trim().length() < 2) {
            oFunc.SubSistemaMensajeError("Ingrese Fecha ");
            bResultado = false;
        }

        return bResultado;
    }
   
    public void limpiar() {
        txtNorden.setText("");
        txtNombres.setText("");
        txtEdad.setText("");
        FechaEx.setDate(null);
        txtGrupos.setText(null);
        txtFactor.setText(null);
        txtHemoglobina.setText(null);
        txtHematocrito.setText(null);
        txtColesterol.setText(null);
        txtTrigliseridos.setText(null);
        txtHDLColesterol.setText(null);
        txtLDLColesterol.setText(null);
        txtVLDLColesterol.setText(null);
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
         

    }
     private boolean imprimir(){
        boolean im = false;
        int seleccion = JOptionPane.showOptionDialog(
            this, // Componente padre
            "¬øDesea Imprimir?", //Mensaje
            "Seleccione una opci√≥n", // T√≠tulo
            JOptionPane.YES_NO_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,    // null para icono por defecto.
            new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
            "Si");
            if (seleccion != -1)
            {
           if((seleccion + 1)==1)
           {
              printer(Integer.valueOf(txtNorden.getText().toString()));
               im = true;
           }
           else
           {
              // PRESIONO NO
             }
            }
            return im;

        }
    private void printer(Integer cod) {
        Map parameters = new HashMap();
        parameters.put("Norden", cod);
        String direccionReporte;
        try {
            direccionReporte= System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "LPsicosensometria.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint jasperPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperPrintManager.printReport(jasperPrint, true);

        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void print(Integer cod) {
        Map parameters = new HashMap();
        parameters.put("Norden", cod);
        String direccionReporte;
        try {
            direccionReporte= System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "LPsicosensometria.jasper";           
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("FORMATO DE LABORATORIO");
            // viewer.setAlwaysOnTop(true);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public void Actualizar() {
        String sCodigo = txtNorden.getText();
        String strSqlStmt;
        strSqlStmt = "UPDATE  lpsiconsensometria\n "
                + "   SET fecha='" + FechaEx.getDate() + "',"
                + "       txtgrupo_sang='" + txtGrupos.getText() + "',"
                + "       txtfactor='" + txtFactor.getText() + "',"
                + "       txthemoglobina='" + txtHemoglobina.getText() + "',"
                + "       txthematocrito='" + txtHematocrito.getText() + "',"
                + "       txtcolesterolt='" + txtColesterol.getText() + "',"
                + "       txttrigliceridos='" + txtTrigliseridos.getText() + "',"
                + "       txthdlcolesterol='" + txtHDLColesterol.getText() + "',"
                + "       txtldlcolesterol='" + txtLDLColesterol.getText() + "',"
                 + "      vldlcolesterol='" + txtVLDLColesterol.getText() + "'"
                + "   WHERE n_orden=" + sCodigo + ";";       
        //  System.out.println(strSqlStmt);
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con √âxito");
            imprimir();
            limpiar();
            try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(LPsiconsensometria.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
    }
     private boolean Grabar() throws SQLException {
        boolean bResult = false;
        String strSqlStmt = "INSERT INTO lpsiconsensometria(\n" +
"            n_orden, fecha, txtgrupo_sang, txtfactor, txthemoglobina, txthematocrito, \n" +
"            txtcolesterolt, txttrigliceridos, txthdlcolesterol, txtldlcolesterol, \n" +
"            vldlcolesterol)";
        strSqlStmt += " values(" + txtNorden.getText() + ",'"
                + FechaEx.getDate() + "','"
                + txtGrupos.getText() + "','"
                + txtFactor.getText() + "','"
                + txtHemoglobina.getText() + "','"
                + txtHematocrito.getText() + "','"
                + txtColesterol.getText() + "','"
                + txtTrigliseridos.getText() + "','"
                + txtHDLColesterol.getText() + "','"
                + txtLDLColesterol.getText() + "','"
                + txtVLDLColesterol.getText() + "'"
                + " ) ";
        // System.out.println(strSqlStmt);
//        oFunc.SubSistemaMensajeError(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
//                   oConn.setResult.next();
            oFunc.SubSistemaMensajeInformacion("Examen Registrada");

            bResult = true;
            try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(LPsiconsensometria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return bResult;
    }
  
}
