/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Caja.RegistrarCliente;
import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import Clases.clsOperacionesUsuarios;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author admin
 */
public final class ElectroCardiograma extends javax.swing.JInternalFrame {
          clsConnection oConn = new clsConnection();
   clsFunciones  oFunc = new clsFunciones();
   clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    DefaultTableModel model;
    /**
     * Creates new form ElectroCardiograma
     */
    public class Imagen extends javax.swing.JPanel{
        public Imagen() {
            this.setSize(200,200); //se selecciona el tamaño del panel
        }

        //Se crea un método cuyo parámetro debe ser un objeto Graphics
        public void paint(Graphics grafico) {
            Dimension height = getSize();

            //Se selecciona la imagen que tenemos en el paquete de la //ruta del programa
            ImageIcon Img = new ImageIcon(getClass().getResource("/imagenes/ekg.png"));

            //se dibuja la imagen que tenemos en el paquete Images //dentro de un panel
            grafico.drawImage(Img.getImage(), 0, 0, height.width, height.height, null);

            setOpaque(false);
            super.paintComponent(grafico);
        }
    }
    public void cerrarVentana(){
        // JOptionPane.showMessageDialog(null, "probando para cerrar el stament");
        System.out.println("cerro esta ventana");
              try {
                  oConn.sqlStmt.close();
              } catch (SQLException ex) {
                  Logger.getLogger(ElectroCardiograma.class.getName()).log(Level.SEVERE, null, ex);
              }
  
    this.dispose();
      //  System.exit(0);

    }
    public ElectroCardiograma() {
        initComponents();
           
        sbCargarDatosElectro("");
        Imagen imagen =new Imagen ();
        jPanel6.add(imagen);
        jPanel6.repaint();
        if(clsGlobales.Norden>0)
        {
            txtNorden.setText(clsGlobales.Norden.toString());
            btnEditarActionPerformed(null);
        }
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombres = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        FechaExamen = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtRitmo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtFC = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPR = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtQRS = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtQTC = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtEje = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtRecomenDaciones = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtContratista = new javax.swing.JTextField();
        txtEmpresa = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel20 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbInformeElectrocardiograma = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        txtBuscarCod = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txt49 = new javax.swing.JTextField();
        txt50 = new javax.swing.JTextField();
        txt51 = new javax.swing.JTextField();
        txt52 = new javax.swing.JTextField();
        txt53 = new javax.swing.JTextField();
        txt54 = new javax.swing.JTextField();
        txt56 = new javax.swing.JTextField();
        txt58 = new javax.swing.JTextField();
        txt59 = new javax.swing.JTextField();
        txt60 = new javax.swing.JTextField();
        txt61 = new javax.swing.JTextField();
        txt62 = new javax.swing.JTextField();
        txt63 = new javax.swing.JTextField();
        txt64 = new javax.swing.JTextField();
        txt65 = new javax.swing.JTextField();
        txt66 = new javax.swing.JTextField();
        txt67 = new javax.swing.JTextField();
        txt69 = new javax.swing.JTextField();
        txt70 = new javax.swing.JTextField();
        txt71 = new javax.swing.JTextField();
        txt72 = new javax.swing.JTextField();
        txt78 = new javax.swing.JTextField();
        txt74 = new javax.swing.JTextField();
        txt75 = new javax.swing.JTextField();
        txt76 = new javax.swing.JTextField();
        txt79 = new javax.swing.JTextField();
        txt80 = new javax.swing.JTextField();
        txt81 = new javax.swing.JTextField();
        txt82 = new javax.swing.JTextField();
        txt83 = new javax.swing.JTextField();
        txt85 = new javax.swing.JTextField();
        txt84 = new javax.swing.JTextField();
        txt86 = new javax.swing.JTextField();
        txt87 = new javax.swing.JTextField();
        txt88 = new javax.swing.JTextField();
        txt73 = new javax.swing.JTextField();
        btnLimpiarGrafico = new javax.swing.JButton();
        chkNormal = new javax.swing.JCheckBox();
        chkFisiologica = new javax.swing.JCheckBox();
        chkAsintomatica = new javax.swing.JCheckBox();
        chkRamaDerecha = new javax.swing.JCheckBox();
        chkCardiacoI = new javax.swing.JCheckBox();
        chkCardiacoD = new javax.swing.JCheckBox();
        chkSinusual = new javax.swing.JCheckBox();
        chkPR = new javax.swing.JCheckBox();
        chkQRS = new javax.swing.JCheckBox();
        chkQTC = new javax.swing.JCheckBox();
        chkEAnual = new javax.swing.JCheckBox();
        chkEMeses = new javax.swing.JCheckBox();
        chkExCardiologo = new javax.swing.JCheckBox();
        atxtObservacionesAltura = new javax.swing.JScrollPane();
        txtHallazgo = new javax.swing.JTextArea();
        btnEditar = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Electrocardiograma");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        txtNombres.setEditable(false);
        txtNombres.setBackground(new java.awt.Color(246, 202, 56));

        jLabel2.setText("Nombre :");

        jLabel4.setText("N° Orden :");

        txtNorden.setBackground(new java.awt.Color(231, 231, 231));
        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha Informe :");

        FechaExamen.setBackground(new java.awt.Color(231, 231, 231));
        FechaExamen.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaExamenPropertyChange(evt);
            }
        });

        jLabel8.setText("Ritmo :");

        txtRitmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRitmoActionPerformed(evt);
            }
        });

        jLabel9.setText("F.C :");

        txtFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFCActionPerformed(evt);
            }
        });

        jLabel10.setText("P.R :");

        txtPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPRActionPerformed(evt);
            }
        });

        jLabel11.setText("Q.R.S :");

        txtQRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQRSActionPerformed(evt);
            }
        });

        jLabel12.setText("Q.T.C :");

        txtQTC.setText("N/E");
        txtQTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQTCActionPerformed(evt);
            }
        });

        jLabel13.setText("Eje :");

        txtEje.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEjeActionPerformed(evt);
            }
        });

        jLabel14.setText("Hallazgo :");

        jLabel16.setText("Recomendaciones :");

        txtRecomenDaciones.setColumns(20);
        txtRecomenDaciones.setLineWrap(true);
        txtRecomenDaciones.setRows(5);
        jScrollPane1.setViewportView(txtRecomenDaciones);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/radio.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Opciones"));

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrar.png"))); // NOI18N
        btnGuardar.setText("Guardar/Actualizar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCerrar.setBackground(new java.awt.Color(255, 255, 0));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(18, 18, 18)
                .addComponent(btnCerrar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnLimpiar)
                    .addComponent(btnCerrar))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jLabel5.setText("Empresa Contratista :");

        jLabel6.setText("Empresa:");

        txtContratista.setEditable(false);

        txtEmpresa.setEditable(false);

        jLabel18.setText("Fecha Nac:");

        FechaNacimiento.setBackground(new java.awt.Color(231, 231, 231));
        FechaNacimiento.setEnabled(false);

        jLabel20.setText("Edad:");

        txtEdad.setEditable(false);

        jLabel21.setText("años");

        jLabel22.setText("°");

        jLabel23.setText("x min");

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Buscar Informe "));
        jPanel4.setForeground(new java.awt.Color(255, 255, 204));

        jLabel24.setText("Buscar :");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        tbInformeElectrocardiograma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbInformeElectrocardiograma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbInformeElectrocardiogramaMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(tbInformeElectrocardiograma);

        jLabel25.setText("1 Clic para Editar | 2 Para Crear Informe y volver a Imprimir");

        txtBuscarCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarCodKeyReleased(evt);
            }
        });

        jLabel35.setText("Codigo:");

        jPanel6.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel6.setRequestFocusEnabled(false);

        txt49.setEditable(false);
        txt49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt49MouseClicked(evt);
            }
        });

        txt50.setEditable(false);
        txt50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt50MouseClicked(evt);
            }
        });

        txt51.setEditable(false);
        txt51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt51MouseClicked(evt);
            }
        });

        txt52.setEditable(false);
        txt52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt52MouseClicked(evt);
            }
        });

        txt53.setEditable(false);
        txt53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt53MouseClicked(evt);
            }
        });

        txt54.setEditable(false);
        txt54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt54MouseClicked(evt);
            }
        });

        txt56.setEditable(false);
        txt56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt56MouseClicked(evt);
            }
        });

        txt58.setEditable(false);
        txt58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt58MouseClicked(evt);
            }
        });

        txt59.setEditable(false);
        txt59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt59MouseClicked(evt);
            }
        });

        txt60.setEditable(false);
        txt60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt60MouseClicked(evt);
            }
        });

        txt61.setEditable(false);
        txt61.setForeground(new java.awt.Color(255, 255, 204));
        txt61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt61MouseClicked(evt);
            }
        });

        txt62.setEditable(false);
        txt62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt62MouseClicked(evt);
            }
        });

        txt63.setEditable(false);
        txt63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt63MouseClicked(evt);
            }
        });

        txt64.setEditable(false);
        txt64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt64MouseClicked(evt);
            }
        });

        txt65.setEditable(false);
        txt65.setForeground(new java.awt.Color(255, 255, 204));
        txt65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt65MouseClicked(evt);
            }
        });

        txt66.setEditable(false);
        txt66.setForeground(new java.awt.Color(255, 255, 204));
        txt66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt66MouseClicked(evt);
            }
        });

        txt67.setEditable(false);
        txt67.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt67MouseClicked(evt);
            }
        });

        txt69.setEditable(false);
        txt69.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt69MouseClicked(evt);
            }
        });

        txt70.setEditable(false);
        txt70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt70MouseClicked(evt);
            }
        });

        txt71.setEditable(false);
        txt71.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt71MouseClicked(evt);
            }
        });

        txt72.setEditable(false);
        txt72.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt72MouseClicked(evt);
            }
        });

        txt78.setEditable(false);
        txt78.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt78MouseClicked(evt);
            }
        });

        txt74.setEditable(false);
        txt74.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt74MouseClicked(evt);
            }
        });

        txt75.setEditable(false);
        txt75.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt75MouseClicked(evt);
            }
        });

        txt76.setEditable(false);
        txt76.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt76MouseClicked(evt);
            }
        });

        txt79.setEditable(false);
        txt79.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt79MouseClicked(evt);
            }
        });

        txt80.setEditable(false);
        txt80.setForeground(new java.awt.Color(255, 255, 204));
        txt80.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt80MouseClicked(evt);
            }
        });

        txt81.setEditable(false);
        txt81.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt81MouseClicked(evt);
            }
        });

        txt82.setEditable(false);
        txt82.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt82MouseClicked(evt);
            }
        });

        txt83.setEditable(false);
        txt83.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt83MouseClicked(evt);
            }
        });

        txt85.setEditable(false);
        txt85.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt85MouseClicked(evt);
            }
        });

        txt84.setEditable(false);
        txt84.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt84MouseClicked(evt);
            }
        });

        txt86.setEditable(false);
        txt86.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt86MouseClicked(evt);
            }
        });

        txt87.setEditable(false);
        txt87.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt87MouseClicked(evt);
            }
        });

        txt88.setEditable(false);
        txt88.setForeground(new java.awt.Color(255, 255, 204));
        txt88.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt88MouseClicked(evt);
            }
        });

        txt73.setEditable(false);
        txt73.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt73MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txt80, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt51, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt71, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt74, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(txt78, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txt84, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txt70, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addComponent(txt82, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(2, 2, 2))
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addComponent(txt53, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18))
                                                    .addComponent(txt50, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addComponent(txt79, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(8, 8, 8)
                                                        .addComponent(txt76, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(txt54, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                                .addComponent(txt59, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txt85, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txt87, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(2, 2, 2))))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(txt66, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(txt86, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txt49, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(txt62, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(txt64, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addGap(5, 5, 5)
                                                        .addComponent(txt63, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txt75, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(35, 35, 35)))))
                                .addGap(1, 1, 1)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt52, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addComponent(txt83, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(39, 39, 39)
                                            .addComponent(txt67, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel6Layout.createSequentialGroup()
                                                    .addComponent(txt81, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(txt88, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(jPanel6Layout.createSequentialGroup()
                                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                            .addComponent(txt61, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(18, 18, 18))
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                            .addComponent(txt56, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(txt60, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(txt65, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txt72, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                    .addGap(35, 35, 35)
                                    .addComponent(txt69, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(22, 22, 22)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(txt58, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(txt73, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(100, 100, 100))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt76, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt79, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt53, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(txt54, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(txt50, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt62, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt49, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt86, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(txt65, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt61, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txt66, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt70, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt52, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt75, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt56, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt63, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(txt64, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(txt60, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txt72, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt81, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt51, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt88, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt83, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt82, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt67, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(txt80, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt85, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt87, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt59, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt58, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt69, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt74, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt71, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt78, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt84, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt73, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        btnLimpiarGrafico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiarGrafico.setText("Limpiar");
        btnLimpiarGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarGraficoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel24)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBuscarCod, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiarGrafico)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(txtBuscarCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btnLimpiarGrafico)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        chkNormal.setText("Normal");
        chkNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNormalActionPerformed(evt);
            }
        });

        chkFisiologica.setText("B.S.Fisiológica");
        chkFisiologica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFisiologicaActionPerformed(evt);
            }
        });

        chkAsintomatica.setText("B.S.Asintomática");
        chkAsintomatica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAsintomaticaActionPerformed(evt);
            }
        });

        chkRamaDerecha.setText("B.I.Rama Derecha");
        chkRamaDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRamaDerechaActionPerformed(evt);
            }
        });

        chkCardiacoI.setText("D.I. Eje Cardiaco");
        chkCardiacoI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCardiacoIActionPerformed(evt);
            }
        });

        chkCardiacoD.setText("D.D. Eje Cardiaco");
        chkCardiacoD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCardiacoDActionPerformed(evt);
            }
        });

        chkSinusual.setText("Ritmo: Sinusal");
        chkSinusual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSinusualActionPerformed(evt);
            }
        });

        chkPR.setText("P.R: 0.20");
        chkPR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPRActionPerformed(evt);
            }
        });

        chkQRS.setText("Q.R.S.: 0.08");
        chkQRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkQRSActionPerformed(evt);
            }
        });

        chkQTC.setText("Q.T.C.: N/E");
        chkQTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkQTCActionPerformed(evt);
            }
        });

        chkEAnual.setText("Evaluación Anual");
        chkEAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEAnualActionPerformed(evt);
            }
        });

        chkEMeses.setText("Ev. en 6 Mesesl");
        chkEMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEMesesActionPerformed(evt);
            }
        });

        chkExCardiologo.setText("Ev.por Cardiólogo");
        chkExCardiologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkExCardiologoActionPerformed(evt);
            }
        });

        txtHallazgo.setColumns(20);
        txtHallazgo.setRows(2);
        atxtObservacionesAltura.setViewportView(txtHallazgo);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(chkFisiologica)
                                .addGap(1, 1, 1)
                                .addComponent(chkAsintomatica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkRamaDerecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkCardiacoI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkCardiacoD))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(chkSinusual)
                                .addGap(18, 18, 18)
                                .addComponent(chkPR)
                                .addGap(50, 50, 50)
                                .addComponent(chkQTC)
                                .addGap(49, 49, 49)
                                .addComponent(chkQRS)
                                .addGap(110, 110, 110))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel8)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(chkEAnual))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(chkEMeses)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(chkExCardiologo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel19))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRitmo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel9)
                                .addGap(10, 10, 10)
                                .addComponent(txtFC, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel23)
                                .addGap(49, 49, 49)
                                .addComponent(jLabel11)
                                .addGap(10, 10, 10)
                                .addComponent(txtQRS, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                                .addComponent(txtContratista))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPR, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addGap(10, 10, 10)
                                .addComponent(txtQTC, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel13)
                                .addGap(10, 10, 10)
                                .addComponent(txtEje, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(atxtObservacionesAltura)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addComponent(jLabel4)
                                    .addGap(10, 10, 10)
                                    .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnEditar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(10, 10, 10)
                                            .addComponent(txtNombres)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel20)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel21)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel18)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(chkNormal)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEditar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(3, 3, 3)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)))
                    .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtContratista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSinusual, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPR, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkQRS, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkQTC, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRitmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23))
                    .addComponent(txtQRS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel22))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFisiologica, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAsintomatica, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkRamaDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCardiacoI, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCardiacoD, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14)
                    .addComponent(atxtObservacionesAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkEAnual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkEMeses)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkExCardiologo))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jSeparator4)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        if(!OrdenExiste()){
        if(!txtNorden.getText().isEmpty()){
            String Sql="SELECT datos_paciente.nombres_pa||' '||datos_paciente.apellidos_pa as nombrecompleto, "
                    + "datos_paciente.fecha_nacimiento_pa, n_orden_ocupacional.razon_empresa,n_orden_ocupacional.razon_contrata "
                    + "FROM datos_paciente, n_orden_ocupacional "
                    + "WHERE datos_paciente.cod_pa  = n_orden_ocupacional.cod_pa AND n_orden_ocupacional.n_orden='"+txtNorden.getText().toString()+"'";
             oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        
                        txtNombres.setText(oConn.setResult.getString("nombrecompleto"));
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));  
                        txtContratista.setText(oConn.setResult.getString("razon_contrata"));                       
                        txtEmpresa.setText(oConn.setResult.getString("razon_empresa"));
                         txtEdad.setText(String.valueOf(calcularEdad(FechaNacimiento.getCalendar())) );
                       txtNorden.setEnabled(false);
                        FechaExamen.requestFocusInWindow();             
                        oPe.fecha(FechaExamen);
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional de new");
                    }
                    oConn.sqlStmt.close();
                    oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("ElectroCardiograma:" + ex.getMessage().toString());
        } }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void FechaExamenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaExamenPropertyChange
        txtRitmo.requestFocus();
    
    }//GEN-LAST:event_FechaExamenPropertyChange

    private void txtRitmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRitmoActionPerformed
        txtFC.requestFocus();
    }//GEN-LAST:event_txtRitmoActionPerformed

    private void txtFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFCActionPerformed
        txtQRS.requestFocus();
    }//GEN-LAST:event_txtFCActionPerformed

    private void txtQRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQRSActionPerformed
        txtPR.requestFocus();
    }//GEN-LAST:event_txtQRSActionPerformed

    private void txtPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPRActionPerformed
       txtQTC.requestFocus();
    }//GEN-LAST:event_txtPRActionPerformed

    private void txtQTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQTCActionPerformed
        txtEje.requestFocus();
    }//GEN-LAST:event_txtQTCActionPerformed

    private void txtEjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEjeActionPerformed
       txtHallazgo.requestFocus();
    }//GEN-LAST:event_txtEjeActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
     if(OrdenExiste()){
         Actualizar();
     } else{
         Agregar();
     }      
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        sbCargarDatosElectro(txtBuscar.getText().toString());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void tbInformeElectrocardiogramaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbInformeElectrocardiogramaMousePressed
        if (evt.getClickCount() == 2) {
            Integer num = Integer.valueOf(tbInformeElectrocardiograma.getValueAt(tbInformeElectrocardiograma.getSelectedRow(), 1).toString());
            reporte(num);

        }
    }//GEN-LAST:event_tbInformeElectrocardiogramaMousePressed

    private void chkFisiologicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFisiologicaActionPerformed
         if(chkFisiologica.isSelected()){
       txtHallazgo.append("BRADICARDIA SINUSAL FISIOLOGICA. ");
         txtRecomenDaciones.append("- EVALUACION ANUAL." + '\n');}
    }//GEN-LAST:event_chkFisiologicaActionPerformed

    private void chkAsintomaticaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAsintomaticaActionPerformed
        if(chkAsintomatica.isSelected()){
       txtHallazgo.append("BRADICARDIA SINUSAL ASINTOMATICA. ");
        txtRecomenDaciones.append("- EVALUACION ANUAL." + '\n');}
    }//GEN-LAST:event_chkAsintomaticaActionPerformed

    private void chkRamaDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRamaDerechaActionPerformed
       if(chkRamaDerecha.isSelected()){
       txtHallazgo.append("BLOQUEO INCOMPLETO DE RAMA DERECHA. ");}
    }//GEN-LAST:event_chkRamaDerechaActionPerformed

    private void chkCardiacoIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCardiacoIActionPerformed
        if(chkCardiacoI.isSelected()){
       txtHallazgo.append("DESVIACION IZQUIERDA DEL EJE CARDIACO. ");}
    }//GEN-LAST:event_chkCardiacoIActionPerformed

    private void chkCardiacoDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCardiacoDActionPerformed
         if(chkCardiacoD.isSelected()){
       txtHallazgo.append("DESVIACION DERECHA DEL EJE CARDIACO. ");}
    }//GEN-LAST:event_chkCardiacoDActionPerformed

    private void chkSinusualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSinusualActionPerformed
       if(chkSinusual.isSelected()){
       txtRitmo.setText("SINUSAL");}
    }//GEN-LAST:event_chkSinusualActionPerformed

    private void chkPRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPRActionPerformed
        if(chkPR.isSelected()){
       txtPR.setText("0.20");}
    }//GEN-LAST:event_chkPRActionPerformed

    private void chkQTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkQTCActionPerformed
        if(chkQTC.isSelected()){
       txtQTC.setText("N/E");}
    }//GEN-LAST:event_chkQTCActionPerformed

    private void chkQRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkQRSActionPerformed
        if(chkQRS.isSelected()){
       txtQRS.setText("0.08");}
    }//GEN-LAST:event_chkQRSActionPerformed

    private void chkEAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEAnualActionPerformed
        if(chkEAnual.isSelected()){
        txtRecomenDaciones.append("- EVALUACION ANUAL." + '\n');
      }
    }//GEN-LAST:event_chkEAnualActionPerformed

    private void chkEMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEMesesActionPerformed
        if(chkEMeses.isSelected()){
        txtRecomenDaciones.append("- EVALUACION EN 6 MESES." + '\n');
      }
    }//GEN-LAST:event_chkEMesesActionPerformed

    private void chkExCardiologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkExCardiologoActionPerformed
        if(chkExCardiologo.isSelected()){
        txtRecomenDaciones.append("- EVALUADO POR CARDIOLOGO." + '\n');
      }
    }//GEN-LAST:event_chkExCardiologoActionPerformed

    private void chkNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNormalActionPerformed
        if(chkNormal.isSelected()){
        txtHallazgo.setText("NORMAL.");
        txtRecomenDaciones.append("- EVALUACION ANUAL." + '\n');}
    }//GEN-LAST:event_chkNormalActionPerformed

    private void txtBuscarCodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCodKeyReleased
        sbCargarDatosElectro(txtBuscarCod.getText());
    }//GEN-LAST:event_txtBuscarCodKeyReleased

    private void txt52MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt52MouseClicked
        txt52.setBackground(Color.blue);
        if (evt.getClickCount() == 2) {
            txt52.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt52MouseClicked

    private void txt62MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt62MouseClicked
        txt62.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt62.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt62MouseClicked

    private void txt53MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt53MouseClicked
        txt53.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt53.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt53MouseClicked

    private void txt64MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt64MouseClicked
        txt64.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt64.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt64MouseClicked

    private void txt63MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt63MouseClicked
        txt63.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt63.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt63MouseClicked

    private void txt59MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt59MouseClicked
       txt59.setBackground(Color.YELLOW);
       if (evt.getClickCount() == 2) {
            txt59.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt59MouseClicked

    private void txt61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt61MouseClicked
       txt61.setBackground(Color.YELLOW);
       if (evt.getClickCount() == 2) {
            txt61.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt61MouseClicked

    private void txt66MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt66MouseClicked
        txt66.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt66.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt66MouseClicked

    private void txt71MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt71MouseClicked
        txt71.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt71.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt71MouseClicked

    private void txt70MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt70MouseClicked
       txt70.setBackground(Color.red);
       if (evt.getClickCount() == 2) {
            txt70.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt70MouseClicked

    private void txt58MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt58MouseClicked
        txt58.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt58.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt58MouseClicked

    private void txt69MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt69MouseClicked
        txt69.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt69.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt69MouseClicked

    private void txt65MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt65MouseClicked
        txt65.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt65.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt65MouseClicked

    private void txt67MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt67MouseClicked
        txt67.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt67.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt67MouseClicked

    private void txt54MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt54MouseClicked
        txt54.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt54.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt54MouseClicked

    private void txt50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt50MouseClicked
        txt50.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt50.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt50MouseClicked

    private void txt78MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt78MouseClicked
        txt78.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt78.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt78MouseClicked

    private void txt74MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt74MouseClicked
        txt74.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt74.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt74MouseClicked

    private void txt75MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt75MouseClicked
        txt75.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt75.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt75MouseClicked

    private void txt76MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt76MouseClicked
        txt76.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt76.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt76MouseClicked

    private void txt79MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt79MouseClicked
        txt79.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt79.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt79MouseClicked

    private void txt80MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt80MouseClicked
        txt80.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt80.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt80MouseClicked

    private void txt81MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt81MouseClicked
        txt81.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt81.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt81MouseClicked

    private void txt82MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt82MouseClicked
       txt82.setBackground(Color.BLUE);
       if (evt.getClickCount() == 2) {
            txt82.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt82MouseClicked

    private void txt83MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt83MouseClicked
       txt83.setBackground(Color.BLUE);
       if (evt.getClickCount() == 2) {
            txt83.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt83MouseClicked

    private void txt85MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt85MouseClicked
        txt85.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt85.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt85MouseClicked

    private void txt84MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt84MouseClicked
        txt84.setBackground(Color.RED);
        if (evt.getClickCount() == 2) {
            txt84.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt84MouseClicked

    private void txt86MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt86MouseClicked
        txt86.setBackground(Color.RED);
        if (evt.getClickCount() == 2) {
            txt86.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt86MouseClicked

    private void txt72MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt72MouseClicked
        txt72.setBackground(Color.red);
        if (evt.getClickCount() == 2) {
            txt72.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt72MouseClicked

    private void txt60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt60MouseClicked
        txt60.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt60.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt60MouseClicked

    private void txt56MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt56MouseClicked
        txt56.setBackground(Color.blue);
        if (evt.getClickCount() == 2) {
            txt56.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt56MouseClicked

    private void txt51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt51MouseClicked
        txt51.setBackground(Color.blue);
        if (evt.getClickCount() == 2) {
            txt51.setBackground(Color.white);
        }

    }//GEN-LAST:event_txt51MouseClicked

    private void txt49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt49MouseClicked
        txt49.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt49.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt49MouseClicked

    private void txt87MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt87MouseClicked
        txt87.setBackground(Color.BLUE);
        if (evt.getClickCount() == 2) {
            txt87.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt87MouseClicked

    private void txt88MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt88MouseClicked
        txt88.setBackground(Color.YELLOW);
        if (evt.getClickCount() == 2) {
            txt88.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt88MouseClicked

    private void txt73MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt73MouseClicked
        txt73.setBackground(Color.RED);
        if (evt.getClickCount() == 2) {
            txt73.setBackground(Color.white);
        }
    }//GEN-LAST:event_txt73MouseClicked

    private void btnLimpiarGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarGraficoActionPerformed
        txt49.setBackground(Color.white);
        txt50.setBackground(Color.white);
        txt51.setBackground(Color.white);
        txt52.setBackground(Color.white);
        txt53.setBackground(Color.white);
        txt54.setBackground(Color.white);
        txt56.setBackground(Color.white);
        txt58.setBackground(Color.white);
        txt59.setBackground(Color.white);
        txt60.setBackground(Color.white);
        txt61.setBackground(Color.white);
        txt62.setBackground(Color.white);
        txt63.setBackground(Color.white);
        txt64.setBackground(Color.white);
        txt65.setBackground(Color.white);
        txt66.setBackground(Color.white);
        txt67.setBackground(Color.white);
        txt69.setBackground(Color.white);
        txt70.setBackground(Color.white);
        txt71.setBackground(Color.white);
        txt72.setBackground(Color.white);
        txt73.setBackground(Color.white);
        txt74.setBackground(Color.white);
        txt75.setBackground(Color.white);
        txt76.setBackground(Color.white);
        txt78.setBackground(Color.white);
        txt79.setBackground(Color.white);
        txt80.setBackground(Color.white);
        txt81.setBackground(Color.white);
        txt82.setBackground(Color.white);
        txt83.setBackground(Color.white);
        txt84.setBackground(Color.white);
        txt85.setBackground(Color.white);
        txt86.setBackground(Color.white);
        txt87.setBackground(Color.white);
        txt88.setBackground(Color.white);
        
    }//GEN-LAST:event_btnLimpiarGraficoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(!txtNorden.getText().isEmpty()){
            String Sql="SELECT d.nombres_pa||' '||d.apellidos_pa as nombrecompleto, "
                    + "d.fecha_nacimiento_pa, n.razon_empresa,n.razon_contrata, "
                    +"e.fecha_informe, e.ritmo, e.p_r, e.f_c, e.q_t_c, e.q_r_s, \n" +
                    "e.eje, e.hallazgo, e.recomendaciones "
                    + "FROM datos_paciente as d "
                    + "inner join n_orden_ocupacional as n on(d.cod_pa  = n.cod_pa) "
                    + "inner join informe_electrocardiograma as e on(n.n_orden  = e.n_orden) "
                    + "WHERE e.n_orden='"+txtNorden.getText().toString()+"'";
             oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        
                        txtNombres.setText(oConn.setResult.getString("nombrecompleto"));
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));  
                        txtContratista.setText(oConn.setResult.getString("razon_contrata"));                       
                        txtEmpresa.setText(oConn.setResult.getString("razon_empresa"));
                        txtEdad.setText(String.valueOf(calcularEdad(FechaNacimiento.getCalendar())) );
                        FechaExamen.setDate(oConn.setResult.getDate("fecha_informe"));
                        txtRitmo.setText(oConn.setResult.getString("ritmo"));
                        txtPR.setText(oConn.setResult.getString("p_r"));
                        txtFC.setText(oConn.setResult.getString("f_c"));
                        txtQTC.setText(oConn.setResult.getString("q_t_c"));
                        txtQRS.setText(oConn.setResult.getString("q_r_s"));
                        txtEje.setText(oConn.setResult.getString("eje"));
                        txtHallazgo.setText(oConn.setResult.getString("hallazgo"));  
                        txtRecomenDaciones.setText(oConn.setResult.getString("recomendaciones"));
                        
                    }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional de new");
                    }
                    oConn.sqlStmt.close();
                    oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("ElectroCardiograma:" + ex.getMessage().toString());
        } }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
       cerrarVentana();
    }//GEN-LAST:event_formInternalFrameClosing
    public boolean OrdenExiste()
    {
        boolean bResultado=false;

        String sQuery;

        sQuery  = "Select n_orden from informe_electrocardiograma Where n_orden="+txtNorden.getText().toString();
        
        //Ejecuta el Query
        oConn.FnBoolQueryExecute(sQuery);
        
        // Capturo el Error
        try {
            
            // Verifico que haya habido resultados
            if (oConn.setResult.next())
            {
                // Resultado
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText("");
             //Limpiar();
            }
            
            // Cierro los Resultados
            oConn.sqlStmt.close();
            oConn.setResult.close();
            
        } catch (SQLException ex) {
         
        }

        return bResultado;
        
    }
    public int calcularEdad(Calendar fechaNac){
    
    Calendar today = Calendar.getInstance();
    int diay = today.get(Calendar.YEAR);
    int fechay = fechaNac.get(Calendar.YEAR);
    int diff_year = diay - fechay;
    int diam = today.get(Calendar.MONTH);
    int fecham = fechaNac.get(Calendar.MONTH);
    int diff_month = diam - fecham;
    int dia = today.get(Calendar.DAY_OF_MONTH);
    int fecha = fechaNac.get(Calendar.DAY_OF_MONTH);
    int diff_day = dia - fecha;
    //Si está en ese año pero todavía no los ha cumplido
    if(diff_month<0 || (diff_month==0 && diff_day<0)){
        int factor=1;
        diff_year = diff_year - factor;
    }
    return diff_year;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaExamen;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private javax.swing.JScrollPane atxtObservacionesAltura;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiarGrafico;
    private javax.swing.JCheckBox chkAsintomatica;
    private javax.swing.JCheckBox chkCardiacoD;
    private javax.swing.JCheckBox chkCardiacoI;
    private javax.swing.JCheckBox chkEAnual;
    private javax.swing.JCheckBox chkEMeses;
    private javax.swing.JCheckBox chkExCardiologo;
    private javax.swing.JCheckBox chkFisiologica;
    private javax.swing.JCheckBox chkNormal;
    private javax.swing.JCheckBox chkPR;
    private javax.swing.JCheckBox chkQRS;
    private javax.swing.JCheckBox chkQTC;
    private javax.swing.JCheckBox chkRamaDerecha;
    private javax.swing.JCheckBox chkSinusual;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable tbInformeElectrocardiograma;
    private javax.swing.JTextField txt49;
    private javax.swing.JTextField txt50;
    private javax.swing.JTextField txt51;
    private javax.swing.JTextField txt52;
    private javax.swing.JTextField txt53;
    private javax.swing.JTextField txt54;
    private javax.swing.JTextField txt56;
    private javax.swing.JTextField txt58;
    private javax.swing.JTextField txt59;
    private javax.swing.JTextField txt60;
    private javax.swing.JTextField txt61;
    private javax.swing.JTextField txt62;
    private javax.swing.JTextField txt63;
    private javax.swing.JTextField txt64;
    private javax.swing.JTextField txt65;
    private javax.swing.JTextField txt66;
    private javax.swing.JTextField txt67;
    private javax.swing.JTextField txt69;
    private javax.swing.JTextField txt70;
    private javax.swing.JTextField txt71;
    private javax.swing.JTextField txt72;
    private javax.swing.JTextField txt73;
    private javax.swing.JTextField txt74;
    private javax.swing.JTextField txt75;
    private javax.swing.JTextField txt76;
    private javax.swing.JTextField txt78;
    private javax.swing.JTextField txt79;
    private javax.swing.JTextField txt80;
    private javax.swing.JTextField txt81;
    private javax.swing.JTextField txt82;
    private javax.swing.JTextField txt83;
    private javax.swing.JTextField txt84;
    private javax.swing.JTextField txt85;
    private javax.swing.JTextField txt86;
    private javax.swing.JTextField txt87;
    private javax.swing.JTextField txt88;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscarCod;
    private javax.swing.JTextField txtContratista;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEje;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtFC;
    private javax.swing.JTextArea txtHallazgo;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtPR;
    private javax.swing.JTextField txtQRS;
    private javax.swing.JTextField txtQTC;
    private javax.swing.JTextArea txtRecomenDaciones;
    private javax.swing.JTextField txtRitmo;
    // End of variables declaration//GEN-END:variables
private void limpiar(){
    txtNorden.setEnabled(true);
  
    txtNorden.setText(null);
    FechaExamen.setDate(null);
    txtNombres.setText(null);
    txtEdad.setText(null);
    FechaNacimiento.setDate(null);
    txtContratista.setText(null);
    txtEmpresa.setText(null);
    txtRitmo.setText(null);
    txtFC.setText(null);
    txtPR.setText(null);
    txtQRS.setText(null);
    txtQTC.setText(null);
    txtEje.setText(null);
    txtHallazgo.setText(null);
    //txtConclusion.setText(null);
    txtRecomenDaciones.setText(null);
     txtNorden.requestFocusInWindow();
}
private boolean validar(){
boolean bResultado=true;
if (((JTextField)FechaExamen.getDateEditor().getUiComponent()).getText().trim().length()< 2 ) 
        {oFunc.SubSistemaMensajeError("Ingrese Fecha de Examén");bResultado = false;}
    if(txtNorden.getText().isEmpty()){bResultado = false;}
    if(txtEdad.getText().isEmpty()){bResultado = false;}
    if(txtRitmo.getText().isEmpty()){bResultado = false;}
    if(txtFC.getText().isEmpty()){bResultado = false;}
    if(txtPR.getText().isEmpty()){bResultado = false;}
    if(txtQRS.getText().isEmpty()){bResultado = false;}
    if(txtQTC.getText().isEmpty()){bResultado = false;}
    if(txtEje.getText().isEmpty()){bResultado = false;}
     if(txtHallazgo.getText().isEmpty()){bResultado = false;}
     // if(txtConclusion.getText().isEmpty()){bResultado = false;}
       if(txtRecomenDaciones.getText().isEmpty()){bResultado = false;}
 
 
   return bResultado;
}
private void imprimir(){
int seleccion = JOptionPane.showOptionDialog(
    this, // Componente padre
    "¿Desea Imprimir Ficha ?", //Mensaje
    "Seleccione una opción", // Título
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,    // null para icono por defecto.
    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
    "Si");
    if (seleccion != -1)
    {
   if((seleccion + 1)==1)
   {
      print(Integer.valueOf(txtNorden.getText()));
   }
   else
   {
      // PRESIONO NO
     }
    }

}
private void print(Integer cod){
                 Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                 try 
                {
                    String master = System.getProperty("user.dir") +
                                "/reportes/InformeElectrocardiograma.jasper";
            
            System.out.println("master" + master);
            if (master == null) 
            {                
                System.out.println("No encuentro el archivo del reporte InformePsicologico.");
                //System.exit(2);
            } 
            JasperReport masterReport = null;
            try 
            {
                masterReport = (JasperReport) JRLoader.loadObject(master);
            } 
            catch (JRException e) 
            {
                System.out.println("Error cargando el reporte maestro: " + e.getMessage());
                System.exit(3);
            } 
            //JasperPrint myPrint = JasperFillManager.fillReport(masterReport,parameters,clsConnection.oConnection);
                           
              //      JasperViewer.viewReport(myPrint,false);
            
            JasperPrint jasperPrint= JasperFillManager.fillReport(masterReport,parameters,clsConnection.oConnection);
            JasperPrintManager.printReport(jasperPrint,true);

                   } catch (JRException ex) {
                    Logger.getLogger(RegistrarCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
        
 
 }
void sbCargarDatosElectro(String valor){
    String [] titulos={"Cod","N.Orden","Nombre","Fecha"};
    String [] registros = new String[4];
      String sql="";
      if(!txtBuscarCod.getText().isEmpty()){
          sql="Select datos_paciente.nombres_pa||''|| datos_paciente.apellidos_pa AS nombres, n_orden_ocupacional.n_orden, "
              + "informe_electrocardiograma.fecha_informe, informe_electrocardiograma.cod_elec From datos_paciente "
                + "inner join n_orden_ocupacional "
              + "ON (datos_paciente.cod_pa = n_orden_ocupacional.cod_pa)"
                + "inner join informe_electrocardiograma ON (n_orden_ocupacional.n_orden = informe_electrocardiograma.n_orden)"
                + "where informe_electrocardiograma.n_orden='"+txtBuscarCod.getText().toString()+"'";   
      }else{
        sql="Select datos_paciente.nombres_pa||''|| datos_paciente.apellidos_pa AS nombres, n_orden_ocupacional.n_orden, "
              + "informe_electrocardiograma.fecha_informe, informe_electrocardiograma.cod_elec From datos_paciente "
                + "inner join n_orden_ocupacional "
              + "ON (datos_paciente.cod_pa = n_orden_ocupacional.cod_pa)"
                + "inner join informe_electrocardiograma ON (n_orden_ocupacional.n_orden = informe_electrocardiograma.n_orden)"
                + "where CONCAT(nombres_pa,' ',apellidos_pa)  LIKE '%"+valor+"%'";       
      }  
       model = new DefaultTableModel(null,titulos);
      
       SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    if (oConn.FnBoolQueryExecute(sql))
        {
             try  {
                
                while (oConn.setResult.next())
                {
                                     
                    registros[0]= oConn.setResult.getString("cod_elec");
                    registros[1]= oConn.setResult.getString("n_orden");
                    registros[2]= oConn.setResult.getString("nombres");
                    registros[3]= formato.format(oConn.setResult.getDate("fecha_informe"));
                     model.addRow(registros);
                }
                 
                  // Coloca el Modelo de Nueva Cuenta
                  tbInformeElectrocardiograma.setModel(model);
            sbTablaElectro();
             
                 // Cierra Resultados
                 oConn.sqlStmt.close();
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(Audiometria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}
private void sbTablaElectro()
    {
tbInformeElectrocardiograma.getColumnModel().getColumn(0).setMinWidth(50);   
tbInformeElectrocardiograma.getColumnModel().getColumn(0).setMaxWidth(50);
tbInformeElectrocardiograma.getColumnModel().getColumn(1).setMinWidth(65);
tbInformeElectrocardiograma.getColumnModel().getColumn(1).setMaxWidth(65);
tbInformeElectrocardiograma.getColumnModel().getColumn(2).setMinWidth(245);
tbInformeElectrocardiograma.getColumnModel().getColumn(2).setMaxWidth(245);
tbInformeElectrocardiograma.getColumnModel().getColumn(3).setMinWidth(130);
tbInformeElectrocardiograma.getColumnModel().getColumn(3).setMaxWidth(130);
       tbInformeElectrocardiograma.setSelectionMode(ListSelectionModel.SINGLE_SELECTION );
       
        
        tbInformeElectrocardiograma.setFont(new java.awt.Font("Tahoma", 0, 11)); 
       
        // Alinear a la derecha las cantidades y precios
        DefaultTableCellRenderer cellAlinear = new DefaultTableCellRenderer();
        
        // Asignamos el Alineamiento Horizontal a la derecha
        cellAlinear.setHorizontalAlignment(SwingConstants.CENTER);
        
        // Asignamos la Variable de celda de alineamiento a cada una de las columnas a alinear
        tbInformeElectrocardiograma.getColumnModel().getColumn(0).setCellRenderer(cellAlinear);
        tbInformeElectrocardiograma.getColumnModel().getColumn(1).setCellRenderer(cellAlinear);
        tbInformeElectrocardiograma.getColumnModel().getColumn(2).setCellRenderer(cellAlinear);
        // Color de los Encabezados
        //jtTicket.getTableHeader().setBackground(Color.lightGray);
        //jtTicket.getTableHeader().setForeground(Color.blue);
        tbInformeElectrocardiograma.getTableHeader().setFont(new java.awt.Font("Tahoma", 0, 11)); 
   
        // Remueve la Columna de la Vista
        //jtTicket.removeColumn(jtTicket.getColumnModel().getColumn(4));
                
    }
private void reporte(Integer cod){
                 Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                 try 
                {
                    String master = System.getProperty("user.dir") +
                                "/reportes/InformeElectrocardiograma.jasper";
            
            System.out.println("master" + master);
            if (master == null) 
            {                
                System.out.println("No encuentro el archivo del reporte InformePsicologico.");
                //System.exit(2);
            } 
            JasperReport masterReport = null;
            try 
            {
                masterReport = (JasperReport) JRLoader.loadObject(master);
            } 
            catch (JRException e) 
            {
                System.out.println("Error cargando el reporte maestro: " + e.getMessage());
                System.exit(3);
            } 
            JasperPrint myPrint = JasperFillManager.fillReport(masterReport,parameters,clsConnection.oConnection);
                           
                    JasperViewer.viewReport(myPrint,false);
            
            //JasperPrint jasperPrint= JasperFillManager.fillReport(masterReport,parameters,clsConnection.oConnection);
            //JasperPrintManager.printReport(jasperPrint,true);

                   } catch (JRException ex) {
                    Logger.getLogger(RegistrarCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
        
 
 }
 public void Agregar(){
     if(!txtNorden.getText().isEmpty()){
          if(!OrdenExiste()){
            if (validar()){
        String Sql ="INSERT INTO informe_electrocardiograma(n_orden, fecha_informe, ritmo, p_r, f_c, q_t_c, q_r_s,"
               + "eje, hallazgo, recomendaciones, edad_elec,user_registro)";
         Sql+="Values('"+txtNorden.getText()+"','"+FechaExamen.getDate()+"','"
                     +txtRitmo.getText().toString()+ "','"
                     +txtPR.getText()+ "','"
                     +txtFC.getText().toString().concat(" x min") +"','"
                     +txtQTC.getText().toString()+"','"
                     +txtQRS.getText().toString()+"','"
                     +txtEje.getText().toString().concat("°") +"','"
                     +txtHallazgo.getText().toString()+"','"
                     //+txtConclusion.getText().toString()+"','"
                     +txtRecomenDaciones.getText().toString()+"','"
                     +txtEdad.getText().toString()+"','"+clsGlobales.sUser+"')";
                //  oFunc.SubSistemaMensajeInformacion(Sql);
                      if (oConn.FnBoolQueryExecuteUpdate(Sql)){
                        sbCargarDatosElectro("");  
                //oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                        
                imprimir();          
                txtNorden.setEnabled(true);
                txtNorden.requestFocus();
                //sbCargarDatosInformePsicologico("");
                limpiar();
            try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(ElectroCardiograma.class.getName()).log(Level.SEVERE, null, ex);
            }
                }else{
             oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");}
            }else{oFunc.SubSistemaMensajeError("Ingrese Información Faltante");}
        }
       }else{oFunc.SubSistemaMensajeError("Ingrese N°Orden");}
 }
public void Actualizar(){
    String sCodigo=txtNorden.getText();
        String strSqlStmt;
        strSqlStmt="UPDATE informe_electrocardiograma\n" +
                "   SET fecha_informe='"+FechaExamen.getDate()+"', ritmo='"+txtRitmo.getText().toString()+"', p_r='"+txtPR.getText().toString()+"',"
                + " f_c='"+txtFC.getText().toString()+"',q_t_c='"+txtQTC.getText().toString()+"', q_r_s='"+txtQRS.getText().toString()+"', "
                + "eje='"+txtEje.getText().toString()+"', hallazgo='"+txtHallazgo.getText().toString()+"', recomendaciones='"+txtRecomenDaciones.getText().toString()+"',"
                + "edad_elec='"+txtEdad.getText().toString()+"' \n" +
                " WHERE n_orden='" + sCodigo + "'";
             limpiar();
             txtNorden.setEnabled(true);
             txtNorden.requestFocus();
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Éxito");
        try {
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(ElectroCardiograma.class.getName()).log(Level.SEVERE, null, ex);
        }
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
}
}
