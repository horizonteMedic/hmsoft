/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Caja.AgregarEmpresa;
import Clases.clsConnection;
import Clases.clsFunciones;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class CriteriosPsicologia extends javax.swing.JDialog {

   clsConnection oConn = new clsConnection();
         clsFunciones  oFunc = new clsFunciones();
             DefaultTableModel model;
              String sCodigo;
    public CriteriosPsicologia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tablaNew();
        this.setLocationRelativeTo(parent); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboCriterios = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtCriterio = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCriterios = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnAgregar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agregar Criterios");
        setModal(true);

        jLabel1.setText("Area :");

        cboCriterios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "INTELECTUAL", "PERSONALIDAD", "ORGANICIDAD", "PSICOMOTRICIDAD" }));
        cboCriterios.setSelectedIndex(-1);
        cboCriterios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCriteriosItemStateChanged(evt);
            }
        });

        jLabel2.setText("Criterio :");

        tbCriterios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbCriterios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCriteriosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCriterios);

        jTabbedPane1.addTab("Criterios", jScrollPane1);

        jLabel3.setText("Buscar :");

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cambiar.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setEnabled(false);
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cboCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiar))
                            .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBuscar))
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboCriterios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregar)
                    .addComponent(btnActualizar)
                    .addComponent(btnLimpiar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        if(cboCriterios.getSelectedIndex()>= 0){            
         sbCargarDatos(txtBuscar.getText().toString(), cboCriterios);
        }
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void cboCriteriosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCriteriosItemStateChanged
        if(cboCriterios.getSelectedIndex()>= 0){            
         sbCargarDatos("", cboCriterios);
        }
    }//GEN-LAST:event_cboCriteriosItemStateChanged

    private void tbCriteriosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCriteriosMouseClicked
       
       String sConsulta; 
         model = (DefaultTableModel) tbCriterios.getModel();
         sCodigo = tbCriterios.getValueAt(tbCriterios.getSelectedRow(),0).toString();
         sConsulta="select * from criterios_informe_psicologico where id ='"+sCodigo+ "'";
         if (oConn.FnBoolQueryExecute(sConsulta))
        {
            try 
            {
                // Verifica resultados
                 while (oConn.setResult.next())
                 {
                     
                     // Obtiene los datos de la Consulta
                     txtCriterio.setText(oConn.setResult.getString ("criterio"));
                     cboCriterios.setSelectedItem(oConn.setResult.getString("area"));
                    
                       btnAgregar.setEnabled(false);
                       btnActualizar.setEnabled(true);
                     
                 }
                 
               
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(rootPane,ex);
                Logger.getLogger(AgregarEmpresa.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_tbCriteriosMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
       Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
      grabar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        Actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriteriosPsicologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriteriosPsicologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriteriosPsicologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriteriosPsicologia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                CriteriosPsicologia dialog = new CriteriosPsicologia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private void sbCargarDatos(String valor, JComboBox j){
          String cod;
          String area;
          String [] titulos={"Cod","Criterio"};
          String [] registros = new String[2];
          model = new DefaultTableModel(null,titulos){        
              @Override
          public boolean isCellEditable(int rowIndex, int columnIndex) {
        return false;
    }};
          String Sql="select id,criterio, area "
                  + "FROM criterios_informe_psicologico "
                  + "where CONCAT(id,' ',criterio) LIKE '%"+valor+"%' and area ='"+j.getSelectedItem().toString()+"'";     
          if (oConn.FnBoolQueryExecute(Sql))
        {
             try  {
                
                while (oConn.setResult.next())
                {                                     
                    registros[0]= oConn.setResult.getString("id");
                    registros[1]= oConn.setResult.getString("criterio");
                   
                   
                     model.addRow(registros);
                    
                }
                  oConn.setResult.close();
                  // Coloca el Modelo de Nueva Cuenta
                  tbCriterios.setModel(model);
                tabla();
             
                 // Cierra Resultados
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(Audiometria.class.getName()).log(Level.SEVERE, null, ex);
            }
        }    
         
}
void tabla(){
          tbCriterios.setFont(new java.awt.Font("Tahoma", 0, 11)); 
          tbCriterios.setModel(model);          
          tbCriterios.getColumnModel().getColumn(0).setPreferredWidth(40);
          tbCriterios.getColumnModel().getColumn(1).setPreferredWidth(400);
          tbCriterios.getTableHeader().setReorderingAllowed(false);

}
private void tablaNew(){
    String [] titulos={"Cod","Criterio"};
          String [] registros = new String[2];
          model = new DefaultTableModel(null,titulos){        
              @Override
          public boolean isCellEditable(int rowIndex, int columnIndex) {
        return false;
    }};
          model.addRow(registros);
          tbCriterios.setModel(model);

}
public void grabar(){
    if(validar()){            
       String strSqlStmt ="INSERT INTO criterios_informe_psicologico(criterio, area)";
                
            strSqlStmt+= "values ('"+ txtCriterio.getText().toString()+"','"+cboCriterios.getSelectedItem().toString()+"')";
             
             if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
                  oFunc.SubSistemaMensajeInformacion("Agregado correctamente");
                  txtCriterio.setText(null);
                  sbCargarDatos("", cboCriterios);
                try {
                    oConn.sqlStmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(CriteriosPsicologia.class.getName()).log(Level.SEVERE, null, ex);
                }
               }
    }
              
}
public void Actualizar(){
    if(sCodigo != null){
      if(validar()){  
String Update="UPDATE criterios_informe_psicologico SET criterio='"+txtCriterio.getText().toString()+"', area='"+cboCriterios.getSelectedItem().toString()+"' WHERE id='"+sCodigo+"'";
    if (oConn.FnBoolQueryExecuteUpdate(Update)){
        oFunc.SubSistemaMensajeInformacion("Actualizado correctamente");
        txtCriterio.setText(null);
          sbCargarDatos("", cboCriterios);
          btnAgregar.setEnabled(true);
          btnActualizar.setEnabled(false);
          txtCriterio.requestFocus();
        try {
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(CriteriosPsicologia.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
      }
    }
}
private boolean validar(){
boolean bResultado=true;
  
    if(txtCriterio.getText().isEmpty()){oFunc.SubSistemaMensajeError("Criterio?");bResultado = false;}
    if(cboCriterios.getSelectedIndex()<= -1){oFunc.SubSistemaMensajeError("Seleccione Area");bResultado = false;}
      
   return bResultado;
}
public void Limpiar(){
 cboCriterios.setSelectedIndex(-1);
        txtBuscar.setText(null);
        txtCriterio.setText(null);
        tablaNew();
        tabla();
        btnActualizar.setEnabled(false);
        btnAgregar.setEnabled(true);

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cboCriterios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbCriterios;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCriterio;
    // End of variables declaration//GEN-END:variables
}
