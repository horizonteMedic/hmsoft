/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import Clases.clsOperacionesUsuarios;
import autocomplete.ajTextField;
import autocomplete.ajTextFieldConsulta;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DEYMER
 */
public class Resultados_Pruebas_Rapidas extends javax.swing.JInternalFrame {
   
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    String sed="";
 String ipa="",seded="";
 String codvalor="";

    public Resultados_Pruebas_Rapidas() {
        initComponents();
        new ajTextFieldConsulta.autocompleterText(txtNombresEval, "select nombre_user||' '||apellido_user as nombre FROM usuarios WHERE CONCAT(nombre_user,' ',apellido_user)");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgPerSalud = new javax.swing.ButtonGroup();
        btgProfesion = new javax.swing.ButtonGroup();
        btgSintomas = new javax.swing.ButtonGroup();
        btgProcedencia = new javax.swing.ButtonGroup();
        btgResultados = new javax.swing.ButtonGroup();
        btgClasificacion = new javax.swing.ButtonGroup();
        btgContinuidad = new javax.swing.ButtonGroup();
        btgResultados1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        FechaExamen = new com.toedter.calendar.JDateChooser();
        btEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        rbSaludSi = new javax.swing.JRadioButton();
        rbSaludNo = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rbSintomaSi = new javax.swing.JRadioButton();
        rbSintomasNo = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        FechaSintoma = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        chkTos = new javax.swing.JCheckBox();
        chkDolorG = new javax.swing.JCheckBox();
        chkCongestionN = new javax.swing.JCheckBox();
        chkDificultadR = new javax.swing.JCheckBox();
        chkFiebre = new javax.swing.JCheckBox();
        chkMalestar = new javax.swing.JCheckBox();
        chkDiarrea = new javax.swing.JCheckBox();
        chkNauseas = new javax.swing.JCheckBox();
        chkCefalea = new javax.swing.JCheckBox();
        chkIrritaibilidad = new javax.swing.JCheckBox();
        chkDolor = new javax.swing.JCheckBox();
        chkOtroS = new javax.swing.JCheckBox();
        txtOtroSintoma = new javax.swing.JTextField();
        txtPersonal = new javax.swing.JTextField();
        txtEESS = new javax.swing.JTextField();
        txtRenipress = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        chkSolicitud1 = new javax.swing.JCheckBox();
        chkSolicitud2 = new javax.swing.JCheckBox();
        chkSolicitud3 = new javax.swing.JCheckBox();
        chkSolicitud4 = new javax.swing.JCheckBox();
        chkSolicitud5 = new javax.swing.JCheckBox();
        chkSolicitud6 = new javax.swing.JCheckBox();
        chkSolicitud7 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        chkReactivoIgm = new javax.swing.JCheckBox();
        chkReactivoIgg = new javax.swing.JCheckBox();
        chkReactivoIgmIgg = new javax.swing.JCheckBox();
        chkNoreactivo = new javax.swing.JCheckBox();
        chkInvalido = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        rbLeve = new javax.swing.JRadioButton();
        rbModerado = new javax.swing.JRadioButton();
        rbSevera = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        chkReactivoIgm1 = new javax.swing.JCheckBox();
        chkReactivoIgg1 = new javax.swing.JCheckBox();
        chkReactivoIgmIgg1 = new javax.swing.JCheckBox();
        chkNoreactivo1 = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        rbPCR_SI = new javax.swing.JRadioButton();
        rbPCR_NO = new javax.swing.JRadioButton();
        txtRiesgo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        FechaPrueba = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtIMP = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtNombresEval = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtDniEvaluador = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RESULTADOS DE PRUEBAS RÁPIDAS");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
        });

        jLabel1.setText("N° orden :");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel9.setText("Fecha :");

        FechaExamen.setBackground(new java.awt.Color(233, 230, 230));

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btEditar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEditar)
                    .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(5, 5, 5))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS PERSONALES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel38.setText("DNI :");

        txtDNI.setEditable(false);
        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombres :");

        txtNombres.setEditable(false);

        jLabel42.setText("Sexo :");

        txtSexo.setEditable(false);

        jLabel41.setText("Fecha Nacimiento :");

        dateFechaNacimiento.setBackground(new java.awt.Color(233, 230, 230));
        dateFechaNacimiento.setEnabled(false);

        jLabel8.setText("Edad :");

        txtEdad.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addGap(4, 4, 4)
                        .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel3))))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41))))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("¿ Es personal de salud?");

        btgPerSalud.add(rbSaludSi);
        rbSaludSi.setText("SI");
        rbSaludSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSaludSiActionPerformed(evt);
            }
        });

        btgPerSalud.add(rbSaludNo);
        rbSaludNo.setSelected(true);
        rbSaludNo.setText("NO");
        rbSaludNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSaludNoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("¿ Cuál ?");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("¿ Tiene sintomas?");

        btgSintomas.add(rbSintomaSi);
        rbSintomaSi.setText("SI");
        rbSintomaSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSintomaSiActionPerformed(evt);
            }
        });

        btgSintomas.add(rbSintomasNo);
        rbSintomasNo.setSelected(true);
        rbSintomasNo.setText("NO");
        rbSintomasNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSintomasNoActionPerformed(evt);
            }
        });

        jLabel6.setText("<html>Fecha de inicio <br>de sintoma :</html>");

        FechaSintoma.setBackground(new java.awt.Color(233, 230, 230));
        FechaSintoma.setDoubleBuffered(false);
        FechaSintoma.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Marque los sintomas que presente:");

        chkTos.setText("Tos");
        chkTos.setEnabled(false);

        chkDolorG.setText("Dolor de garganta");
        chkDolorG.setEnabled(false);

        chkCongestionN.setText("Congestión Nasal");
        chkCongestionN.setEnabled(false);

        chkDificultadR.setText("Dificultad respiratoria");
        chkDificultadR.setEnabled(false);

        chkFiebre.setText("Fiebre/ Escalofrio");
        chkFiebre.setEnabled(false);

        chkMalestar.setText("Malestar general");
        chkMalestar.setEnabled(false);

        chkDiarrea.setText("Diarrea");
        chkDiarrea.setEnabled(false);

        chkNauseas.setText("Nauseas / vómitos");
        chkNauseas.setEnabled(false);

        chkCefalea.setText("Cefalea");
        chkCefalea.setEnabled(false);

        chkIrritaibilidad.setText("Irritabilidad / confusión");
        chkIrritaibilidad.setEnabled(false);

        chkDolor.setText("Dolor");
        chkDolor.setEnabled(false);

        chkOtroS.setText("Otros");
        chkOtroS.setEnabled(false);

        txtOtroSintoma.setEnabled(false);

        txtPersonal.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtPersonal.setEnabled(false);

        txtEESS.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtEESS.setText("HORIZONTE MEDIC - CORPORACIÓN PERUANA DE CENTROS MÉDICOS");

        txtRenipress.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtRenipress.setText("23148");

        jLabel22.setText("Nombre del EESS:");

        jLabel23.setText("RENIPRESS:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(239, 239, 239))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(11, 11, 11)
                                .addComponent(rbSintomaSi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbSintomasNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FechaSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(rbSaludSi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbSaludNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPersonal, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkDificultadR)
                                    .addComponent(chkCongestionN)
                                    .addComponent(chkTos)
                                    .addComponent(chkDolorG)
                                    .addComponent(chkFiebre)
                                    .addComponent(chkMalestar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkCefalea)
                                    .addComponent(chkNauseas)
                                    .addComponent(chkDiarrea)
                                    .addComponent(chkOtroS)
                                    .addComponent(chkDolor)
                                    .addComponent(chkIrritaibilidad))
                                .addGap(75, 75, 75))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtOtroSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtEESS))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(txtRenipress, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEESS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRenipress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbSaludSi)
                        .addComponent(rbSaludNo)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addComponent(txtPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rbSintomaSi)
                    .addComponent(rbSintomasNo)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FechaSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jLabel7)
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDiarrea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDolorG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkNauseas, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCongestionN, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCefalea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDificultadR, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkIrritaibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFiebre, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDolor, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkMalestar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkOtroS, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(txtOtroSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DE LA PRUEBA RÁPIDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("- Procedencia de la solicitud de diagnóstico :");

        btgProcedencia.add(chkSolicitud1);
        chkSolicitud1.setText("Llamar al 113");

        btgProcedencia.add(chkSolicitud2);
        chkSolicitud2.setText("De EESS");

        btgProcedencia.add(chkSolicitud3);
        chkSolicitud3.setText("Contacto con caso confirmado");

        btgProcedencia.add(chkSolicitud4);
        chkSolicitud4.setText("Contacto con caso sospechoso");

        btgProcedencia.add(chkSolicitud5);
        chkSolicitud5.setText("Persona proveniente del extranjero");

        btgProcedencia.add(chkSolicitud6);
        chkSolicitud6.setText("Personal salud");

        btgProcedencia.add(chkSolicitud7);
        chkSolicitud7.setSelected(true);
        chkSolicitud7.setText("Otro priorizado");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("- Resultados de la prueba rápida");

        chkReactivoIgm.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgm.setText("Reactivo IgM");

        chkReactivoIgg.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgg.setText("Reactivo IgG");

        chkReactivoIgmIgg.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgmIgg.setText("Reactivo IgM/IgG");

        chkNoreactivo.setForeground(new java.awt.Color(0, 0, 204));
        chkNoreactivo.setText("No Reactivo");

        chkInvalido.setText("Inválido");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("<html> - Clasificación clínica <br>de severidad</html>");

        btgClasificacion.add(rbLeve);
        rbLeve.setText("Leve");

        btgClasificacion.add(rbModerado);
        rbModerado.setText("Moderada");

        btgClasificacion.add(rbSevera);
        rbSevera.setText("Severa");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("- Resultados de la 2° prueba rápida");

        chkReactivoIgm1.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgm1.setText("Reactivo IgM");

        chkReactivoIgg1.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgg1.setText("Reactivo IgG");
        chkReactivoIgg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkReactivoIgg1ActionPerformed(evt);
            }
        });

        chkReactivoIgmIgg1.setForeground(new java.awt.Color(204, 0, 0));
        chkReactivoIgmIgg1.setText("Reactivo IgM/IgG");

        chkNoreactivo1.setForeground(new java.awt.Color(0, 0, 153));
        chkNoreactivo1.setText("No Reactivo");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("<html>¿ El paciente presenta \nalguna<br> condición\nde riesgo?</html> ");

        btgContinuidad.add(rbPCR_SI);
        rbPCR_SI.setText("SI");
        rbPCR_SI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPCR_SIActionPerformed(evt);
            }
        });

        btgContinuidad.add(rbPCR_NO);
        rbPCR_NO.setSelected(true);
        rbPCR_NO.setText("NO");
        rbPCR_NO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPCR_NOActionPerformed(evt);
            }
        });

        txtRiesgo.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Cuál :");

        FechaPrueba.setBackground(new java.awt.Color(233, 230, 230));
        FechaPrueba.setDoubleBuffered(false);

        jLabel10.setText("Fecha de prueba");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbPCR_SI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbPCR_NO)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(txtRiesgo))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkSolicitud2)
                                            .addComponent(chkSolicitud1)
                                            .addComponent(chkSolicitud3)
                                            .addComponent(chkReactivoIgm)
                                            .addComponent(chkSolicitud5)
                                            .addComponent(chkSolicitud6)
                                            .addComponent(chkSolicitud7)
                                            .addComponent(chkReactivoIgg)
                                            .addComponent(chkReactivoIgmIgg)
                                            .addComponent(chkNoreactivo)
                                            .addComponent(chkInvalido)
                                            .addComponent(chkSolicitud4))))
                                .addGap(2, 2, 2)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbLeve)
                            .addComponent(rbModerado)
                            .addComponent(rbSevera)
                            .addComponent(jLabel18)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkReactivoIgm1)
                                    .addComponent(chkReactivoIgg1)
                                    .addComponent(chkReactivoIgmIgg1)
                                    .addComponent(chkNoreactivo1)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FechaPrueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(2, 2, 2)
                                .addComponent(chkSolicitud1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(rbLeve)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbModerado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbSevera)))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(1, 1, 1)
                                .addComponent(chkReactivoIgm, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkReactivoIgg, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkReactivoIgmIgg, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNoreactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkInvalido, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkReactivoIgm1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkReactivoIgg1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkReactivoIgmIgg1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNoreactivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(2, 2, 2)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbPCR_SI)
                    .addComponent(rbPCR_NO))
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRiesgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)))
        );

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        btnGrabar.setText("Grbar/ Actualizar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Imprimir N°orden"));

        txtIMP.setBackground(new java.awt.Color(204, 255, 204));
        txtIMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIMPActionPerformed(evt);
            }
        });

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel44)
                .addGap(2, 2, 2))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel44)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnGrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
        );

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel19.setText("Datos del Evaluador");

        txtNombresEval.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtNombresEval.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresEvalActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("DNI");

        txtDniEvaluador.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNombresEval, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDniEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21)
                                .addGap(59, 59, 59)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombresEval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDniEvaluador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void txtIMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIMPActionPerformed
//        
        CargarSedes1();
	seded=sed;
	valorSede(seded);

        if(!txtIMP.getText().isEmpty()){      
            
            if(sed.contains("Huancayo"))
           print12(Integer.valueOf(txtIMP.getText().toString()));
            else
            print(Integer.valueOf(txtIMP.getText().toString()));
               
        }
    }//GEN-LAST:event_txtIMPActionPerformed

public void valorSede(String sede){
if(sede.equals("Trujillo"))
codvalor="1";
if(sede.equals("Huamachuco"))
codvalor="2";
if(sede.equals("Huancayo"))
codvalor="3";
if(sede.equals("Trujillo-Pierola"))
codvalor="4";

}

private void CargarSedes(){
      String sQuery;        
        // Prepara el Query
        sQuery ="select s.nombre_sede from n_orden_ocupacional as n inner join sede as s on n.cod_sede=s.cod_sede where n_orden=" + txtNorden.getText().toString().trim();
        String cboSede="1";
        if (oConn.FnBoolQueryExecute(sQuery))
        {
            try 
            {
                // Verifica resultados
                 while (oConn.setResult.next())
                 {                     
                     // Obtiene los datos de la Consulta
                     sed=(oConn.setResult.getString ("nombre_Sede"));
                     System.out.println(sed);
                     
                 }
                 
                 
                 // Cierra Resultados
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeInformacion(ex.toString());
                Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        // selecciona
        //cboSede.setSelectedIndex(1);


}

private void CargarSedes1(){
      String sQuery;        
        // Prepara el Query
        sQuery ="select s.nombre_sede from n_orden_ocupacional as n inner join sede as s on n.cod_sede=s.cod_sede where n_orden=" + txtIMP.getText().toString().trim();
        String cboSede="1";
        if (oConn.FnBoolQueryExecute(sQuery))
        {
            try 
            {
                // Verifica resultados
                 while (oConn.setResult.next())
                 {                     
                     // Obtiene los datos de la Consulta
                     sed=(oConn.setResult.getString ("nombre_Sede"));
                     System.out.println(sed);
                     
                 }
                 
                 
                 // Cierra Resultados
                 oConn.setResult.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeInformacion(ex.toString());
                Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        // selecciona
        //cboSede.setSelectedIndex(1);


}
    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
        CargarSedes1();
	seded=sed;
	valorSede(seded);

        if(!txtIMP.getText().isEmpty()){      
            
            if(sed.contains("Huancayo"))
           print12(Integer.valueOf(txtIMP.getText().toString()));
            else
            print(Integer.valueOf(txtIMP.getText().toString()));
               
        }
    }//GEN-LAST:event_jLabel44MouseClicked

    private void rbSaludSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSaludSiActionPerformed
        // TODO add your handling code here:
        txtPersonal.setEnabled(true);
      
    }//GEN-LAST:event_rbSaludSiActionPerformed

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        CargarSedes();
	seded=sed;
	valorSede(seded);
      if(!txtNorden.getText().isEmpty()){
          if(!oPe.nOrden(txtNorden, "resultados_pruebas_rapidas"))  {
            dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
            boolean igm,igg,inval,neg,neg1;
             String Sql="select d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, "
                     + "d.cod_pa, d.fecha_nacimiento_pa,res_lab,e.chkigm_reactivo,"
                     + "e.chkigg_reactivo,e.chkinvalido, e.chkigm_noreactivo,e.chkigg_noreactivo "
                + " from datos_paciente AS d "
                + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) "
                + "left JOIN lab_clinico AS l ON (n.n_orden=l.n_orden) "
                + "INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "
                + "WHERE n.n_orden ="+txtNorden.getText().toString()+" AND n.cod_Sede="+codvalor;
            oConn.FnBoolQueryExecute(Sql);      
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
//                        txtNombresEval.setText(oConn.setResult.getString("res_lab"));
                        igm=oConn.setResult.getBoolean("chkigm_reactivo");
                        igg=oConn.setResult.getBoolean("chkigg_reactivo");
                        inval=oConn.setResult.getBoolean("chkinvalido");
                        neg=oConn.setResult.getBoolean("chkigm_noreactivo");
                        neg1=oConn.setResult.getBoolean("chkigg_noreactivo");
                        if(inval){
                            chkInvalido.setSelected(inval);
                        }else if(igm &&igg){
                            chkReactivoIgmIgg.setSelected(true);
                        }else if(neg && neg1){
                            chkNoreactivo.setSelected(true);
                        }else if(igm){
                            chkReactivoIgm.setSelected(igm);
                        }else if(igg){
                            chkReactivoIgg.setSelected(igg);
                        }
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                        oPe.fecha(FechaExamen);
                        oPe.fecha(FechaPrueba);
                        FechaExamen.requestFocus(); 
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional");
                    }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          }else{
              oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
          }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        // TODO add your handling code here:
        if(oPe.nOrden(txtNorden, "resultados_pruebas_rapidas"))  {
           actualizar();
       }else{
            agregar();
       }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        CargarSedes();
	seded=sed;
	valorSede(seded);

        if(!txtNorden.getText().isEmpty()){
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        boolean igm,igg,inval,neg,neg1;
    String Sql="SELECT d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, d.cod_pa, d.fecha_nacimiento_pa,res_lab," +
       "p.fecha_registro, p.txteess, p.txtrenipress, p.rbsalud_si, p.rbsalud_no, \n" +
"       p.txtpersonal, p.rbsintomas_si, p.rbsintomas_no, p.fecha_sintoma, p.chktos, \n" +
"       p.chkdolor_g, p.chkcongestion_n, p.chkdificultad_r, p.chkfiebre, p.chkmalestar_g, \n" +
"       p.chkdiarrea, p.chknauseas, p.chkcefalea, p.chkirritabilidad, p.chkdolor, \n" +
"       p.chkotros, p.txtotros, p.fecha_prueba, p.chksolicitud1, p.chksolicitud2, \n" +
"       p.chksolicitud3, p.chksolicitud4, p.chksolicitud5, p.chksolicitud6, p.chksolicitud7, \n" +
"       p.txtotroasolic, p.chkreactivoigm, p.chkreactivoigg, p.chkreactivoigmigg, \n" +
"       p.chknoreactivo, p.chkinvalido, p.chkreactivoigm1, p.chkreactivoigg1, \n" +
"       p.chkreactivoigmigg1, p.chknoreactivo1, p.chkleve, p.chkmodrado, p.chksevera, \n" +
"       p.chkpcr_si, p.chkpcr_no, p.txtriesgo, p.txtnombresevaluador, p.dni_evaluador, e.chkigm_reactivo,"
                     + "e.chkigg_reactivo,e.chkinvalido, e.chkigm_noreactivo,e.chkigg_noreactivo " +
"FROM datos_paciente AS d \n" +
"INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) \n" +
"INNER JOIN resultados_pruebas_rapidas AS p ON (n.n_orden=p.n_orden) \n" +
            "left JOIN lab_clinico AS l ON (n.n_orden=l.n_orden) " +
            "INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "+
"WHERE n.n_orden ="+txtNorden.getText()+" AND n.cod_Sede="+codvalor;
            oConn.FnBoolQueryExecute(Sql);      
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
                        FechaExamen.setDate(oConn.setResult.getDate("fecha_registro"));
                        txtEESS.setText(oConn.setResult.getString("txteess"));
                        txtRenipress.setText(oConn.setResult.getString("txtrenipress"));
                        rbSaludSi.setSelected(oConn.setResult.getBoolean("rbsalud_si"));
                        rbSaludNo.setSelected(oConn.setResult.getBoolean("rbsalud_no"));                        
                        txtPersonal.setText(oConn.setResult.getString("txtpersonal"));
                        rbSintomaSi.setSelected(oConn.setResult.getBoolean("rbsintomas_si"));
                        rbSintomasNo.setSelected(oConn.setResult.getBoolean("rbsintomas_no"));
                        FechaSintoma.setDate(oConn.setResult.getDate("fecha_sintoma"));
                        chkTos.setSelected(oConn.setResult.getBoolean("chktos"));
                        chkDolorG.setSelected(oConn.setResult.getBoolean("chkdolor_g"));
                        chkCongestionN.setSelected(oConn.setResult.getBoolean("chkcongestion_n"));
                        chkDificultadR.setSelected(oConn.setResult.getBoolean("chkdificultad_r"));
                        chkFiebre.setSelected(oConn.setResult.getBoolean("chkfiebre"));
                        chkMalestar.setSelected(oConn.setResult.getBoolean("chkmalestar_g"));
                        chkDiarrea.setSelected(oConn.setResult.getBoolean("chkdiarrea"));
                        chkNauseas.setSelected(oConn.setResult.getBoolean("chknauseas"));
                        chkCefalea.setSelected(oConn.setResult.getBoolean("chkcefalea"));
                        chkIrritaibilidad.setSelected(oConn.setResult.getBoolean("chkirritabilidad"));
                        chkDolor.setSelected(oConn.setResult.getBoolean("chkdolor"));
                        chkOtroS.setSelected(oConn.setResult.getBoolean("chkotros"));
                        txtOtroSintoma.setText(oConn.setResult.getString("txtotros"));
                        FechaPrueba.setDate(oConn.setResult.getDate("fecha_prueba"));
                        chkSolicitud1.setSelected(oConn.setResult.getBoolean("chksolicitud1"));
                        chkSolicitud2.setSelected(oConn.setResult.getBoolean("chksolicitud2"));
                        chkSolicitud3.setSelected(oConn.setResult.getBoolean("chksolicitud3"));
                        chkSolicitud4.setSelected(oConn.setResult.getBoolean("chksolicitud4"));
                        chkSolicitud5.setSelected(oConn.setResult.getBoolean("chksolicitud5"));
                        chkSolicitud6.setSelected(oConn.setResult.getBoolean("chksolicitud6"));
                        chkSolicitud7.setSelected(oConn.setResult.getBoolean("chksolicitud7"));
//                        chkReactivoIgm.setSelected(oConn.setResult.getBoolean("chkreactivoigm"));
//                        chkReactivoIgg.setSelected(oConn.setResult.getBoolean("chkreactivoigg"));
//                        chkReactivoIgmIgg.setSelected(oConn.setResult.getBoolean("chkreactivoigmigg"));
//                        chkNoreactivo.setSelected(oConn.setResult.getBoolean("chknoreactivo"));
//                        chkInvalido.setSelected(oConn.setResult.getBoolean("chkinvalido"));
                        chkReactivoIgm1.setSelected(oConn.setResult.getBoolean("chkreactivoigm1"));
                        chkReactivoIgg1.setSelected(oConn.setResult.getBoolean("chkreactivoigg1"));
                        chkReactivoIgmIgg1.setSelected(oConn.setResult.getBoolean("chkreactivoigmigg1"));
                        chkNoreactivo1.setSelected(oConn.setResult.getBoolean("chknoreactivo1"));
                        rbLeve.setSelected(oConn.setResult.getBoolean("chkleve"));
                        rbModerado.setSelected(oConn.setResult.getBoolean("chkmodrado"));
                        rbSevera.setSelected(oConn.setResult.getBoolean("chksevera"));
                        rbPCR_SI.setSelected(oConn.setResult.getBoolean("chkpcr_si"));
                        rbPCR_NO.setSelected(oConn.setResult.getBoolean("chkpcr_no"));
                        txtRiesgo.setText(oConn.setResult.getString("txtriesgo"));
                        txtNombresEval.setText(oConn.setResult.getString("txtnombresevaluador"));
                        txtDniEvaluador.setText(oConn.setResult.getString("dni_evaluador"));
                        igm=oConn.setResult.getBoolean("chkigm_reactivo");
                        igg=oConn.setResult.getBoolean("chkigg_reactivo");
                        inval=oConn.setResult.getBoolean("chkinvalido");
                        neg=oConn.setResult.getBoolean("chkigm_noreactivo");
                        neg1=oConn.setResult.getBoolean("chkigg_noreactivo");
                        if(inval){
                            chkInvalido.setSelected(inval);
                        }else if(igm &&igg){
                            chkReactivoIgmIgg.setSelected(true);
                        }else if(neg && neg1){
                            chkNoreactivo.setSelected(true);
                        }else if(igm){
                            chkReactivoIgm.setSelected(igm);
                        }else if(igg){
                            chkReactivoIgg.setSelected(igg);
                        }
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro en laboratorio");
                    }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
       limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void rbSaludNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSaludNoActionPerformed
        // TODO add your handling code here:
      
       txtPersonal.setEnabled(false);
    }//GEN-LAST:event_rbSaludNoActionPerformed

    private void rbSintomaSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSintomaSiActionPerformed
        // TODO add your handling code here:
        
        FechaSintoma.setEnabled(true);
        chkTos.setEnabled(true);
        chkDolorG.setEnabled(true);
        chkCongestionN.setEnabled(true);
        chkDificultadR.setEnabled(true);
        chkFiebre.setEnabled(true);
        chkMalestar.setEnabled(true);
        chkDiarrea.setEnabled(true);
        chkNauseas.setEnabled(true);
        chkCefalea.setEnabled(true);
        chkIrritaibilidad.setEnabled(true);
        chkDolor.setEnabled(true);
        chkOtroS.setEnabled(true);
    }//GEN-LAST:event_rbSintomaSiActionPerformed

    private void rbSintomasNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSintomasNoActionPerformed
        // TODO add your handling code here:
        
        FechaSintoma.setEnabled(false);
        chkTos.setEnabled(false);
        chkDolorG.setEnabled(false);
        chkCongestionN.setEnabled(false);
        chkDificultadR.setEnabled(false);
        chkFiebre.setEnabled(false);
        chkMalestar.setEnabled(false);
        chkDiarrea.setEnabled(false);
        chkNauseas.setEnabled(false);
        chkCefalea.setEnabled(false);
        chkIrritaibilidad.setEnabled(false);
        chkDolor.setEnabled(false);
        chkOtroS.setEnabled(false);
        txtOtroSintoma.setEnabled(false);
    }//GEN-LAST:event_rbSintomasNoActionPerformed

    private void chkReactivoIgg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkReactivoIgg1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkReactivoIgg1ActionPerformed

    private void rbPCR_SIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPCR_SIActionPerformed
        // TODO add your handling code here:
        txtRiesgo.setEnabled(true);
    }//GEN-LAST:event_rbPCR_SIActionPerformed

    private void rbPCR_NOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPCR_NOActionPerformed
        // TODO add your handling code here:
        txtRiesgo.setEnabled(false);
    }//GEN-LAST:event_rbPCR_NOActionPerformed

    private void txtNombresEvalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresEvalActionPerformed
        // TODO add your handling code here:
        if(!txtNombresEval.getText().isEmpty()){
    String Sql="SELECT dni_user\n" +
            "  FROM usuarios\n" +
            "  where nombre_user||' '||apellido_user='"+txtNombresEval.getText()+"'";
            oConn.FnBoolQueryExecute(Sql);      
            try {
                    if (oConn.setResult.next()) {
                        txtDniEvaluador.setText(oConn.setResult.getString("dni_user"));
                        
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro como usuario");
                    }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          
        }
    }//GEN-LAST:event_txtNombresEvalActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        cerrarVentana();
    }//GEN-LAST:event_formInternalFrameClosing
    private boolean validar(){
        boolean bResultado=true;
        if (((JTextField)FechaExamen.getDateEditor().getUiComponent()).getText().trim().length()< 2 ) 
            {oFunc.SubSistemaMensajeError("Ingrese Fecha ");bResultado = false;}
       
        else if (txtDniEvaluador.getText().isEmpty() ) 
            {oFunc.SubSistemaMensajeError("Ingrese Dni del evaluador ");bResultado = false;}
        

       return bResultado;
    }
    private void actualizar(){
        if(!txtNorden.getText().isEmpty()){
            if(validar()){
                String strSqlStmt;
                strSqlStmt="UPDATE resultados_pruebas_rapidas\n" +
                "   SET fecha_registro='"+FechaExamen.getDate()+"'"
                        + ", txteess='"+txtEESS.getText()+"'"
                        + ", txtrenipress='"+txtRenipress.getText()+"'"
                        + ", rbsalud_si='"+rbSaludSi.isSelected()+"'"
                        + ", rbsalud_no='"+rbSaludNo.isSelected()+"'"
                        + ", txtpersonal='"+txtPersonal.getText()+"'"
                        + ", rbsintomas_si='"+rbSintomaSi.isSelected()+"'"
                        + ", rbsintomas_no='"+rbSintomasNo.isSelected()+"'";
                        if (((JTextField)FechaSintoma.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                        strSqlStmt+=", fecha_sintoma='"+FechaSintoma.getDate()+"'";}
                        strSqlStmt+= ", chktos='"+chkTos.isSelected()+"'"
                        + ", chkdolor_g='"+chkDolorG.isSelected()+"'"
                        + ", chkcongestion_n='"+chkCongestionN.isSelected()+"'"
                        + ", chkdificultad_r='"+chkDificultadR.isSelected()+"'"
                        + ", chkfiebre='"+chkFiebre.isSelected()+"'"
                        + ", chkmalestar_g='"+chkMalestar.isSelected()+"'"
                        + ", chkdiarrea='"+chkDiarrea.isSelected()+"'"
                        + ", chknauseas='"+chkNauseas.isSelected()+"'"
                        + ", chkcefalea='"+chkCefalea.isSelected()+"'"
                        + ", chkirritabilidad='"+chkIrritaibilidad.isSelected()+"'"
                        + ", chkdolor='"+chkDolor.isSelected()+"'"
                        + ", chkotros='"+chkOtroS.isSelected()+"'"
                        + ", txtotros='"+txtOtroSintoma.getText()+"'";
                        if (((JTextField)FechaPrueba.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                        strSqlStmt+=", fecha_prueba='"+FechaPrueba.getDate()+"'";}
                        strSqlStmt+= ", chksolicitud1='"+chkSolicitud1.isSelected()+"'"
                        + ", chksolicitud2='"+chkSolicitud2.isSelected()+"'"
                        + ", chksolicitud3='"+chkSolicitud3.isSelected()+"'"
                        + ", chksolicitud4='"+chkSolicitud4.isSelected()+"'"
                        + ", chksolicitud5='"+chkSolicitud5.isSelected()+"'"
                        + ", chksolicitud6='"+chkSolicitud6.isSelected()+"'"
                        + ", chksolicitud7='"+chkSolicitud7.isSelected()+"'"
                        + ", chkreactivoigm='"+chkReactivoIgm.isSelected()+"'"
                        + ", chkreactivoigg='"+chkReactivoIgg.isSelected()+"'"
                        + ", chkreactivoigmigg='"+chkReactivoIgmIgg.isSelected()+"'"
                        + ", chknoreactivo='"+chkNoreactivo.isSelected()+"'"
                        + ", chkinvalido='"+chkInvalido.isSelected()+"'"
                        + ", chkreactivoigm1='"+chkReactivoIgm1.isSelected()+"'"
                        + ", chkreactivoigg1='"+chkReactivoIgg1.isSelected()+"'"
                        + ", chkreactivoigmigg1='"+chkReactivoIgmIgg1.isSelected()+"'"
                        + ", chknoreactivo1='"+chkNoreactivo1.isSelected()+"'"
                        + ", chkleve='"+rbLeve.isSelected()+"'"
                        + ", chkmodrado='"+rbModerado.isSelected()+"'"
                        + ", chksevera='"+rbSevera.isSelected()+"'"
                        + ", chkpcr_si='"+rbPCR_SI.isSelected()+"'"
                        + ", chkpcr_no='"+rbPCR_NO.isSelected()+"'"
                        + ", txtriesgo='"+txtRiesgo.getText()+"'" 
                        + ", txtnombresevaluador='"+txtNombresEval.getText()+"'"
                        + ", dni_evaluador='"+txtDniEvaluador.getText()+"'" +
                " WHERE n_orden='"+txtNorden.getText()+ "'";
                if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
                    oFunc.SubSistemaMensajeInformacion("Se ha actualizado con Éxito");
                    imprimir();
                    limpiar();
                }else{
                     oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                       }
                
                try {
                        oConn.sqlStmt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
    }
    private void agregar(){
        if(!txtNorden.getText().isEmpty()){
            if(!oPe.nOrden(txtNorden, "resultados_pruebas_rapidas")){
                if(validar()){
                    String strSqlStmt;
                    String query;
                    strSqlStmt="INSERT INTO resultados_pruebas_rapidas(\n" ;
                    query="Values('";
                    strSqlStmt += "n_orden";query += txtNorden.getText()+ "'";
                    strSqlStmt += ",fecha_registro";query += ",'"+FechaExamen.getDate()+ "'";
                    strSqlStmt += ",txteess";query += ",'"+txtEESS.getText()+ "'";
                    strSqlStmt += ",txtrenipress";query += ",'"+txtRenipress.getText()+ "'";
                    strSqlStmt += ",rbsalud_si";query += ",'"+rbSaludSi.isSelected()+ "'";
                    strSqlStmt += ",rbsalud_no";query += ",'"+rbSaludNo.isSelected()+ "'";
                    strSqlStmt += ",txtpersonal";query += ",'"+txtPersonal.getText()+ "'";
                    strSqlStmt += ",rbsintomas_si";query += ",'"+rbSintomaSi.isSelected()+ "'";
                    strSqlStmt += ",rbsintomas_no";query += ",'"+rbSintomasNo.isSelected()+ "'";
                    if (((JTextField)FechaSintoma.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                    strSqlStmt += ",fecha_sintoma";query += ",'"+FechaSintoma.getDate()+ "'";}
                    strSqlStmt += ",chktos";query += ",'"+chkTos.isSelected()+ "'";
                    strSqlStmt += ",chkdolor_g";query += ",'"+chkDolorG.isSelected()+ "'";
                    strSqlStmt += ",chkcongestion_n";query += ",'"+chkCongestionN.isSelected()+ "'";
                    strSqlStmt += ",chkdificultad_r";query += ",'"+chkDificultadR.isSelected()+ "'";
                    strSqlStmt += ",chkfiebre";query += ",'"+chkFiebre.isSelected()+ "'";
                    strSqlStmt += ",chkmalestar_g";query += ",'"+chkMalestar.isSelected()+ "'";
                    strSqlStmt += ",chkdiarrea";query += ",'"+chkDiarrea.isSelected()+ "'";
                    strSqlStmt += ",chknauseas";query += ",'"+chkNauseas.isSelected()+ "'";
                    strSqlStmt += ",chkcefalea";query += ",'"+chkCefalea.isSelected()+ "'";
                    strSqlStmt += ",chkirritabilidad";query += ",'"+chkIrritaibilidad.isSelected()+ "'";
                    strSqlStmt += ",chkdolor";query += ",'"+chkDolor.isSelected()+ "'";
                    strSqlStmt += ",chkotros";query += ",'"+chkOtroS.isSelected()+ "'";
                    strSqlStmt += ",txtotros";query += ",'"+txtOtroSintoma.getText()+ "'";
                    if (((JTextField)FechaPrueba.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                    strSqlStmt += ",fecha_prueba";query += ",'"+FechaPrueba.getDate()+ "'";}
                    strSqlStmt += ",chksolicitud1";query += ",'"+chkSolicitud1.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud2";query += ",'"+chkSolicitud2.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud3";query += ",'"+chkSolicitud3.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud4";query += ",'"+chkSolicitud4.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud5";query += ",'"+chkSolicitud5.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud6";query += ",'"+chkSolicitud6.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud7";query += ",'"+chkSolicitud7.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigm";query += ",'"+chkReactivoIgm.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigg";query += ",'"+chkReactivoIgg.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigmigg";query += ",'"+chkReactivoIgmIgg.isSelected()+ "'";
                    strSqlStmt += ",chknoreactivo";query += ",'"+chkNoreactivo.isSelected()+ "'";
                    strSqlStmt += ",chkinvalido";query += ",'"+chkInvalido.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigm1";query += ",'"+chkReactivoIgm1.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigg1";query += ",'"+chkReactivoIgg1.isSelected()+ "'";
                    strSqlStmt += ",chkreactivoigmigg1";query += ",'"+chkReactivoIgmIgg1.isSelected()+ "'";
                    strSqlStmt += ",chknoreactivo1";query += ",'"+chkNoreactivo1.isSelected()+ "'";
                    strSqlStmt += ",chkleve";query += ",'"+rbLeve.isSelected()+ "'";
                    strSqlStmt += ",chkmodrado";query += ",'"+rbModerado.isSelected()+ "'";
                    strSqlStmt += ",chksevera";query += ",'"+rbSevera.isSelected()+ "'";
                    strSqlStmt += ",chkpcr_si";query += ",'"+rbPCR_SI.isSelected()+ "'";
                    strSqlStmt += ",chkpcr_no";query += ",'"+rbPCR_NO.isSelected()+ "'";
                    strSqlStmt += ",txtriesgo";query += ",'"+txtRiesgo.getText()+ "'";
                    strSqlStmt += ",txtnombresevaluador";query += ",'"+txtNombresEval.getText()+ "'";
                    strSqlStmt += ",dni_evaluador";query += ",'"+txtDniEvaluador.getText()+ "'";
                    if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + query.concat(")"))){
                        oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                        imprimir();
                        limpiar();
                   }else{oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");} 
                    
                    try {
                            oConn.sqlStmt.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }
             }
        }else { oFunc.SubSistemaMensajeError("Llene los Campos correctamente");
        txtNorden.requestFocus();}
    }
    private void limpiar(){
        txtNorden.setText(null);
        txtNombres.setText(null);
        txtDNI.setText(null);
        dateFechaNacimiento.setDate(null);
        txtSexo.setText(null) ;
        txtEdad.setText(null);
        txtEESS.setText("HORIZONTE MEDIC - CORPORACIÓN PERUANA DE CENTROS MÉDICOS");
        txtRenipress.setText("23148");
        FechaExamen.setDate(null);
        btgPerSalud.clearSelection();
        txtPersonal.setText(null);
        btgSintomas.clearSelection();
        FechaSintoma.setDate(null);
        chkTos.setSelected(false);
        chkDolorG.setSelected(false);
        chkCongestionN.setSelected(false);
        chkDificultadR.setSelected(false);
        chkFiebre.setSelected(false);
        chkMalestar.setSelected(false);
        chkDiarrea.setSelected(false);
        chkNauseas.setSelected(false);
        chkCefalea.setSelected(false);
        chkIrritaibilidad.setSelected(false);
        chkDolor.setSelected(false);
        chkOtroS.setSelected(false);
        txtOtroSintoma.setText(null);
        FechaPrueba.setDate(null);
//        chkSolicitud1.setSelected(false);
//        chkSolicitud2.setSelected(false);
//        chkSolicitud3.setSelected(false);
//        chkSolicitud4.setSelected(false);
//        chkSolicitud5.setSelected(false);
//        chkSolicitud6.setSelected(false);
//        chkSolicitud7.setSelected(false);
        btgProcedencia.clearSelection();
        btgResultados.clearSelection();
        btgResultados1.clearSelection();
        chkReactivoIgm.setSelected(false);
        chkReactivoIgg.setSelected(false);
        chkReactivoIgmIgg.setSelected(false);
        chkNoreactivo.setSelected(false);
        chkInvalido.setSelected(false);
        chkReactivoIgm1.setSelected(false);
        chkReactivoIgg1.setSelected(false);
        chkReactivoIgmIgg1.setSelected(false);
        chkNoreactivo1.setSelected(false);
        btgClasificacion.clearSelection();
        btgContinuidad.clearSelection();
//        rbLeve.setSelected(false);
//        rbModerado.setSelected(false);
//        rbSevera.setSelected(false);
//        rbPCR_SI.setSelected(false);
//        rbPCR_NO.setSelected(false);
        txtRiesgo.setText(null);
        txtNombresEval.setText("ARTEMIO GARCIA CABRERA");
        txtDniEvaluador.setText("42664426");
        rbSaludNo.setSelected(true);
        rbSintomasNo.setSelected(true);
        chkSolicitud7.setSelected(true);
        chkNoreactivo.setSelected(false);
        rbPCR_NO.setSelected(true);
        txtNorden.setEditable(true);
        txtNorden.requestFocusInWindow();
    }
    private boolean imprimir() {
        boolean im = false;
        int seleccion = JOptionPane.showOptionDialog(
                this, // Componente padre
                "¿Desea Imprimir?", //Mensaje
                "Seleccione una opción", // Título
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion != -1) {
            if ((seleccion + 1) == 1) {
                 if(sed.contains("Huancayo"))
                printer12(Integer.valueOf(txtNorden.getText().toString()));
                else
                  printer(Integer.valueOf(txtNorden.getText().toString()));   
                 im = true;
            } else {
                // PRESIONO NO
            }
        }
        return im;

    }
    private void printer(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                    try 
                {                     
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"Resultados_Pruebas_Rapidas.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer.viewReport(jasperPrint, false);
                    JasperPrintManager.printReport(jasperPrint,true);
//                  JasperExportManager.exportReportToPdfFile( jasperPrint, "E:/prueba/reporte.pdf");
                   } catch (JRException ex) {
                    Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
       private void printer12(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                    try 
                {                     
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"Resultados_Pruebas_Rapidas12.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer.viewReport(jasperPrint, false);
                    JasperPrintManager.printReport(jasperPrint,true);
//                  JasperExportManager.exportReportToPdfFile( jasperPrint, "E:/prueba/reporte.pdf");
                   } catch (JRException ex) {
                    Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
     private void print(Integer cod) {

        Map parameters = new HashMap();
        parameters.put("Norden", cod);

        try {
            String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "Resultados_Pruebas_Rapidas.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("Resultados de Prueba Rapida");
            // viewer.setAchkReactivoIgmtrue);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
      private void print12(Integer cod) {

        Map parameters = new HashMap();
        parameters.put("Norden", cod);

        try {
            String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "Resultados_Pruebas_Rapidas12.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("Resultados de Prueba Rapida");
            // viewer.setAchkReactivoIgmtrue);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    public void cerrarVentana(){
        // JOptionPane.showMessageDialog(null, "probando para cerrar el stament");
        System.out.println("cerro esta ventana");
        try {
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(Resultados_Pruebas_Rapidas.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    this.dispose();
      //  System.exit(0);

    } 
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaExamen;
    private com.toedter.calendar.JDateChooser FechaPrueba;
    private com.toedter.calendar.JDateChooser FechaSintoma;
    private javax.swing.JButton btEditar;
    private javax.swing.ButtonGroup btgClasificacion;
    private javax.swing.ButtonGroup btgContinuidad;
    private javax.swing.ButtonGroup btgPerSalud;
    private javax.swing.ButtonGroup btgProcedencia;
    private javax.swing.ButtonGroup btgProfesion;
    private javax.swing.ButtonGroup btgResultados;
    private javax.swing.ButtonGroup btgResultados1;
    private javax.swing.ButtonGroup btgSintomas;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkCefalea;
    private javax.swing.JCheckBox chkCongestionN;
    private javax.swing.JCheckBox chkDiarrea;
    private javax.swing.JCheckBox chkDificultadR;
    private javax.swing.JCheckBox chkDolor;
    private javax.swing.JCheckBox chkDolorG;
    private javax.swing.JCheckBox chkFiebre;
    private javax.swing.JCheckBox chkInvalido;
    private javax.swing.JCheckBox chkIrritaibilidad;
    private javax.swing.JCheckBox chkMalestar;
    private javax.swing.JCheckBox chkNauseas;
    private javax.swing.JCheckBox chkNoreactivo;
    private javax.swing.JCheckBox chkNoreactivo1;
    private javax.swing.JCheckBox chkOtroS;
    private javax.swing.JCheckBox chkReactivoIgg;
    private javax.swing.JCheckBox chkReactivoIgg1;
    private javax.swing.JCheckBox chkReactivoIgm;
    private javax.swing.JCheckBox chkReactivoIgm1;
    private javax.swing.JCheckBox chkReactivoIgmIgg;
    private javax.swing.JCheckBox chkReactivoIgmIgg1;
    private javax.swing.JCheckBox chkSolicitud1;
    private javax.swing.JCheckBox chkSolicitud2;
    private javax.swing.JCheckBox chkSolicitud3;
    private javax.swing.JCheckBox chkSolicitud4;
    private javax.swing.JCheckBox chkSolicitud5;
    private javax.swing.JCheckBox chkSolicitud6;
    private javax.swing.JCheckBox chkSolicitud7;
    private javax.swing.JCheckBox chkTos;
    private com.toedter.calendar.JDateChooser dateFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rbLeve;
    private javax.swing.JRadioButton rbModerado;
    private javax.swing.JRadioButton rbPCR_NO;
    private javax.swing.JRadioButton rbPCR_SI;
    private javax.swing.JRadioButton rbSaludNo;
    private javax.swing.JRadioButton rbSaludSi;
    private javax.swing.JRadioButton rbSevera;
    private javax.swing.JRadioButton rbSintomaSi;
    private javax.swing.JRadioButton rbSintomasNo;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtDniEvaluador;
    private javax.swing.JTextField txtEESS;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtIMP;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNombresEval;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtOtroSintoma;
    private javax.swing.JTextField txtPersonal;
    private javax.swing.JTextField txtRenipress;
    private javax.swing.JTextField txtRiesgo;
    private javax.swing.JTextField txtSexo;
    // End of variables declaration//GEN-END:variables
}
