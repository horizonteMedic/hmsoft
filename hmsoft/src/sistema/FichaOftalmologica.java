/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsOperacionesUsuarios;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import org.apache.poi.hssf.record.BoundSheetRecord;

/**
 *
 * @author admin
 */
public final class FichaOftalmologica extends javax.swing.JInternalFrame {

    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    DefaultTableModel model;

    /**
     * Creates new form FichaOftalmologica
     */
    public FichaOftalmologica() {
        initComponents();
        Deshabilitar(true);
        sbCargarDatosOftalmologia("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TipoCliente = new javax.swing.ButtonGroup();
        bgPterigion = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        FechaExamen = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtCercaSinCorregirOD = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtLejosSinCorregirOD = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtVisionColores = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtVisionBinocular = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtLejosSinCorregirOI = new javax.swing.JTextField();
        txtCercaSinCorregirOI = new javax.swing.JTextField();
        txtLejosCorregidaOI = new javax.swing.JTextField();
        txtLejosCorregidaOD = new javax.swing.JTextField();
        txtCercaCorregidaOD = new javax.swing.JTextField();
        txtCercaCorregidaOI = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel22 = new javax.swing.JLabel();
        txtReflejosPupilares = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtEnfermedadesOculares = new javax.swing.JTextField();
        txtEnfermedadesOculares1 = new javax.swing.JTextField();
        chkPterigionDerecho = new javax.swing.JCheckBox();
        chkPterigionIzquierdo = new javax.swing.JCheckBox();
        chkPterigionBilateral = new javax.swing.JCheckBox();
        chkNormal = new javax.swing.JCheckBox();
        chkConservado = new javax.swing.JCheckBox();
        chkNinguna = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbOftalmica = new javax.swing.JTable();
        txtBuscarCod = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JButton();
        txtEmpresa = new javax.swing.JTextField();
        txtContrata = new javax.swing.JTextField();
        txtExMedico = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        btnLevantarObservacion = new javax.swing.JButton();

        setClosable(true);
        setTitle("Ficha Oftalmologíca");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("N° Orden :");

        txtNumero.setBackground(new java.awt.Color(255, 200, 0));
        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });

        jLabel2.setText("DNI :");

        jLabel3.setText("Nombres :");

        jLabel4.setText("Apellidos :");

        jLabel5.setText("Fecha Nacimiento :");

        FechaNacimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaNacimientoPropertyChange(evt);
            }
        });

        FechaExamen.setBackground(new java.awt.Color(204, 204, 204));
        FechaExamen.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaExamenPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Fecha de Examen :");

        jLabel7.setText("Examen Médico :");

        jLabel8.setText("Empresa :");

        jLabel9.setText("Contrata :");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setText("Visión de Cerca :");

        txtCercaSinCorregirOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCercaSinCorregirODActionPerformed(evt);
            }
        });
        txtCercaSinCorregirOD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCercaSinCorregirODFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCercaSinCorregirODFocusLost(evt);
            }
        });

        jLabel11.setText("Visión de Lejos :");

        txtLejosSinCorregirOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLejosSinCorregirODActionPerformed(evt);
            }
        });
        txtLejosSinCorregirOD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLejosSinCorregirODFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLejosSinCorregirODFocusLost(evt);
            }
        });

        jLabel12.setText("Visión de Colores :");

        txtVisionColores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVisionColoresActionPerformed(evt);
            }
        });

        jLabel13.setText("Visión Binocular :");

        txtVisionBinocular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVisionBinocularActionPerformed(evt);
            }
        });

        jLabel14.setText("Sin Corregir");

        txtLejosSinCorregirOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLejosSinCorregirOIActionPerformed(evt);
            }
        });
        txtLejosSinCorregirOI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLejosSinCorregirOIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLejosSinCorregirOIFocusLost(evt);
            }
        });

        txtCercaSinCorregirOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCercaSinCorregirOIActionPerformed(evt);
            }
        });
        txtCercaSinCorregirOI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCercaSinCorregirOIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCercaSinCorregirOIFocusLost(evt);
            }
        });

        txtLejosCorregidaOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLejosCorregidaOIActionPerformed(evt);
            }
        });
        txtLejosCorregidaOI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLejosCorregidaOIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLejosCorregidaOIFocusLost(evt);
            }
        });

        txtLejosCorregidaOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLejosCorregidaODActionPerformed(evt);
            }
        });
        txtLejosCorregidaOD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLejosCorregidaODFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLejosCorregidaODFocusLost(evt);
            }
        });

        txtCercaCorregidaOD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCercaCorregidaODActionPerformed(evt);
            }
        });
        txtCercaCorregidaOD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCercaCorregidaODFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCercaCorregidaODFocusLost(evt);
            }
        });

        txtCercaCorregidaOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCercaCorregidaOIActionPerformed(evt);
            }
        });
        txtCercaCorregidaOI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCercaCorregidaOIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCercaCorregidaOIFocusLost(evt);
            }
        });

        jLabel15.setText("Corregida");

        jLabel16.setText("O.D");

        jLabel17.setText("O.I");

        jLabel18.setText("O.I");

        jLabel19.setText("O.D");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel22.setText("Reflejos Pupilares :");

        txtReflejosPupilares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReflejosPupilaresActionPerformed(evt);
            }
        });

        jLabel23.setText("Enferm.Oculares:");

        txtEnfermedadesOculares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnfermedadesOcularesActionPerformed(evt);
            }
        });

        txtEnfermedadesOculares1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnfermedadesOculares1ActionPerformed(evt);
            }
        });

        bgPterigion.add(chkPterigionDerecho);
        chkPterigionDerecho.setText("PTERIG.OJO DEREC");
        chkPterigionDerecho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPterigionDerechoActionPerformed(evt);
            }
        });

        bgPterigion.add(chkPterigionIzquierdo);
        chkPterigionIzquierdo.setText("PTERIG. OJO IZQ");
        chkPterigionIzquierdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPterigionIzquierdoActionPerformed(evt);
            }
        });

        bgPterigion.add(chkPterigionBilateral);
        chkPterigionBilateral.setText("PTERIG. BILATERAL");
        chkPterigionBilateral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPterigionBilateralActionPerformed(evt);
            }
        });

        chkNormal.setText("Normal");
        chkNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNormalActionPerformed(evt);
            }
        });

        chkConservado.setText("Conservado");
        chkConservado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkConservadoActionPerformed(evt);
            }
        });

        chkNinguna.setText("Ninguna");
        chkNinguna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNingunaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnfermedadesOculares1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkPterigionDerecho)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkPterigionIzquierdo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkPterigionBilateral)))
                        .addGap(2, 2, 2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel23)
                                .addGap(18, 18, 18)
                                .addComponent(txtEnfermedadesOculares))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel22))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtReflejosPupilares, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(chkNinguna))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtVisionBinocular, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(chkConservado))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(jLabel14)
                                                .addGap(57, 57, 57)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel19)
                                                        .addGap(34, 34, 34)
                                                        .addComponent(jLabel18))
                                                    .addComponent(jLabel15)))
                                            .addComponent(txtVisionColores)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtLejosSinCorregirOD, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCercaSinCorregirOD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addGap(13, 13, 13)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(txtLejosSinCorregirOI, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtCercaSinCorregirOI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(7, 7, 7)
                                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(9, 9, 9)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(txtLejosCorregidaOD, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtCercaCorregidaOD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(txtLejosCorregidaOI, javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtCercaCorregidaOI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(jLabel17)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkNormal)))))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCercaCorregidaOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLejosCorregidaOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCercaCorregidaOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLejosCorregidaOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel18))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtCercaSinCorregirOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtLejosSinCorregirOD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtCercaSinCorregirOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtLejosSinCorregirOI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVisionColores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(chkNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVisionBinocular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(chkConservado, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReflejosPupilares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(chkNinguna, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEnfermedadesOculares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkPterigionDerecho, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPterigionIzquierdo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPterigionBilateral, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(txtEnfermedadesOculares1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/gafas.png"))); // NOI18N

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setMnemonic('l');
        btnLimpiar.setText("Nuevo / Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add.png"))); // NOI18N
        btnGuardar.setMnemonic('g');
        btnGuardar.setText("Guardar/Actualizar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Buscar - Imprimir Reportes"));

        jLabel21.setText("Nombre :");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        tbOftalmica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbOftalmica.setToolTipText("Hacer Click para Crear Reporte");
        tbOftalmica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbOftalmicaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbOftalmica);

        jTabbedPane1.addTab("Agregados Recientemente", jScrollPane1);

        txtBuscarCod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarCodKeyReleased(evt);
            }
        });

        jLabel35.setText("Codigo:");

        btnHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/biology1.png"))); // NOI18N
        btnHistorial.setText("VER HISTORIAL ");
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarCod, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHistorial)
                .addGap(146, 146, 146))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(txtBuscarCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHistorial)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnLevantarObservacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chek.gif"))); // NOI18N
        btnLevantarObservacion.setText("LEVANTAR OBSERVACION");
        btnLevantarObservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLevantarObservacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5)
                        .addGap(10, 10, 10)
                        .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel8)
                        .addGap(10, 10, 10)
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel9)
                        .addGap(10, 10, 10)
                        .addComponent(txtContrata, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel20)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(btnGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiar))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEditar)
                            .addComponent(jLabel7))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtExMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(205, 205, 205)
                                .addComponent(btnLevantarObservacion))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(1, 1, 1)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEditar)
                            .addComponent(btnLevantarObservacion))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtExMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel2))
                            .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel5))
                            .addComponent(FechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel8))
                            .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel9))
                            .addComponent(txtContrata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel20))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGuardar)
                            .addComponent(btnLimpiar)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed

        if (!txtNumero.getText().isEmpty()) {
            if (!OrdenExiste()) {
                String Sql = "SELECT datos_paciente.cod_pa, "
                        + "datos_paciente.nombres_pa, "
                        + "datos_paciente.fecha_nacimiento_pa, "
                        + "datos_paciente.apellidos_pa, "
                        + "n_orden_ocupacional.razon_empresa, "
                        + "n_orden_ocupacional.razon_contrata, "
                        + "n_orden_ocupacional.nom_examen "
                        + "FROM datos_paciente, n_orden_ocupacional "
                        + "WHERE datos_paciente.cod_pa  = n_orden_ocupacional.cod_pa "
                        + "AND n_orden_ocupacional.n_orden='" + txtNumero.getText() + "'";
                oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtDni.setText(oConn.setResult.getString("cod_pa"));
                        txtNombres.setText(oConn.setResult.getString("nombres_pa"));
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtApellidos.setText(oConn.setResult.getString("apellidos_pa"));
                        txtEmpresa.setText(oConn.setResult.getString("razon_empresa"));
                        txtContrata.setText(oConn.setResult.getString("razon_contrata"));
                        txtExMedico.setText(oConn.setResult.getString("nom_examen"));
                        txtNumero.setEnabled(false);
                        Ceros();
                        oPe.fecha(FechaExamen);
                        txtCercaSinCorregirOD.requestFocus();
                    } else {
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional de new");
                    }
                    oConn.sqlStmt.close();
                } catch (SQLException ex) {
                    oFunc.SubSistemaMensajeInformacion("Oftalmologia:" + ex.getMessage().toString());
                }
            }

        }
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Deshabilitar(true);
        Limpiar();
        
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        txtNumero.requestFocus();
    }//GEN-LAST:event_formInternalFrameActivated

    private void txtCercaSinCorregirODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirODActionPerformed
        txtCercaSinCorregirOI.requestFocus();
    }//GEN-LAST:event_txtCercaSinCorregirODActionPerformed

    private void txtCercaSinCorregirOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirOIActionPerformed
        txtLejosSinCorregirOD.requestFocus();
    }//GEN-LAST:event_txtCercaSinCorregirOIActionPerformed

    private void txtLejosSinCorregirODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirODActionPerformed
        txtLejosSinCorregirOI.requestFocus();
    }//GEN-LAST:event_txtLejosSinCorregirODActionPerformed

    private void txtLejosSinCorregirOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirOIActionPerformed
        txtCercaCorregidaOD.requestFocus();
    }//GEN-LAST:event_txtLejosSinCorregirOIActionPerformed

    private void txtCercaCorregidaODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCercaCorregidaODActionPerformed
        txtCercaCorregidaOI.requestFocus();
    }//GEN-LAST:event_txtCercaCorregidaODActionPerformed

    private void txtCercaCorregidaOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCercaCorregidaOIActionPerformed
        txtLejosCorregidaOD.requestFocus();
    }//GEN-LAST:event_txtCercaCorregidaOIActionPerformed

    private void txtLejosCorregidaODActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLejosCorregidaODActionPerformed
        txtLejosCorregidaOI.requestFocus();
    }//GEN-LAST:event_txtLejosCorregidaODActionPerformed

    private void txtLejosCorregidaOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLejosCorregidaOIActionPerformed
        txtVisionColores.requestFocus();
    }//GEN-LAST:event_txtLejosCorregidaOIActionPerformed

    private void txtVisionColoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVisionColoresActionPerformed
        txtVisionBinocular.requestFocus();
    }//GEN-LAST:event_txtVisionColoresActionPerformed

    private void txtVisionBinocularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVisionBinocularActionPerformed
        txtReflejosPupilares.requestFocus();
    }//GEN-LAST:event_txtVisionBinocularActionPerformed

    private void txtReflejosPupilaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReflejosPupilaresActionPerformed
        txtEnfermedadesOculares.requestFocus();
    }//GEN-LAST:event_txtReflejosPupilaresActionPerformed

    private void txtCercaSinCorregirODFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirODFocusGained
        txtCercaSinCorregirOD.setText(null);
    }//GEN-LAST:event_txtCercaSinCorregirODFocusGained

    private void txtCercaSinCorregirODFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirODFocusLost
        if (txtCercaSinCorregirOD.getText().isEmpty()) {
            txtCercaSinCorregirOD.setText("00");

        }
    }//GEN-LAST:event_txtCercaSinCorregirODFocusLost

    private void txtCercaSinCorregirOIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirOIFocusGained
        txtCercaSinCorregirOI.setText(null);
    }//GEN-LAST:event_txtCercaSinCorregirOIFocusGained

    private void txtCercaSinCorregirOIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaSinCorregirOIFocusLost
        if (txtCercaSinCorregirOI.getText().isEmpty()) {
            txtCercaSinCorregirOI.setText("00");

        }
    }//GEN-LAST:event_txtCercaSinCorregirOIFocusLost

    private void txtLejosSinCorregirODFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirODFocusGained
        txtLejosSinCorregirOD.setText(null);
    }//GEN-LAST:event_txtLejosSinCorregirODFocusGained

    private void txtLejosSinCorregirODFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirODFocusLost
        if (txtLejosSinCorregirOD.getText().isEmpty()) {
            txtLejosSinCorregirOD.setText("00");

        }
    }//GEN-LAST:event_txtLejosSinCorregirODFocusLost

    private void txtLejosSinCorregirOIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirOIFocusGained
        txtLejosSinCorregirOI.setText(null);
    }//GEN-LAST:event_txtLejosSinCorregirOIFocusGained

    private void txtLejosSinCorregirOIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosSinCorregirOIFocusLost
        if (txtLejosSinCorregirOI.getText().isEmpty()) {
            txtLejosSinCorregirOI.setText("00");

        }
    }//GEN-LAST:event_txtLejosSinCorregirOIFocusLost

    private void txtCercaCorregidaODFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaCorregidaODFocusGained
        txtCercaCorregidaOD.setText(null);
    }//GEN-LAST:event_txtCercaCorregidaODFocusGained

    private void txtCercaCorregidaODFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaCorregidaODFocusLost
        if (txtCercaCorregidaOD.getText().isEmpty()) {
            txtCercaCorregidaOD.setText("00");

        }
    }//GEN-LAST:event_txtCercaCorregidaODFocusLost

    private void txtCercaCorregidaOIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaCorregidaOIFocusGained
        txtCercaCorregidaOI.setText(null);
    }//GEN-LAST:event_txtCercaCorregidaOIFocusGained

    private void txtCercaCorregidaOIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCercaCorregidaOIFocusLost
        if (txtCercaCorregidaOI.getText().isEmpty()) {
            txtCercaCorregidaOI.setText("00");

        }
    }//GEN-LAST:event_txtCercaCorregidaOIFocusLost

    private void txtLejosCorregidaODFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosCorregidaODFocusGained
        txtLejosCorregidaOD.setText(null);
    }//GEN-LAST:event_txtLejosCorregidaODFocusGained

    private void txtLejosCorregidaODFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosCorregidaODFocusLost
        if (txtLejosCorregidaOD.getText().isEmpty()) {
            txtLejosCorregidaOD.setText("00");

        }
    }//GEN-LAST:event_txtLejosCorregidaODFocusLost

    private void txtLejosCorregidaOIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosCorregidaOIFocusGained
        txtLejosCorregidaOI.setText(null);
    }//GEN-LAST:event_txtLejosCorregidaOIFocusGained

    private void txtLejosCorregidaOIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLejosCorregidaOIFocusLost
        if (txtLejosCorregidaOI.getText().isEmpty()) {
            txtLejosCorregidaOI.setText("00");
        }
    }//GEN-LAST:event_txtLejosCorregidaOIFocusLost

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         sbCargarDatosOftalmologia("");
        if (OrdenExiste()) {
            
            Actualizar();
        }else{
            if (!txtNumero.getText().isEmpty()) {
            if (oFunc.fnIntSistemaPregunta("Desea realmente Agregar el Registro") == JOptionPane.YES_OPTION) {
                Agregar();
            }
        } else {
            oFunc.SubSistemaMensajeError("Llene los campos");
        }
        }
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void FechaExamenPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaExamenPropertyChange

//        txtCercaSinCorregirOD.requestFocus();

    }//GEN-LAST:event_FechaExamenPropertyChange

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        sbCargarDatosOftalmologia(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void FechaNacimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaNacimientoPropertyChange

//            if (((JTextField)FechaNacimiento.getDateEditor().getUiComponent()).getText().trim().length() > 2 ) {
//            txtCercaSinCorregirOD.requestFocus();
//      }

    }//GEN-LAST:event_FechaNacimientoPropertyChange

    private void tbOftalmicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbOftalmicaMouseClicked
        if (evt.getClickCount() == 1) {
            String cod = tbOftalmica.getValueAt(tbOftalmica.getSelectedRow(), 0).toString();
            txtBuscarCod.setText(cod);
        }
        if (evt.getClickCount() == 2) {
            Integer cod = Integer.valueOf(tbOftalmica.getValueAt(tbOftalmica.getSelectedRow(), 0).toString());
            if(OrdenObservacion()){
                oPe.print(cod, "OftalmologiaLO.jasper", "Ficha Oftalmologíca");
            }else{
                 oPe.print(cod, "Oftalmologia.jasper", "Ficha Oftalmologíca");
            }
            
           

        }
    }//GEN-LAST:event_tbOftalmicaMouseClicked

    private void txtBuscarCodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCodKeyReleased
        sbCargarDatosOftalmologia(txtBuscarCod.getText());
    }//GEN-LAST:event_txtBuscarCodKeyReleased

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (!txtNumero.getText().isEmpty()) {
            String Sql = "SELECT d.cod_pa, "
                    + "d.nombres_pa, "
                    + "d.fecha_nacimiento_pa, "
                    + "d.apellidos_pa, "
                    + "n.razon_empresa, "
                    + "n.razon_contrata, "
                    + "n.nom_examen, "
                    + "o.v_cerca_s_od, o.v_cerca_s_oi, o.v_cerca_c_od, \n"
                    + "       o.v_cerca_c_oi, o.v_lejos_s_od, o.v_lejos_s_oi, o.v_lejos_c_od, o.v_lejos_c_oi, \n"
                    + "o.v_colores, o.v_binocular, o.r_pupilares, o.e_oculares,o.e_oculares1, o.fecha_of,e_oculvisionlejos "
                    + "FROM datos_paciente as d "
                    + " inner join n_orden_ocupacional as n on(d.cod_pa  = n.cod_pa) "
                    + " inner join oftalmologia as o on(n.n_orden  = o.n_orden) "
                    + "WHERE  o.n_orden='" + txtNumero.getText() + "'";
            oConn.FnBoolQueryExecute(Sql);
            try {
                if (oConn.setResult.next()) {
                    txtDni.setText(oConn.setResult.getString("cod_pa"));
                    txtNombres.setText(oConn.setResult.getString("nombres_pa"));
                    FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                    txtApellidos.setText(oConn.setResult.getString("apellidos_pa"));
                    txtEmpresa.setText(oConn.setResult.getString("razon_empresa"));
                    txtContrata.setText(oConn.setResult.getString("razon_contrata"));
                    txtExMedico.setText(oConn.setResult.getString("nom_examen"));
                    txtCercaSinCorregirOD.setText(oConn.setResult.getString("v_cerca_s_od"));
                    txtCercaSinCorregirOI.setText(oConn.setResult.getString("v_cerca_s_oi"));
                    txtCercaCorregidaOD.setText(oConn.setResult.getString("v_cerca_c_od"));
                    txtCercaCorregidaOI.setText(oConn.setResult.getString("v_cerca_c_oi"));
                    txtLejosSinCorregirOD.setText(oConn.setResult.getString("v_lejos_s_od"));
                    txtLejosSinCorregirOI.setText(oConn.setResult.getString("v_lejos_s_oi"));
                    txtLejosCorregidaOD.setText(oConn.setResult.getString("v_lejos_c_od"));
                    txtLejosCorregidaOI.setText(oConn.setResult.getString("v_lejos_c_oi"));
                    txtVisionColores.setText(oConn.setResult.getString("v_colores"));
                    txtVisionBinocular.setText(oConn.setResult.getString("v_binocular"));
                    txtReflejosPupilares.setText(oConn.setResult.getString("r_pupilares"));
                    txtEnfermedadesOculares.setText(oConn.setResult.getString("e_oculares"));
                    FechaExamen.setDate(oConn.setResult.getDate("fecha_of"));
//                    oPe.fecha(FechaExamen);
                    txtEnfermedadesOculares1.setText(oConn.setResult.getString("e_oculares1"));
//                    txtEnfVisionLejos.setText(oConn.setResult.getString("e_oculvisionlejos"));
                    
                } else {
                    oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional de new");
                }
                oConn.setResult.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeInformacion("Oftalmologia:" + ex.getMessage().toString());
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtEnfermedadesOcularesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnfermedadesOcularesActionPerformed
     
        
    }//GEN-LAST:event_txtEnfermedadesOcularesActionPerformed

    private void txtEnfermedadesOculares1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnfermedadesOculares1ActionPerformed
        if(txtNumero.getText().isEmpty()){
            if (oFunc.fnIntSistemaPregunta("Desea realmente Agregar el Registro")==JOptionPane.YES_OPTION){
                Agregar();
            }
        }else{oFunc.SubSistemaMensajeError("No Llene los campos");}
    }//GEN-LAST:event_txtEnfermedadesOculares1ActionPerformed

    private void chkPterigionDerechoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPterigionDerechoActionPerformed
        if(chkPterigionDerecho.isSelected()){
            txtEnfermedadesOculares1.setText("PTERIGIÓN OJO DERECHO.");
        }
    }//GEN-LAST:event_chkPterigionDerechoActionPerformed

    private void chkPterigionIzquierdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPterigionIzquierdoActionPerformed
        if(chkPterigionIzquierdo.isSelected()){
            txtEnfermedadesOculares1.setText("PTERIGIÓN OJO IZQUIERDO.");
        }
    }//GEN-LAST:event_chkPterigionIzquierdoActionPerformed

    private void chkPterigionBilateralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPterigionBilateralActionPerformed
         if(chkPterigionBilateral.isSelected()){
            txtEnfermedadesOculares1.setText("PTERIGIÓN BILATERAL.");
        }
    }//GEN-LAST:event_chkPterigionBilateralActionPerformed

    private void chkNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNormalActionPerformed
        txtVisionColores.setText("NORMAL");
    }//GEN-LAST:event_chkNormalActionPerformed

    private void chkConservadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkConservadoActionPerformed
        txtReflejosPupilares.setText("CONSERVADO");
    }//GEN-LAST:event_chkConservadoActionPerformed

    private void chkNingunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNingunaActionPerformed
        txtEnfermedadesOculares.setText("NINGUNA");
    }//GEN-LAST:event_chkNingunaActionPerformed

    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        Integer cod=Integer.parseInt(txtBuscarCod.getText().toString());
        oPe.print(cod, "ReporteOftalmologico.jasper", "Resumen de Oftalmologia");
    }//GEN-LAST:event_btnHistorialActionPerformed

    private void btnLevantarObservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLevantarObservacionActionPerformed
      FichaOftalmologica1 o = new FichaOftalmologica1();
        if(!txtNumero.getText().isEmpty()){
            String cod=txtNumero.getText().toString();
            o.txtNumero.setText(cod);
            o.setVisible(true);
           o.setLocationRelativeTo(this);
       }else{
            o.setVisible(true);
           o.setLocationRelativeTo(this);
       }
      
    }//GEN-LAST:event_btnLevantarObservacionActionPerformed

    public void Deshabilitar(boolean ficha) {
        txtDni.setEnabled(false);
        txtNombres.setEnabled(false);
        FechaNacimiento.setEnabled(false);
        txtApellidos.setEnabled(false);
        txtEmpresa.setEnabled(false);
        txtContrata.setEnabled(false);
        txtExMedico.setEnabled(false);
        txtNumero.setEnabled(ficha);
    }

    public void Limpiar() {
        txtDni.setText(null);
        txtNombres.setText(null);
        FechaNacimiento.setDate(null);
        txtApellidos.setText(null);
        txtEmpresa.setText(null);
        txtContrata.setText(null);
        txtExMedico.setText(null);
        txtNumero.setText(null);
        FechaExamen.setDate(null);
        txtLejosSinCorregirOI.setText(null);
        txtVisionBinocular.setText(null);
        txtVisionColores.setText(null);
        txtReflejosPupilares.setText(null);
        txtEnfermedadesOculares.setText(null);
        txtCercaCorregidaOD.setText(null);
        txtCercaCorregidaOI.setText(null);
        txtCercaSinCorregirOD.setText(null);
        txtCercaSinCorregirOI.setText(null);
        txtLejosCorregidaOD.setText(null);
        txtLejosCorregidaOI.setText(null);
        txtLejosSinCorregirOD.setText(null);
        txtLejosSinCorregirOI.setText(null);
        txtEnfermedadesOculares1.setText(null);
        txtNumero.requestFocus();
        chkPterigionBilateral.setSelected(false);
        chkPterigionDerecho.setSelected(false);
        chkPterigionIzquierdo.setSelected(false);
        chkNormal.setSelected(false);
        chkConservado.setSelected(false);
        chkNinguna.setSelected(false);
       
    }

    public void Ceros() {
        txtCercaCorregidaOD.setText("00");
        txtCercaCorregidaOI.setText("00");
        txtCercaSinCorregirOD.setText("00");
        txtCercaSinCorregirOI.setText("00");
        txtLejosCorregidaOD.setText("00");
        txtLejosCorregidaOI.setText("00");
        txtLejosSinCorregirOD.setText("00");
        txtLejosSinCorregirOI.setText("00");
    }
  private void Actualizar(){
      String sCodigo = txtNumero.getText();
        String strSqlStmt;
        strSqlStmt = "UPDATE oftalmologia\n"
                + "   SET v_cerca_s_od='" + txtCercaSinCorregirOD.getText().toString() + "', v_cerca_s_oi='" + txtCercaSinCorregirOI.getText().toString() + "', \n"
                + "       v_cerca_c_od='" + txtCercaCorregidaOD.getText().toString() + "', v_cerca_c_oi='" + txtCercaCorregidaOI.getText().toString() + "', "
                + "     v_lejos_s_od='" + txtLejosSinCorregirOD.getText().toString() + "', v_lejos_s_oi='" + txtLejosSinCorregirOI.getText().toString() + "', \n"
                + "       v_lejos_c_od='" + txtLejosCorregidaOD.getText().toString() + "', v_lejos_c_oi='" + txtLejosCorregidaOI.getText().toString() + "', "
                + "     v_colores='" + txtVisionColores.getText().toString() + "', v_binocular='" + txtVisionBinocular.getText().toString() + "', "
                + "     r_pupilares='" + txtReflejosPupilares.getText().toString()+"'";
                if (txtEnfermedadesOculares.getText().trim().length() >= 1) {
                    strSqlStmt += ",e_oculares='" + txtEnfermedadesOculares.getText().toString() + "'";
                }else{
                    strSqlStmt += ",e_oculares=null";
                }
               strSqlStmt += ",f_actualizacion='" + FechaExamen.getDate() + "'";
               if (txtEnfermedadesOculares1.getText().trim().length() >= 1) {
                    strSqlStmt +=", e_oculares1='" + txtEnfermedadesOculares1.getText().toString() + "'";
                   
                }else{
                    strSqlStmt += ",e_oculares1=null";
               }
                strSqlStmt +=" WHERE n_orden='" + sCodigo + "'";
        
        Limpiar();
        txtNumero.setEnabled(true);
        txtNumero.requestFocus();
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Éxito");
            oPe.print(Integer.parseInt(sCodigo), "Oftalmologia.jasper", "Ficha Oftalmologíca");
            try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(FichaOftalmologica.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
  }
    private boolean validar() {
        boolean bResultado = true;
        if (((JTextField) FechaExamen.getDateEditor().getUiComponent()).getText().trim().length() < 2) {
            oFunc.SubSistemaMensajeError("Ingrese Fecha de Examen");
            bResultado = false;
        }
        return bResultado;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaExamen;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private javax.swing.ButtonGroup TipoCliente;
    private javax.swing.ButtonGroup bgPterigion;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnLevantarObservacion;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkConservado;
    private javax.swing.JCheckBox chkNinguna;
    private javax.swing.JCheckBox chkNormal;
    private javax.swing.JCheckBox chkPterigionBilateral;
    private javax.swing.JCheckBox chkPterigionDerecho;
    private javax.swing.JCheckBox chkPterigionIzquierdo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tbOftalmica;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtBuscarCod;
    private javax.swing.JTextField txtCercaCorregidaOD;
    private javax.swing.JTextField txtCercaCorregidaOI;
    private javax.swing.JTextField txtCercaSinCorregirOD;
    private javax.swing.JTextField txtCercaSinCorregirOI;
    private javax.swing.JTextField txtContrata;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtEnfermedadesOculares;
    private javax.swing.JTextField txtEnfermedadesOculares1;
    private javax.swing.JTextField txtExMedico;
    private javax.swing.JTextField txtLejosCorregidaOD;
    private javax.swing.JTextField txtLejosCorregidaOI;
    private javax.swing.JTextField txtLejosSinCorregirOD;
    private javax.swing.JTextField txtLejosSinCorregirOI;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtReflejosPupilares;
    private javax.swing.JTextField txtVisionBinocular;
    private javax.swing.JTextField txtVisionColores;
    // End of variables declaration//GEN-END:variables
    void sbCargarDatosOftalmologia(String valor) {
        String[] titulos = {"N.Orden", "Nombre", "FechaRegistro","Fecha_Actualizacion"};
        String[] registros = new String[4];
        String sql = "";
        if (!txtBuscarCod.getText().isEmpty()) {
            sql = "select datos_paciente.nombres_pa||''||datos_paciente.apellidos_pa AS nombres, "
                    + "oftalmologia.cod_of,"
                    + "oftalmologia.n_orden,"
                    + "oftalmologia.fecha_of, "
                    + "oftalmologia.f_actualizacion "
                    + "From datos_paciente "
                    + "inner join n_orden_ocupacional "
                    + "ON (datos_paciente.cod_pa = n_orden_ocupacional.cod_pa) "
                    + "inner join oftalmologia "
                    + "on (n_orden_ocupacional.n_orden = oftalmologia.n_orden) "
                    + "where oftalmologia.n_orden=' " + txtBuscarCod.getText().toString() + "'"
                    + "order by oftalmologia.n_orden desc";
        } else {
            sql = "select datos_paciente.nombres_pa||''||datos_paciente.apellidos_pa AS nombres, "
                    + "oftalmologia.cod_of,"
                    + "oftalmologia.n_orden,"
                    + "oftalmologia.fecha_of,"
                    + "oftalmologia.f_actualizacion "
                    + "From datos_paciente "
                    + "inner join n_orden_ocupacional "
                    + "ON (datos_paciente.cod_pa = n_orden_ocupacional.cod_pa) "
                    + "inner join oftalmologia "
                    + "on (n_orden_ocupacional.n_orden = oftalmologia.n_orden) "
                    + "where CONCAT(nombres_pa,' ',apellidos_pa) LIKE '%" + valor + "%' "
                    + "order by oftalmologia.n_orden desc";
        }
        // DefaultTableModel tblDatos = (DefaultTableModel) tblProductos.getModel();      
        model = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        if (oConn.FnBoolQueryExecute(sql)) {
            try {

                while (oConn.setResult.next()) {

                    registros[0] = oConn.setResult.getString("n_orden");
                    registros[1] = oConn.setResult.getString("nombres");
                    registros[2] = formato.format(oConn.setResult.getDate("fecha_of"));
                    registros[3] = oConn.setResult.getString("f_actualizacion");
                    model.addRow(registros);
                }

                // Coloca el Modelo de Nueva Cuenta
                tbOftalmica.setModel(model);
                tbOftalmica.getColumnModel().getColumn(0).setMinWidth(50);
                tbOftalmica.getColumnModel().getColumn(0).setMaxWidth(50);
               // tbOftalmica.getColumnModel().getColumn(2).setMaxWidth(100);
               // tbOftalmica.getColumnModel().getColumn(3).setMaxWidth(100);

                // sbTablaOftalmica();

                // Cierra Resultados
                oConn.setResult.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(FichaTriaje.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public boolean OrdenExiste() {
        boolean bResultado = false;

        String sQuery;

        sQuery = "Select * from oftalmologia Where n_orden=" + txtNumero.getText().toString();

        //Ejecuta el Query
        oConn.FnBoolQueryExecute(sQuery);

        // Capturo el Error
        try {

            // Verifico que haya habido resultados
            if (oConn.setResult.next()) {
                // Resultado
                bResultado = true;
//                oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//
//                Limpiar();
            }

            // Cierro los Resultados
            oConn.setResult.close();

        } catch (SQLException ex) {

        }

        return bResultado;

    }
     public boolean OrdenObservacion() {
        boolean bResultado = false;

        String sQuery;
        Integer cod = Integer.valueOf(tbOftalmica.getValueAt(tbOftalmica.getSelectedRow(), 0).toString());
        sQuery = "Select * from oftalmologia_lo Where n_orden=" + cod;

        //Ejecuta el Query
        oConn.FnBoolQueryExecute(sQuery);

        // Capturo el Error
        try {

            // Verifico que haya habido resultados
            if (oConn.setResult.next()) {
                // Resultado
                bResultado = true;
//                oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//
//                Limpiar();
            }

            // Cierro los Resultados
            oConn.setResult.close();

        } catch (SQLException ex) {

        }

        return bResultado;

    }
    public void Agregar() {
        if (!OrdenExiste()) {
            if (validar()) {
                String strSqlStmt;
                String Query;
                String cod=txtNumero.getText().toString();
                strSqlStmt = "INSERT INTO oftalmologia(";
                Query = "Values('";
                if (txtNumero.getText().trim().length() >= 1) {
                    strSqlStmt += "n_orden";
                    Query += txtNumero.getText().toString() + "'";
                }
                if (txtCercaSinCorregirOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_s_od";
                    Query += ",'" + txtCercaSinCorregirOD.getText().toString() + "'";
                }
                if (txtCercaSinCorregirOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_s_oi";
                    Query += ",'" + txtCercaSinCorregirOI.getText().toString() + "'";
                }
                if (txtCercaCorregidaOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_c_od";
                    Query += ",'" + txtCercaCorregidaOD.getText().toString() + "'";
                }
                if (txtCercaCorregidaOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_c_oi";
                    Query += ",'" + txtCercaCorregidaOI.getText().toString() + "'";
                }
                if (txtLejosSinCorregirOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_s_od";
                    Query += ",'" + txtLejosSinCorregirOD.getText().toString() + "'";
                }
                if (txtLejosSinCorregirOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_s_oi";
                    Query += ",'" + txtLejosSinCorregirOI.getText().toString() + "'";
                }
                if (txtLejosCorregidaOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_c_od";
                    Query += ",'" + txtLejosCorregidaOD.getText().toString() + "'";
                }
                if (txtLejosCorregidaOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_c_oi";
                    Query += ",'" + txtLejosCorregidaOI.getText().toString() + "'";
                }
                if (txtVisionColores.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_colores";
                    Query += ",'" + txtVisionColores.getText().toString() + "'";
                }
                if (txtVisionBinocular.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_binocular";
                    Query += ",'" + txtVisionBinocular.getText().toString() + "'";
                }
                if (txtReflejosPupilares.getText().trim().length() >= 1) {
                    strSqlStmt += ",r_pupilares";
                    Query += ",'" + txtReflejosPupilares.getText().toString() + "'";
                }
                if (txtEnfermedadesOculares.getText().trim().length() >= 1) {
                    strSqlStmt += ",e_oculares";
                    Query += ",'" + txtEnfermedadesOculares.getText().toString() + "'";
                }
                if (((JTextField) FechaExamen.getDateEditor().getUiComponent()).getText().trim().length() > 1) {
                    strSqlStmt += ",fecha_of";
                    Query += ",'" + FechaExamen.getDate().toString() + "'";
                }
                if (txtEnfermedadesOculares1.getText().trim().length() >= 1) {
                    strSqlStmt += ",e_oculares1";
                    Query += ",'" + txtEnfermedadesOculares1.getText().toString() + "'";
                }

                if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + Query.concat(")"))) {
                    oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                    
                    Limpiar();
                    txtNumero.setEnabled(true);
                    sbCargarDatosOftalmologia("");
                    txtNumero.requestFocus();
                    oPe.print(Integer.parseInt(cod), "Oftalmologia.jasper", "Ficha Oftalmologíca");
                } else {
                    oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");

                }
            }
                try {
                    oConn.sqlStmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FichaOftalmologica.class.getName()).log(Level.SEVERE, null, ex);
                }
        }else{
            oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
        }
    }
     public void LevantarObservacion() {
       
            if (validar()) {
                String strSqlStmt;
                String Query;
                String cod=txtNumero.getText().toString();
                strSqlStmt = "INSERT INTO oftalmologia_lo(";
                Query = "Values('";
                if (txtNumero.getText().trim().length() >= 1) {
                    strSqlStmt += "n_orden";
                    Query += txtNumero.getText().toString() + "'";
                }
                if (txtCercaSinCorregirOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_s_od";
                    Query += ",'" + txtCercaSinCorregirOD.getText().toString() + "'";
                }
                if (txtCercaSinCorregirOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_s_oi";
                    Query += ",'" + txtCercaSinCorregirOI.getText().toString() + "'";
                }
                if (txtCercaCorregidaOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_c_od";
                    Query += ",'" + txtCercaCorregidaOD.getText().toString() + "'";
                }
                if (txtCercaCorregidaOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_cerca_c_oi";
                    Query += ",'" + txtCercaCorregidaOI.getText().toString() + "'";
                }
                if (txtLejosSinCorregirOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_s_od";
                    Query += ",'" + txtLejosSinCorregirOD.getText().toString() + "'";
                }
                if (txtLejosSinCorregirOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_s_oi";
                    Query += ",'" + txtLejosSinCorregirOI.getText().toString() + "'";
                }
                if (txtLejosCorregidaOD.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_c_od";
                    Query += ",'" + txtLejosCorregidaOD.getText().toString() + "'";
                }
                if (txtLejosCorregidaOI.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_lejos_c_oi";
                    Query += ",'" + txtLejosCorregidaOI.getText().toString() + "'";
                }
                if (txtVisionColores.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_colores";
                    Query += ",'" + txtVisionColores.getText().toString() + "'";
                }
                if (txtVisionBinocular.getText().trim().length() >= 1) {
                    strSqlStmt += ",v_binocular";
                    Query += ",'" + txtVisionBinocular.getText().toString() + "'";
                }
                if (txtReflejosPupilares.getText().trim().length() >= 1) {
                    strSqlStmt += ",r_pupilares";
                    Query += ",'" + txtReflejosPupilares.getText().toString() + "'";
                }
                if (txtEnfermedadesOculares.getText().trim().length() >= 1) {
                    strSqlStmt += ",e_oculares";
                    Query += ",'" + txtEnfermedadesOculares.getText().toString() + "'";
                }
                if (((JTextField) FechaExamen.getDateEditor().getUiComponent()).getText().trim().length() > 1) {
                    strSqlStmt += ",fecha_of";
                    Query += ",'" + FechaExamen.getDate().toString() + "'";
                }
                if (txtEnfermedadesOculares1.getText().trim().length() >= 1) {
                    strSqlStmt += ",e_oculares1";
                    Query += ",'" + txtEnfermedadesOculares1.getText().toString() + "'";
                }

                if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + Query.concat(")"))) {
                    oFunc.SubSistemaMensajeInformacion("Se ha levantado la observación ");
                } else {
                    oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");

                }
                try {
                    oConn.sqlStmt.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FichaOftalmologica.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
       
    }
    private void sbTablaOftalmica() {

        tbOftalmica.getColumnModel().getColumn(0).setMinWidth(65);
        tbOftalmica.getColumnModel().getColumn(0).setMaxWidth(65);
        tbOftalmica.getColumnModel().getColumn(1).setMinWidth(260);
        tbOftalmica.getColumnModel().getColumn(1).setMaxWidth(260);
        tbOftalmica.getColumnModel().getColumn(2).setMinWidth(130);
        tbOftalmica.getColumnModel().getColumn(2).setMaxWidth(130);
        tbOftalmica.getColumnModel().getColumn(3).setMinWidth(130);
        tbOftalmica.getColumnModel().getColumn(3).setMaxWidth(130);

        tbOftalmica.setFont(new java.awt.Font("Tahoma", 0, 11));

        // Alinear a la derecha las cantidades y precios
        DefaultTableCellRenderer cellAlinear = new DefaultTableCellRenderer();

        // Asignamos el Alineamiento Horizontal a la derecha
        cellAlinear.setHorizontalAlignment(SwingConstants.CENTER);

        // Asignamos la Variable de celda de alineamiento a cada una de las columnas a alinear
        tbOftalmica.getColumnModel().getColumn(0).setCellRenderer(cellAlinear);
        //tbTriaje.getColumnModel().getColumn(1).setCellRenderer(cellAlinear);
        tbOftalmica.getColumnModel().getColumn(2).setCellRenderer(cellAlinear);
                tbOftalmica.getColumnModel().getColumn(3).setCellRenderer(cellAlinear);

        // Color de los Encabezados
        //jtTicket.getTableHeader().setBackground(Color.lightGray);
        //jtTicket.getTableHeader().setForeground(Color.blue);
        tbOftalmica.getTableHeader().setFont(new java.awt.Font("Tahoma", 0, 11));

        // Remueve la Columna de la Vista
        //jtTicket.removeColumn(jtTicket.getColumnModel().getColumn(4));
    }
}
