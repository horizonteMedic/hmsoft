/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsOperacionesUsuarios;
import com.toedter.calendar.JDateChooser;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author admin
 */
public class PerfilHepatico extends javax.swing.JInternalFrame {

    clsConnection oConn = new clsConnection();
    clsFunciones  oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
   public PerfilHepatico() {
       
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        txtNombres1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEdad1 = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        FechaEx = new com.toedter.calendar.JDateChooser();
        btnLimpiar1 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        txtImprimir1 = new javax.swing.JTextField();
        btnImprimir6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTGP = new javax.swing.JTextField();
        txtGGT = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtFosfAlcalina = new javax.swing.JTextField();
        txtBilirrubinaTotal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtbilirrubinaDirecta = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtTGO = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtBilirrubinaIndirecta = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtProteinasTotales = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtAlbumina = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtGlobulinaSerica = new javax.swing.JTextField();
        btnEditar1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("LABORATORIO");

        jLabel9.setText("Nro Ficha:");

        jLabel10.setText("Nombres:");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel11.setText("Edad: ");

        jLabel118.setText("Fecha :");

        FechaEx.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaExPropertyChange(evt);
            }
        });

        btnLimpiar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar1.setMnemonic('l');
        btnLimpiar1.setText("Limpiar");
        btnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar1ActionPerformed(evt);
            }
        });

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "IMPRIMIR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11), new java.awt.Color(0, 0, 102))); // NOI18N

        txtImprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImprimir1ActionPerformed(evt);
            }
        });

        btnImprimir6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        btnImprimir6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimir6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtImprimir1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir6)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtImprimir1)
            .addComponent(btnImprimir6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrar.png"))); // NOI18N
        jButton2.setText("Guardar/Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("PRUEBAS ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("RESULTADOS ");

        jLabel14.setText("TGP");

        jLabel15.setText("GGT");

        txtTGP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTGPActionPerformed(evt);
            }
        });

        txtGGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGGTActionPerformed(evt);
            }
        });

        jLabel16.setText("FOSFATASA ALCALINA");

        txtFosfAlcalina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFosfAlcalinaActionPerformed(evt);
            }
        });

        txtBilirrubinaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBilirrubinaTotalActionPerformed(evt);
            }
        });

        jLabel17.setText("BILIRRUBINA TOTAL");

        jLabel18.setText("BILIRRUBINA DIRECTA");

        txtbilirrubinaDirecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbilirrubinaDirectaActionPerformed(evt);
            }
        });

        jLabel23.setText("TGO");

        txtTGO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTGOActionPerformed(evt);
            }
        });

        jLabel24.setText("BILIRRUBINA INDIRECTA");

        txtBilirrubinaIndirecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBilirrubinaIndirectaActionPerformed(evt);
            }
        });

        jLabel34.setText("PROTEINAS TOTALES");

        txtProteinasTotales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProteinasTotalesActionPerformed(evt);
            }
        });

        jLabel35.setText("ALBUMINA");

        txtAlbumina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlbuminaActionPerformed(evt);
            }
        });

        jLabel36.setText("GLOBULINA SERICA");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(119, 119, 119)
                        .addComponent(jLabel13))
                    .addComponent(jLabel23)
                    .addComponent(jLabel16)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFosfAlcalina, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBilirrubinaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGGT, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTGP, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTGO, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtbilirrubinaDirecta, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProteinasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAlbumina, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGlobulinaSerica, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel24)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(txtBilirrubinaIndirecta, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtTGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTGP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtGGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtFosfAlcalina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtBilirrubinaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtBilirrubinaIndirecta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtbilirrubinaDirecta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtProteinasTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(txtAlbumina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtGlobulinaSerica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        btnEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar1.setText("Editar");
        btnEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEditar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel118, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FechaEx, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtNombres1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnLimpiar1)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel118)
                            .addComponent(btnEditar1))
                        .addComponent(FechaEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEdad1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtNombres1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimpiar1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PERFIL HEPATICO", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 433, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        // TODO add your handling code here:
        JDateChooser FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
            if(!OrdenExiste()){
                String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
                + "d.sexo_pa,n.tipoprueba "
                + "FROM datos_paciente AS d "
                + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) "
                + "WHERE n.n_orden ='"+txtNorden.getText() +"'";
                oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtNombres1.setText(oConn.setResult.getString("nombre"));
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdad1.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) +" AÑOS" );
                        oPe.fecha(FechaEx);
                        //   oPe.fecha(FechaHotel);
                    }else{
                        oFunc.SubSistemaMensajeError("No se encuentra registrado");
                    }
                    oConn.setResult.close();
                } catch (SQLException ex) {
                    oFunc.SubSistemaMensajeInformacion("psicologia:" + ex.getMessage().toString());}
            }else{
                oFunc.SubSistemaMensajeError("N° orden regitrado");
            }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void FechaExPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaExPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_FechaExPropertyChange

    private void btnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar1ActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiar1ActionPerformed

    private void txtImprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImprimir1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImprimir1ActionPerformed

    private void btnImprimir6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimir6ActionPerformed
        // TODO add your handling code here:
        print (Integer.parseInt(txtImprimir1.getText()));
    }//GEN-LAST:event_btnImprimir6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (OrdenExiste()) {
            Actualizar();
        } else {
            if (!txtNorden.getText().isEmpty()) {
                try {
                    if (validar()) {
                        if (Grabar()) {
                            imprimir();
                            limpiar();
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(InformePsicolaboral.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtTGPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTGPActionPerformed
        // TODO add your handling code here:
        txtGGT.requestFocus();
    }//GEN-LAST:event_txtTGPActionPerformed

    private void btnEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditar1ActionPerformed
        // TODO add your handling code here:
        JDateChooser FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNorden.getText().isEmpty()){
            String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
                    + "p.fecha_examen, p.txtr_tgo, p.txtr_tgp, p.txtr_ggt, \n" +
"            p.txtr_fosfalcalina, p.txtr_bilirrtotal, p.txtr_bilirrdirecta, p.txtr_bilirrindirecta, \n" +
"            p.txtr_protetotales, p.txtr_albumina, p.txtr_globulina " +
            "       FROM datos_paciente AS d \n" +
            "       INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa)     \n" +
            "       INNER JOIN perfil_hepatico AS p ON (p.n_orden = n.n_orden)  \n" +
            "       WHERE p.n_orden ="+txtNorden.getText()+";";
            oConn.FnBoolQueryExecute(Sql);
            try {
                if (oConn.setResult.next()) {
                    txtNombres1.setText(oConn.setResult.getString("nombre"));
                    FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                    txtEdad1.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar()))+" AÑOS" );
                    txtTGO.setText(oConn.setResult.getString("txtr_tgo"));
                    txtTGP.setText(oConn.setResult.getString("txtr_tgp"));
                    txtGGT.setText(oConn.setResult.getString("txtr_ggt"));
                    txtFosfAlcalina.setText(oConn.setResult.getString("txtr_fosfalcalina"));
                    txtBilirrubinaTotal.setText(oConn.setResult.getString("txtr_bilirrtotal"));
                    txtbilirrubinaDirecta.setText(oConn.setResult.getString("txtr_bilirrdirecta"));
                    txtBilirrubinaIndirecta.setText(oConn.setResult.getString("txtr_bilirrindirecta"));
                    txtProteinasTotales.setText(oConn.setResult.getString("txtr_protetotales"));
                    txtAlbumina.setText(oConn.setResult.getString("txtr_albumina"));
                    txtGlobulinaSerica.setText(oConn.setResult.getString("txtr_globulina"));
                    FechaEx.setDate(oConn.setResult.getDate("fecha_examen"));
                }else{
                    oFunc.SubSistemaMensajeError("N° orden no registrado");
                }
                oConn.setResult.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeInformacion("Ficha Perfil Hepatico:" + ex.getMessage().toString());}
        }
    }//GEN-LAST:event_btnEditar1ActionPerformed

    private void txtTGOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTGOActionPerformed
        // TODO add your handling code here:
        txtTGP.requestFocus();
    }//GEN-LAST:event_txtTGOActionPerformed

    private void txtGGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGGTActionPerformed
        // TODO add your handling code here:
        txtFosfAlcalina.requestFocus();
    }//GEN-LAST:event_txtGGTActionPerformed

    private void txtFosfAlcalinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFosfAlcalinaActionPerformed
        // TODO add your handling code here:
        txtBilirrubinaTotal.requestFocus();
    }//GEN-LAST:event_txtFosfAlcalinaActionPerformed

    private void txtBilirrubinaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBilirrubinaTotalActionPerformed
        // TODO add your handling code here:
        txtbilirrubinaDirecta.requestFocus();
    }//GEN-LAST:event_txtBilirrubinaTotalActionPerformed

    private void txtbilirrubinaDirectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbilirrubinaDirectaActionPerformed
        // TODO add your handling code here:
        txtBilirrubinaIndirecta.requestFocus();
    }//GEN-LAST:event_txtbilirrubinaDirectaActionPerformed

    private void txtBilirrubinaIndirectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBilirrubinaIndirectaActionPerformed
        // TODO add your handling code here:
        txtProteinasTotales.requestFocus();
    }//GEN-LAST:event_txtBilirrubinaIndirectaActionPerformed

    private void txtProteinasTotalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProteinasTotalesActionPerformed
        // TODO add your handling code here:
        txtAlbumina.requestFocus();
    }//GEN-LAST:event_txtProteinasTotalesActionPerformed

    private void txtAlbuminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlbuminaActionPerformed
        // TODO add your handling code here:
        txtGlobulinaSerica.requestFocus();
    }//GEN-LAST:event_txtAlbuminaActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaEx;
    private javax.swing.JButton btnEditar1;
    private javax.swing.JButton btnImprimir6;
    private javax.swing.JButton btnLimpiar1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtAlbumina;
    private javax.swing.JTextField txtBilirrubinaIndirecta;
    private javax.swing.JTextField txtBilirrubinaTotal;
    private javax.swing.JTextField txtEdad1;
    private javax.swing.JTextField txtFosfAlcalina;
    private javax.swing.JTextField txtGGT;
    private javax.swing.JTextField txtGlobulinaSerica;
    private javax.swing.JTextField txtImprimir1;
    private javax.swing.JTextField txtNombres1;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtProteinasTotales;
    private javax.swing.JTextField txtTGO;
    private javax.swing.JTextField txtTGP;
    private javax.swing.JTextField txtbilirrubinaDirecta;
    // End of variables declaration//GEN-END:variables
    
    public boolean OrdenExiste(){
        boolean bResultado=false;
         if (!txtNorden.getText().isEmpty()) {
             String sQuery;
             sQuery = "Select n_orden from perfil_hepatico where n_orden=" + txtNorden.getText().toString();
             oConn.FnBoolQueryExecute(sQuery);
             try {
                 if (oConn.setResult.next()) {
                     bResultado = true;
                 }
                 oConn.setResult.close();
             } catch (SQLException ex) {
             }
         }      
        return bResultado;
     }
     private boolean validar() {
        boolean bResultado = true;

        if (((JTextField) FechaEx.getDateEditor().getUiComponent()).getText().trim().length() < 2) {
            oFunc.SubSistemaMensajeError("Ingrese Fecha ");
            bResultado = false;
        }

        return bResultado;
    }
   
    public void limpiar() {
        txtNorden.setText("");
        txtNombres1.setText("");
        txtEdad1.setText("");
        FechaEx.setDate(null);
        txtTGO.setText("");
        txtGGT.setText("");
        txtTGP.setText("");
        txtFosfAlcalina.setText("");
        txtBilirrubinaTotal.setText("");
        txtbilirrubinaDirecta.setText("");
         txtBilirrubinaIndirecta.setText("");
         txtProteinasTotales.setText("");
         txtAlbumina.setText("");
         txtGlobulinaSerica.setText("");

    }
     private boolean imprimir(){
        boolean im = false;
        int seleccion = JOptionPane.showOptionDialog(
            this, // Componente padre
            "¿Desea Imprimir?", //Mensaje
            "Seleccione una opción", // Título
            JOptionPane.YES_NO_CANCEL_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,    // null para icono por defecto.
            new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
            "Si");
            if (seleccion != -1)
            {
           if((seleccion + 1)==1)
           {
              printer(Integer.valueOf(txtNorden.getText().toString()));
               im = true;
           }
           else
           {
              // PRESIONO NO
             }
            }
            return im;

        }
    private void printer(Integer cod) {
        Map parameters = new HashMap();
        parameters.put("Norden", cod);
        String direccionReporte;
        try {
            direccionReporte= System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "PerfilHepatico.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint jasperPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperPrintManager.printReport(jasperPrint, true);

        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void print(Integer cod) {
        Map parameters = new HashMap();
        parameters.put("Norden", cod);
        String direccionReporte;
        try {
            direccionReporte= System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "PerfilHepatico.jasper";
            
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("FORMATO DE LABORATORIO");
            // viewer.setAlwaysOnTop(true);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public void Actualizar() {
        String sCodigo = txtNorden.getText();
        String strSqlStmt;
        strSqlStmt = "UPDATE  perfil_hepatico\n "
                + "   SET fecha_examen='" + FechaEx.getDate() + "',"
                + "       txtr_tgo='" + txtTGO.getText() + "',"
                + "       txtr_tgp='" + txtTGP.getText() + "',"
                + "       txtr_ggt='" + txtGGT.getText() + "',"
                + "       txtr_fosfalcalina='" + txtFosfAlcalina.getText() + "',"
                + "       txtr_bilirrtotal='" + txtBilirrubinaTotal.getText() + "',"
                + "       txtr_bilirrdirecta='" + txtbilirrubinaDirecta.getText() + "',"
                + "       txtr_bilirrindirecta='" + txtBilirrubinaIndirecta.getText() + "',"
                + "       txtr_protetotales='" + txtProteinasTotales.getText() + "',"
                + "       txtr_albumina='" + txtAlbumina.getText() + "',"
                + "       txtr_globulina='" + txtGlobulinaSerica.getText() + "'"
                + "   WHERE n_orden=" + sCodigo + ";";
       
        //  System.out.println(strSqlStmt);
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Éxito");
            imprimir();
            limpiar();
            try {
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                Logger.getLogger(InformePsicolaboral.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
    }
     
     private boolean Grabar() throws SQLException {
        boolean bResult = false;
        String strSqlStmt = "INSERT INTO perfil_hepatico(\n" +
"            n_orden,fecha_examen, txtr_tgo, txtr_tgp, txtr_ggt, \n" +
"            txtr_fosfalcalina, txtr_bilirrtotal, txtr_bilirrdirecta, txtr_bilirrindirecta, \n" +
"            txtr_protetotales, txtr_albumina, txtr_globulina)";
        strSqlStmt += " values(" + txtNorden.getText() + ",'"
                + FechaEx.getDate() + "','"
                + txtTGO.getText() + "','"
                + txtTGP.getText() + "','"
                + txtGGT.getText() + "','"
                + txtFosfAlcalina.getText() + "','"
                + txtBilirrubinaTotal.getText() + "','"
                + txtbilirrubinaDirecta.getText() + "','"
                + txtBilirrubinaIndirecta.getText() + "','"
                + txtProteinasTotales.getText() + "','"
                + txtAlbumina.getText() + "','"
                + txtGlobulinaSerica.getText() + "'"
                + " ) ";
        // System.out.println(strSqlStmt);
//        oFunc.SubSistemaMensajeError(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
//                   oConn.setResult.next();
            oFunc.SubSistemaMensajeInformacion("Examen Registrada");

            bResult = true;
//                   oConn.sqlStmt.close();
        }
        return bResult;
    }
  
}
