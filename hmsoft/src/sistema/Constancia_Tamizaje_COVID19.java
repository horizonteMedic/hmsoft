/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sistema;

import Clases.GestorTime;
import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.text.Element;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author Richard
 */
public class Constancia_Tamizaje_COVID19 extends javax.swing.JInternalFrame {    
    clsConnection oConn = new clsConnection();
    clsFunciones  oFunc = new clsFunciones();
    
    public Constancia_Tamizaje_COVID19() {
        initComponents();
        txtCertifica.setText( clsGlobales.sNomOperador  );
        Fecha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgIgm = new javax.swing.ButtonGroup();
        jLabel14 = new javax.swing.JLabel();
        bgIgg = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNordenIn = new javax.swing.JTextField();
        btnEditar = new javax.swing.JButton();
        Fecha = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtfc = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        txtfr = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        txtpa = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        txtTalla = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        txtimc = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        txtperimetrocuello = new javax.swing.JTextField();
        jLabel66 = new javax.swing.JLabel();
        txtperimetrocintura = new javax.swing.JTextField();
        txtperimetrodecadera = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        txticc = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSintomas = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        atxtObservaciones = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        txtCertifica = new javax.swing.JTextField();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        txtImprimir = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        chkIgmReactivo = new javax.swing.JCheckBox();
        chkIgmNoReactivo = new javax.swing.JCheckBox();
        chkIggReactivo = new javax.swing.JCheckBox();
        chkIggNoReactivo = new javax.swing.JCheckBox();
        chkInvalido = new javax.swing.JCheckBox();
        chkObserv = new javax.swing.JCheckBox();

        jLabel14.setText("jLabel14");

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CONSTANCIA DE TAMIZAJE - COVID 19");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Aptitud"));

        jLabel1.setText("NÂº Orden :");

        txtNordenIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenInActionPerformed(evt);
            }
        });
        txtNordenIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNordenInKeyTyped(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        Fecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaPropertyChange(evt);
            }
        });

        jLabel11.setText("Fecha :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNordenIn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNordenIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar))
                    .addComponent(jLabel11)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Certifica que el Sr."));

        jLabel3.setText("Nombres y Apellidos :");

        jLabel4.setText("Edad :");

        jLabel5.setText("DNI :");

        txtfc.setEditable(false);
        txtfc.setBackground(new java.awt.Color(153, 204, 255));
        txtfc.setEnabled(false);

        jLabel55.setText("FC ");

        jLabel60.setText("FR");

        txtfr.setEditable(false);
        txtfr.setBackground(new java.awt.Color(153, 204, 255));
        txtfr.setEnabled(false);

        jLabel61.setText("PA");

        txtpa.setEditable(false);
        txtpa.setBackground(new java.awt.Color(153, 204, 255));
        txtpa.setEnabled(false);

        jLabel62.setText("TALLA");

        txtTalla.setEditable(false);
        txtTalla.setBackground(new java.awt.Color(153, 204, 255));
        txtTalla.setEnabled(false);

        txtPeso.setEditable(false);
        txtPeso.setBackground(new java.awt.Color(153, 204, 255));
        txtPeso.setEnabled(false);

        jLabel63.setText("PESO");

        txtimc.setEditable(false);
        txtimc.setBackground(new java.awt.Color(153, 204, 255));
        txtimc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtimc.setEnabled(false);

        jLabel64.setText("IMC");

        jLabel65.setText("PerÃ­metro Cuello ");

        txtperimetrocuello.setEditable(false);
        txtperimetrocuello.setBackground(new java.awt.Color(153, 204, 255));
        txtperimetrocuello.setEnabled(false);

        jLabel66.setText("PerÃ­metro de cintura");

        txtperimetrocintura.setEditable(false);
        txtperimetrocintura.setBackground(new java.awt.Color(153, 204, 255));
        txtperimetrocintura.setEnabled(false);

        txtperimetrodecadera.setEditable(false);
        txtperimetrodecadera.setBackground(new java.awt.Color(153, 204, 255));
        txtperimetrodecadera.setEnabled(false);

        jLabel67.setText("PerÃ­metro de Cadera");

        txticc.setEditable(false);
        txticc.setBackground(new java.awt.Color(153, 204, 255));
        txticc.setEnabled(false);

        jLabel68.setText("ICC");

        txtSintomas.setColumns(20);
        txtSintomas.setRows(5);
        txtSintomas.setText("NO TIENE SINTOMATOLOGÃ­A NI SIGNOS CLINICOS");
        jScrollPane2.setViewportView(txtSintomas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel67)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtperimetrodecadera, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel68)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txticc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel62)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel63)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtimc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtperimetrocuello, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel66)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtperimetrocintura, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel55)
                                .addGap(4, 4, 4)
                                .addComponent(txtfc, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel60)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtfr, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel61)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtpa, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel55))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtfc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel60)
                                .addComponent(txtfr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel61)
                                .addComponent(txtpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel65)
                            .addComponent(txtperimetrocuello, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel66)
                            .addComponent(txtperimetrocintura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel64)
                                .addComponent(txtimc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel62)
                                .addComponent(txtTalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel63)
                                .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtperimetrodecadera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel67)
                            .addComponent(jLabel68)
                            .addComponent(txticc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observaciones :"));

        atxtObservaciones.setColumns(20);
        atxtObservaciones.setRows(5);
        jScrollPane1.setViewportView(atxtObservaciones);

        jLabel12.setText("Medico que Certifica :");

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/chek.gif"))); // NOI18N
        btnGrabar.setText("Grabar/Actualizar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        txtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImprimirActionPerformed(evt);
            }
        });

        jLabel15.setText("IgM :");

        jLabel16.setText("IgG :");

        bgIgm.add(chkIgmReactivo);
        chkIgmReactivo.setText("REACTIVO");
        chkIgmReactivo.setEnabled(false);
        chkIgmReactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIgmReactivoActionPerformed(evt);
            }
        });

        bgIgm.add(chkIgmNoReactivo);
        chkIgmNoReactivo.setText("NO REACTIVO");
        chkIgmNoReactivo.setEnabled(false);
        chkIgmNoReactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIgmNoReactivoActionPerformed(evt);
            }
        });

        bgIgg.add(chkIggReactivo);
        chkIggReactivo.setText("REACTIVO");
        chkIggReactivo.setEnabled(false);

        bgIgg.add(chkIggNoReactivo);
        chkIggNoReactivo.setText("NO REACTIVO");
        chkIggNoReactivo.setEnabled(false);

        chkInvalido.setText("INVALIDO");
        chkInvalido.setEnabled(false);

        chkObserv.setText("No Apto para retornar.....");
        chkObserv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkObservActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkIgmReactivo)
                                .addGap(30, 30, 30)
                                .addComponent(chkIgmNoReactivo))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(chkInvalido)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkIggReactivo)))
                                .addGap(30, 30, 30)
                                .addComponent(chkIggNoReactivo))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(chkObserv)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCertifica, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnGrabar)
                        .addGap(2, 2, 2)
                        .addComponent(btnLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImprimir)
                        .addGap(8, 8, 8))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(chkIgmReactivo)
                            .addComponent(chkIgmNoReactivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(chkIggReactivo)
                            .addComponent(chkIggNoReactivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkInvalido)
                        .addGap(18, 18, 18)
                        .addComponent(chkObserv)))
                .addGap(0, 0, 0)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCertifica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGrabar)
                        .addComponent(btnLimpiar)
                        .addComponent(txtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImprimir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static com.toedter.calendar.JDateChooser FechaNacimiento;
    private void txtNordenInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenInActionPerformed
          FechaNacimiento = new com.toedter.calendar.JDateChooser();
       if(!txtNordenIn.getText().isEmpty()){
            if(!OrdenExiste()){     
              String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
                 + "d.sexo_pa, e.chkigm_reactivo, e.chkigm_noreactivo, \n" +
            "       e.chkigg_reactivo, e.chkigg_noreactivo, e.chkinvalido  "
                  + "FROM datos_paciente AS d "
                  + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) "
                  + "INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "
                 + "WHERE n.n_orden ='"+txtNordenIn.getText().toString() +"'";
               oConn.FnBoolQueryExecute(Sql);
                  try {
                      if (oConn.setResult.next()) {
                          txtNombres.setText(oConn.setResult.getString("nombre"));
                          txtDni.setText(oConn.setResult.getString("cod_pa"));
                          FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                          txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) );
                          chkIgmReactivo.setSelected(oConn.setResult.getBoolean("chkigm_reactivo"));
                          chkIgmNoReactivo.setSelected(oConn.setResult.getBoolean("chkigm_noreactivo"));
                          chkIggReactivo.setSelected(oConn.setResult.getBoolean("chkigg_reactivo"));
                          chkIggNoReactivo.setSelected(oConn.setResult.getBoolean("chkigg_noreactivo"));
                          chkInvalido.setSelected(oConn.setResult.getBoolean("chkinvalido"));
                          txtNordenIn.setEditable(false);
                          if(chkIgmReactivo.isSelected() || chkIggReactivo.isSelected()){
                             chkObserv.setSelected(true);
                             atxtObservaciones.setText("NO APTO PARA RETORNAR AL TRABAJO.\n" +
                                     "AISLAMIENTO EN CASA POR 14 DIAS.\n" +
                                     "CONTROL CON PRUEBA RAPIDA EN 7 DIAS.");
                        }
                          triaje();
                       // FechaHoy.requestFocusInWindow();
                          Fecha();
                          
                         }else{
                          oFunc.SubSistemaMensajeError("No se encuentra Algunos Registros necesarios(Alta en Ex-Ocupacionales)");
                      }
                      oConn.setResult.close();
                      oConn.sqlStmt.close();
              } catch (SQLException ex) {
              oFunc.SubSistemaMensajeInformacion("Odontograma:" + ex.getMessage().toString());}
            }
        } 
    }//GEN-LAST:event_txtNordenInActionPerformed
 
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
       if(OrdenExiste()){   
           Actualizar();
           Limpiar();
       }else{
           if(!txtNordenIn.getText().isEmpty()){
            try {
               if(validar()){
                if(Grabar()){
                    imprimir();
                    Limpiar();
                }
               }
            } catch (SQLException ex) {
                Logger.getLogger(ConstanciaCovid19.class.getName()).log(Level.SEVERE, null, ex);
            }
           }
       }
        
        
        
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void txtNordenInKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNordenInKeyTyped
        oFunc.NoLetras(evt);
    }//GEN-LAST:event_txtNordenInKeyTyped

    private void txtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImprimirActionPerformed
        
    }//GEN-LAST:event_txtImprimirActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        if(!txtImprimir.getText().isEmpty()){
            print(Integer.valueOf(txtImprimir.getText()));
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        if(!txtNordenIn.getText().isEmpty()){
       String Sql="SELECT d.cod_pa, d.nombres_pa||' '||d.apellidos_pa as nombre, d.fecha_nacimiento_pa ,"
               + " ct.fecha_examen, ct.nom_medico,e.chkigm_reactivo, e.chkigm_noreactivo, \n" +
            "       e.chkigg_reactivo, e.chkigg_noreactivo, e.chkinvalido, ct.txtobservaciones, ct.txtsintomas " +
"               FROM datos_paciente AS d \n" +
"               INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa = n.cod_pa) \n" +
                "INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "+
"               INNER JOIN constancia_tamizaje_covid19 AS ct ON (n.n_orden = ct.n_orden) \n" +
"               WHERE ct.n_orden ='"+txtNordenIn.getText() +"'";
         oConn.FnBoolQueryExecute(Sql);
                try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDni.setText(oConn.setResult.getString("cod_pa")); 
                        FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())) );
                        Fecha.setDate(oConn.setResult.getDate("fecha_examen"));
                        txtCertifica.setText(oConn.setResult.getString("nom_medico"));
                       chkIgmReactivo.setSelected(oConn.setResult.getBoolean("chkigm_reactivo"));
                          chkIgmNoReactivo.setSelected(oConn.setResult.getBoolean("chkigm_noreactivo"));
                          chkIggReactivo.setSelected(oConn.setResult.getBoolean("chkigg_reactivo"));
                          chkIggNoReactivo.setSelected(oConn.setResult.getBoolean("chkigg_noreactivo"));
                          chkInvalido.setSelected(oConn.setResult.getBoolean("chkinvalido"));
                        atxtObservaciones.setText(oConn.setResult.getString("txtobservaciones"));
                        txtSintomas.setText(oConn.setResult.getString("txtsintomas"));
                        if(chkIgmReactivo.isSelected() || chkIggReactivo.isSelected()){
                             chkObserv.setSelected(true);
                             atxtObservaciones.setText("NO APTO PARA RETORNAR AL TRABAJO.\n" +
                                     "AISLAMIENTO EN CASA POR 14 DIAS.\n" +
                                     "CONTROL CON PRUEBA RAPIDA EN 7 DIAS.");
                        }
                         triaje();
                         
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Algunos Registros necesarios");
                    }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Ficha Aptitud:" + ex.getMessage().toString());}
           } 
    }//GEN-LAST:event_btnEditarActionPerformed

    private void FechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaPropertyChange
        if (((JTextField) Fecha.getDateEditor().getUiComponent()).getText().trim().length() > 2) {
             Calendar hasta = Calendar.getInstance();
        hasta.setTime(Fecha.getDate());
        hasta.add(Calendar.YEAR, 1);
        }
    }//GEN-LAST:event_FechaPropertyChange

    private void chkIgmNoReactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIgmNoReactivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkIgmNoReactivoActionPerformed

    private void chkIgmReactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIgmReactivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkIgmReactivoActionPerformed

    private void chkObservActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkObservActionPerformed
        // TODO add your handling code here:
         atxtObservaciones.setText("NO APTO PARA RETORNAR AL TRABAJO.\n" +
                                "AISLAMIENTO EN CASA POR 14 DIAS.\n" +
                                "CONTROL CON PRUEBA RAPIDA EN 7 DIAS.");
    }//GEN-LAST:event_chkObservActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        cerrarVentana();
    }//GEN-LAST:event_formInternalFrameClosing

  public boolean OrdenExiste()
    {
        boolean bResultado=false;
        if(!txtNordenIn.getText().isEmpty()){
        String sQuery;
        sQuery  = "Select n_orden from constancia_tamizaje_covid19 Where n_orden ="+txtNordenIn.getText().toString();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("NÃºmero de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
        }
        }       
        return bResultado;
        }  

  private boolean Grabar() throws SQLException{
        boolean bResult = false;
        String strSqlStmt ="INSERT INTO constancia_tamizaje_covid19(\n" +
"            n_orden, dni_pa, fecha_examen, nom_medico, txtobservaciones,txtsintomas)";       
            strSqlStmt+= "values('"+ txtNordenIn.getText().toString()+"','"+txtDni.getText().toString()+"','"+Fecha.getDate()+
                    "','"+txtCertifica.getText().toString()+
                    "','"+atxtObservaciones.getText().toString()+
                    "','"+txtSintomas.getText()+"')";
//        oFunc.SubSistemaMensajeError(strSqlStmt);
             if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
//                   oConn.setResult.next();
                    oFunc.SubSistemaMensajeInformacion("Constancia Registrada");
                    
                   bResult = true;
                   
               }
             
             try {
                        oConn.sqlStmt.close();
                    } catch (SQLException ex) {
                         Logger.getLogger(Constancia_Tamizaje_COVID19.class.getName()).log(Level.SEVERE, null, ex);
                    }
             
                return bResult;       
        }
public void Actualizar(){
        String sCodigo=txtNordenIn.getText();
        String strSqlStmt;
        
        strSqlStmt="UPDATE constancia_tamizaje_covid19\n" +
                "   SET fecha_examen='"+Fecha.getDate()+"',"
                + "      nom_medico='"+txtCertifica.getText()+"', "
                + "      txtobservaciones='"+atxtObservaciones.getText()+"', "
                + "      txtsintomas='"+txtSintomas.getText()+"'" +
                " WHERE n_orden='"+sCodigo+"';";
        //oFunc.SubSistemaMensajeInformacion(strSqlStmt);
        if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)) {
            oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Ãxito");
            imprimir();
            Limpiar();
            
        } else {
            oFunc.SubSistemaMensajeError("No se pudo Agregar La Entrada");
        }
        
        try {
                        oConn.sqlStmt.close();
                    } catch (SQLException ex) {
                         Logger.getLogger(Constancia_Tamizaje_COVID19.class.getName()).log(Level.SEVERE, null, ex);
                    }
}    
void Fecha(){
Date fechaDate = new Date();
//SimpleDateFormat formateador = new SimpleDateFormat("'HUAMACHUCO - ' EEEEE dd MMMMM yyyy");
Fecha.setDate(fechaDate);
}
private boolean validar(){
boolean bResultado=true;
  
    if (((JTextField)Fecha.getDateEditor().getUiComponent()).getText().trim().length()< 2 ) 
        {oFunc.SubSistemaMensajeError("Ingrese Fecha ");bResultado = false;}
   if(bgIgm.isSelected(null)){oFunc.SubSistemaMensajeError(" Seleccione: si esta Apto"); bResultado = false;}
  
   return bResultado;
}
  private boolean imprimir(){
    boolean im = false;
int seleccion = JOptionPane.showOptionDialog(
    this, // Componente padre
    "Â¿Desea Imprimir?", //Mensaje
    "Seleccione una opciÃ³n", // TÃ­tulo
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,    // null para icono por defecto.
    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
    "Si");
    if (seleccion != -1)
    {
   if((seleccion + 1)==1)
   {
      printer(Integer.valueOf(txtNordenIn.getText()));
       im = true;
   }
   else
   {
      // PRESIONO NO
     }
    }
    return im;

}
private void Limpiar(){
    txtNordenIn.setText(null);
    txtNombres.setText(null);
    txtDni.setText(null);
    txtEdad.setText(null);
    txtPeso.setText(null);
    txtTalla.setText(null);
    txtfc.setText(null);
    txtfr.setText(null);
    txticc.setText(null);
    txtimc.setText(null);
    txtpa.setText(null);
    txtperimetrocintura.setText(null);
    txtperimetrocuello.setText(null);
    txtperimetrodecadera.setText(null);
    Fecha.setDate(null);atxtObservaciones.setText(null);
    txtSintomas.setText("NO TIENE SINTOMATOLOGÃ­A NI SIGNOS CLINICOS");
    bgIgm.clearSelection();
    bgIgg.clearSelection();
    chkInvalido.setSelected(false);
    chkObserv.setSelected(false);
    txtNordenIn.setEditable(true);
    txtNordenIn.requestFocus();

}
  private void print(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);             
                
                  try 
                {
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"Constancia_Tamizaje_COVID19.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint myPrint = JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer viewer = new JasperViewer(myPrint, false);
                    viewer.setTitle("CERTIFICADO DE APTITUD MEDICO OCUPACIONAL");
                   // viewer.setAlwaysOnTop(true);
                    viewer.setVisible(true);
                 } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
 }
   
   private void printer(Integer cod){
                 Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                    try 
                {                     
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"Constancia_Tamizaje_COVID19.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    
                  JasperPrintManager.printReport(jasperPrint,true);
                  
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }

   private void triaje() {

        String Sql = "SELECT talla, peso, "
                + "imc, cintura, icc, cadera, temperatura, f_cardiaca, sat_02, perimetro_cuello, "
                + "sistolica, diastolica, f_respiratoria, fvc, fev_1, fev1_fvc, fef25_75, conclusion  FROM triaje WHERE n_orden ='" + txtNordenIn.getText().toString() + "'";
        oConn.FnBoolQueryExecute(Sql);
        try {
            if (oConn.setResult.next()) {
                txtfc.setText(oConn.setResult.getString("f_cardiaca"));
                txtfr.setText(oConn.setResult.getString("f_respiratoria"));
                String sistolica=oConn.setResult.getString("sistolica");
                String diastolica=oConn.setResult.getString("diastolica");
                txtpa.setText(sistolica.concat("/").concat(diastolica));
                txtTalla.setText(oConn.setResult.getString("talla"));
                txtPeso.setText(oConn.setResult.getString("peso"));
                txtimc.setText(oConn.setResult.getString("imc"));
                txtperimetrocuello.setText(oConn.setResult.getString("perimetro_cuello"));
                txtperimetrocintura.setText(oConn.setResult.getString("cintura"));
                txtperimetrodecadera.setText(oConn.setResult.getString("cadera"));
                txticc.setText(oConn.setResult.getString("icc"));
            } else {
                oFunc.SubSistemaMensajeInformacion("No hay datos en triaje");
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
        }
    }
   
   public void cerrarVentana(){
        // JOptionPane.showMessageDialog(null, "probando para cerrar el stament");
        System.out.println("cerro esta ventana");
        try {
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(Constancia_Tamizaje_COVID19.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    this.dispose();
      //  System.exit(0);

    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fecha;
    private javax.swing.JTextArea atxtObservaciones;
    private javax.swing.ButtonGroup bgIgg;
    private javax.swing.ButtonGroup bgIgm;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkIggNoReactivo;
    private javax.swing.JCheckBox chkIggReactivo;
    private javax.swing.JCheckBox chkIgmNoReactivo;
    private javax.swing.JCheckBox chkIgmReactivo;
    private javax.swing.JCheckBox chkInvalido;
    private javax.swing.JCheckBox chkObserv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCertifica;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtImprimir;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNordenIn;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextArea txtSintomas;
    private javax.swing.JTextField txtTalla;
    private javax.swing.JTextField txtfc;
    private javax.swing.JTextField txtfr;
    private javax.swing.JTextField txticc;
    private javax.swing.JTextField txtimc;
    private javax.swing.JTextField txtpa;
    private javax.swing.JTextField txtperimetrocintura;
    private javax.swing.JTextField txtperimetrocuello;
    private javax.swing.JTextField txtperimetrodecadera;
    // End of variables declaration//GEN-END:variables
}
