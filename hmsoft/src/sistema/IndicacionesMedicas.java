/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import Clases.clsOperacionesUsuarios;
import autocomplete.ajTextField;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DEYMER
 */
public class IndicacionesMedicas extends javax.swing.JInternalFrame {
   
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    
    public IndicacionesMedicas() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgSintomas = new javax.swing.ButtonGroup();
        btgHemograma = new javax.swing.ButtonGroup();
        btgProteina = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        FechaExamen = new com.toedter.calendar.JDateChooser();
        btEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        chkSS1 = new javax.swing.JCheckBox();
        chkSS2 = new javax.swing.JCheckBox();
        chkSS3 = new javax.swing.JCheckBox();
        chkSS4 = new javax.swing.JCheckBox();
        chkSS5 = new javax.swing.JCheckBox();
        chkSS6 = new javax.swing.JCheckBox();
        chkSS7 = new javax.swing.JCheckBox();
        chkSS9 = new javax.swing.JCheckBox();
        chkSS10 = new javax.swing.JCheckBox();
        chkSS11 = new javax.swing.JCheckBox();
        chkSS8 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSintomas = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        txtIgM = new javax.swing.JTextField();
        txtIgG = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        ChkHNormal = new javax.swing.JCheckBox();
        ChkHAnormal = new javax.swing.JCheckBox();
        chkPNegativa = new javax.swing.JCheckBox();
        chkPPositiva = new javax.swing.JCheckBox();
        txtProteina = new javax.swing.JTextField();
        txtHemogama = new javax.swing.JTextField();
        chkPPositiva1 = new javax.swing.JCheckBox();
        chkPPositiva2 = new javax.swing.JCheckBox();
        chkPPositiva3 = new javax.swing.JCheckBox();
        ChkHAnormal1 = new javax.swing.JCheckBox();
        ChkHAnormal2 = new javax.swing.JCheckBox();
        ChkHAnormal3 = new javax.swing.JCheckBox();
        ChkHAnormal4 = new javax.swing.JCheckBox();
        ChkHAnormal5 = new javax.swing.JCheckBox();
        ChkHAnormal6 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        chkIndicacion1 = new javax.swing.JCheckBox();
        chkIndicacion2 = new javax.swing.JCheckBox();
        chkIndicacion3 = new javax.swing.JCheckBox();
        chkIndicacion4 = new javax.swing.JCheckBox();
        chkIndicacion5 = new javax.swing.JCheckBox();
        chkIndicacion6 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtIMP = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        chkFRiesgo1 = new javax.swing.JCheckBox();
        chkFRiesgo2 = new javax.swing.JCheckBox();
        chkFRiesgo3 = new javax.swing.JCheckBox();
        chkFRiesgo4 = new javax.swing.JCheckBox();
        chkFRiesgo5 = new javax.swing.JCheckBox();
        chkFRiesgo6 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtFactorRiesgo = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        atxtIndicacion = new javax.swing.JTextArea();

        setClosable(true);
        setTitle("RESULTADOS DE PRUEBAS RÁPIDAS");

        jLabel1.setText("N° orden :");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel9.setText("Fecha :");

        FechaExamen.setBackground(new java.awt.Color(233, 230, 230));

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btEditar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEditar)
                    .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(5, 5, 5))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS PERSONALES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel38.setText("DNI :");

        txtDNI.setEditable(false);
        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombres :");

        txtNombres.setEditable(false);

        jLabel42.setText("Sexo :");

        txtSexo.setEditable(false);

        jLabel41.setText("Fecha Nacimiento :");

        dateFechaNacimiento.setBackground(new java.awt.Color(233, 230, 230));
        dateFechaNacimiento.setEnabled(false);

        jLabel8.setText("Edad :");

        txtEdad.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addGap(4, 4, 4)
                .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel3))))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41))))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados de la Evaluación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "2. Signos y sintomas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        chkSS1.setText("Odinofagia");
        chkSS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS1ActionPerformed(evt);
            }
        });

        chkSS2.setText("Tos");
        chkSS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS2ActionPerformed(evt);
            }
        });

        chkSS3.setText("Fiebre");
        chkSS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS3ActionPerformed(evt);
            }
        });

        chkSS4.setText("Disfeusio");
        chkSS4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS4ActionPerformed(evt);
            }
        });

        chkSS5.setText("Cefalea");
        chkSS5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS5ActionPerformed(evt);
            }
        });

        chkSS6.setText("Vómitos ");
        chkSS6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS6ActionPerformed(evt);
            }
        });

        chkSS7.setText("Diarrea");
        chkSS7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS7ActionPerformed(evt);
            }
        });

        chkSS9.setText("Malestar general");
        chkSS9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS9ActionPerformed(evt);
            }
        });

        chkSS10.setText("Dificultad respirtoria");
        chkSS10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS10ActionPerformed(evt);
            }
        });

        chkSS11.setText("Dolor abdominal");
        chkSS11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS11ActionPerformed(evt);
            }
        });

        chkSS8.setText("Anosmio");
        chkSS8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSS8ActionPerformed(evt);
            }
        });

        txtSintomas.setColumns(20);
        txtSintomas.setRows(5);
        jScrollPane2.setViewportView(txtSintomas);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSS1)
                            .addComponent(chkSS2)
                            .addComponent(chkSS3)
                            .addComponent(chkSS4)
                            .addComponent(chkSS5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSS11)
                            .addComponent(chkSS10)
                            .addComponent(chkSS9)
                            .addComponent(chkSS8)
                            .addComponent(chkSS7)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(chkSS6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSS7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkSS1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSS2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chkSS8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(chkSS3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSS4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSS5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(chkSS9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSS10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkSS11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSS6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1. Prueba rápida", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel91.setText("IgM :");

        jLabel92.setText("IgG :");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel92)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIgG, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel91)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIgM, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIgM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIgG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel92)))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "3. Examenes Auxiliares", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel93.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel93.setText("Hemograma :");

        jLabel94.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel94.setText("Proteina C. Reactivo");

        btgHemograma.add(ChkHNormal);
        ChkHNormal.setText("Normal");

        btgHemograma.add(ChkHAnormal);
        ChkHAnormal.setText("Anormal");

        btgProteina.add(chkPNegativa);
        chkPNegativa.setText("Negativo ");
        chkPNegativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPNegativaActionPerformed(evt);
            }
        });

        btgProteina.add(chkPPositiva);
        chkPPositiva.setText("Positivo");
        chkPPositiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPPositivaActionPerformed(evt);
            }
        });

        chkPPositiva1.setText("+");
        chkPPositiva1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPPositiva1ActionPerformed(evt);
            }
        });

        chkPPositiva2.setText("++");
        chkPPositiva2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPPositiva2ActionPerformed(evt);
            }
        });

        chkPPositiva3.setText("+++");
        chkPPositiva3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPPositiva3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel93)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(ChkHNormal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChkHAnormal))
                    .addComponent(txtHemogama, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(chkPNegativa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkPPositiva))
                            .addComponent(jLabel94)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(chkPPositiva1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkPPositiva2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkPPositiva3))
                            .addComponent(txtProteina, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel94, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChkHNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ChkHAnormal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkPNegativa, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkPPositiva, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtHemogama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProteina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkPPositiva1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPPositiva2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPPositiva3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ChkHAnormal1.setText("Lucopenia");
        ChkHAnormal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal1ActionPerformed(evt);
            }
        });

        ChkHAnormal2.setText("Neutrofilia");
        ChkHAnormal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal2ActionPerformed(evt);
            }
        });

        ChkHAnormal3.setText("Leocositosis");
        ChkHAnormal3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal3ActionPerformed(evt);
            }
        });

        ChkHAnormal4.setText("Linfositosis");
        ChkHAnormal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal4ActionPerformed(evt);
            }
        });

        ChkHAnormal5.setText("Linfopenia");
        ChkHAnormal5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal5ActionPerformed(evt);
            }
        });

        ChkHAnormal6.setText("Eosinofilia");
        ChkHAnormal6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkHAnormal6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ChkHAnormal2)
                                    .addComponent(ChkHAnormal1)
                                    .addComponent(ChkHAnormal3)
                                    .addComponent(ChkHAnormal4)
                                    .addComponent(ChkHAnormal5)
                                    .addComponent(ChkHAnormal6))))
                        .addGap(0, 0, 0)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(ChkHAnormal1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChkHAnormal2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChkHAnormal3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChkHAnormal4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChkHAnormal5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChkHAnormal6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "5. Indicaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        chkIndicacion1.setSelected(true);
        chkIndicacion1.setText("Aislamiento domiciliario por 14 días");
        chkIndicacion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion1ActionPerformed(evt);
            }
        });

        chkIndicacion2.setSelected(true);
        chkIndicacion2.setText("Dieta Completa");
        chkIndicacion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion2ActionPerformed(evt);
            }
        });

        chkIndicacion3.setSelected(true);
        chkIndicacion3.setText("Azitromicina 500 mg vo c/24h x 5 dias");
        chkIndicacion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion3ActionPerformed(evt);
            }
        });

        chkIndicacion4.setSelected(true);
        chkIndicacion4.setText("<html>Ivermectina 6 mg 2 tabletas via oral por una vez o 50 gotas  c/24h x2 dias </html>");
        chkIndicacion4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion4ActionPerformed(evt);
            }
        });

        chkIndicacion5.setSelected(true);
        chkIndicacion5.setText("Paracetamol 500 mg c/6h 3 días");
        chkIndicacion5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion5ActionPerformed(evt);
            }
        });

        chkIndicacion6.setSelected(true);
        chkIndicacion6.setText("<html>Si tiene dificultad para respirar acudira a hospital más cercano</html>");
        chkIndicacion6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIndicacion6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chkIndicacion2)
                    .addComponent(chkIndicacion1)
                    .addComponent(chkIndicacion3)
                    .addComponent(chkIndicacion5)
                    .addComponent(chkIndicacion4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(chkIndicacion6, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(chkIndicacion1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIndicacion2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIndicacion3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIndicacion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIndicacion5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkIndicacion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        btnGrabar.setText("Grbar/ Actualizar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Imprimir N°orden"));

        txtIMP.setBackground(new java.awt.Color(204, 255, 204));
        txtIMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIMPActionPerformed(evt);
            }
        });

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel44)
                .addGap(2, 2, 2))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel44)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnGrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "4. Factores de riesgo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        chkFRiesgo1.setText("Contacto con Paciente Covid (+)");
        chkFRiesgo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo1ActionPerformed(evt);
            }
        });

        chkFRiesgo2.setText("Mayor de 65 años");
        chkFRiesgo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo2ActionPerformed(evt);
            }
        });

        chkFRiesgo3.setText("IMC >=40");
        chkFRiesgo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo3ActionPerformed(evt);
            }
        });

        chkFRiesgo4.setText("Diabetes mellitus II");
        chkFRiesgo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo4ActionPerformed(evt);
            }
        });

        chkFRiesgo5.setText("Hipertensión no controlada");
        chkFRiesgo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo5ActionPerformed(evt);
            }
        });

        chkFRiesgo6.setText("Enfermedades cardiovasculares");
        chkFRiesgo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFRiesgo6ActionPerformed(evt);
            }
        });

        txtFactorRiesgo.setColumns(20);
        txtFactorRiesgo.setRows(5);
        jScrollPane3.setViewportView(txtFactorRiesgo);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkFRiesgo1)
                    .addComponent(chkFRiesgo2)
                    .addComponent(chkFRiesgo3)
                    .addComponent(chkFRiesgo5)
                    .addComponent(chkFRiesgo6)
                    .addComponent(chkFRiesgo4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(chkFRiesgo1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFRiesgo2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFRiesgo3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFRiesgo4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFRiesgo5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkFRiesgo6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3)
        );

        atxtIndicacion.setColumns(20);
        atxtIndicacion.setRows(5);
        atxtIndicacion.setText("- Aislamiento domiciliario por 14 días.\n- Dieta Completa.\n- Azitromicina 500 mg vo c/24h x 5 dias.\n- Ivermectina 6 mg 2 tabletas via oral por una vez o 50 gotas  c/24h x2 dias.\n- Paracetamol 500 mg c/6h 3 días.\n- Si tiene dificultad para respirar acudira a hospital más cercano.");
        jScrollPane1.setViewportView(atxtIndicacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void txtIMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIMPActionPerformed
//        
        if(!txtIMP.getText().isEmpty()){        
           print(Integer.valueOf(txtIMP.getText().toString()));
         }
    }//GEN-LAST:event_txtIMPActionPerformed

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
//        ReImp();
        if(!txtIMP.getText().isEmpty()){        
           print(Integer.valueOf(txtIMP.getText().toString()));
         }
    }//GEN-LAST:event_jLabel44MouseClicked

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        // TODO add your handling code here:
        if(!txtNorden.getText().isEmpty()){
          if(!oPe.nOrden(txtNorden, "indicacion_medica_covid"))  {
            dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
             String Sql="select d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, d.cod_pa, "
                     + "d.fecha_nacimiento_pa,l.chkigm_reactivo,l.chkigg_reactivo "
                + " from datos_paciente AS d "
                + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) "
                + "left JOIN examen_inmunologico AS l ON (n.n_orden=l.n_orden) "
                + "WHERE n.n_orden ='"+txtNorden.getText().toString()+"'";
            oConn.FnBoolQueryExecute(Sql);   
              String x="",y="";
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
                       
                        x=String.valueOf(oConn.setResult.getBoolean("chkigm_reactivo"));
                        y=String.valueOf(oConn.setResult.getBoolean("chkigg_reactivo"));
                        txtIgM.setText(x.equals("true")?"Reactivo":"No Reactivo");
                        txtIgG.setText(y.equals("true")?"Reactivo":"No Reactivo");
//                        txtNombresEval.setText(oConn.setResult.getString("res_lab"));
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                       
                        
                        oPe.fecha(FechaExamen);
                        FechaExamen.requestFocus(); 
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional");
                    }
                    oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          }else{
              oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
          }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        // TODO add your handling code here:
        if(oPe.nOrden(txtNorden, "indicacion_medica_covid"))  {
           actualizar();
       }else{
            agregar();
       }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
        if(!txtNorden.getText().isEmpty()){
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
    String Sql="SELECT d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, d.cod_pa, d.fecha_nacimiento_pa,"
            + "l.chkigm_reactivo,l.chkigg_reactivo," +
       "i.fecha_examen, i.txtigm, i.txtigg, i.txtsintomas, i.chkhnormal,i.chkhanormal,i.txthemograma,i.chkpnegativo, \n" +
"       i.chkppositivo,i.txtproteinas, i.txtfactorr, i.txtindicaciones " +
"FROM datos_paciente AS d \n" +
"INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) \n" +
"INNER JOIN indicacion_medica_covid AS i ON (n.n_orden=i.n_orden) \n" +
"left JOIN examen_inmunologico AS l ON (n.n_orden=l.n_orden) " +
"WHERE n.n_orden ='"+txtNorden.getText()+"'";
            oConn.FnBoolQueryExecute(Sql);      
            String x="",y="";
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
                        x=String.valueOf(oConn.setResult.getBoolean("chkigm_reactivo"));
                        y=String.valueOf(oConn.setResult.getBoolean("chkigg_reactivo"));
                        txtIgM.setText(x.equals("true")?"Reactivo":"No Reactivo");
                        txtIgG.setText(y.equals("true")?"Reactivo":"No Reactivo");
                        FechaExamen.setDate(oConn.setResult.getDate("fecha_examen"));
//                        chkSS1.setSelected(oConn.setResult.getBoolean("chkss1"));
//                        chkSS2.setSelected(oConn.setResult.getBoolean("chkss2"));      
//                        chkSS3.setSelected(oConn.setResult.getBoolean("chkss3"));    
//                        chkSS4.setSelected(oConn.setResult.getBoolean("chkss4"));
//                        chkSS5.setSelected(oConn.setResult.getBoolean("chkss5"));
//                        chkSS6.setSelected(oConn.setResult.getBoolean("chkss6"));
//                        chkSS7.setSelected(oConn.setResult.getBoolean("chkss7"));
//                        chkSS9.setSelected(oConn.setResult.getBoolean("chkss8"));
//                        chkSS10.setSelected(oConn.setResult.getBoolean("chkss9"));
//                        chkSS11.setSelected(oConn.setResult.getBoolean("chkss10"));
//                        chkSS8.setSelected(oConn.setResult.getBoolean("chkss11"));
                        txtSintomas.setText(oConn.setResult.getString("txtsintomas"));
                        ChkHNormal.setSelected(oConn.setResult.getBoolean("chkhnormal"));
                        ChkHAnormal.setSelected(oConn.setResult.getBoolean("chkhanormal"));
                        txtHemogama.setText(oConn.setResult.getString("txthemograma"));
                        chkPNegativa.setSelected(oConn.setResult.getBoolean("chkpnegativo"));
                        chkPPositiva.setSelected(oConn.setResult.getBoolean("chkppositivo"));
                        txtProteina.setText(oConn.setResult.getString("txtproteinas"));
                        txtFactorRiesgo.setText(oConn.setResult.getString("txtfactorr"));
//                        chkFRiesgo1.setSelected(oConn.setResult.getBoolean("chkfriesgo1"));
//                        chkFRiesgo2.setSelected(oConn.setResult.getBoolean("chkfriesgo2"));
//                        chkFRiesgo3.setSelected(oConn.setResult.getBoolean("chkfriesgo3"));
//                        chkFRiesgo4.setSelected(oConn.setResult.getBoolean("chkfriesgo4"));
//                        chkFRiesgo5.setSelected(oConn.setResult.getBoolean("chkfriesgo5"));
//                        chkFRiesgo6.setSelected(oConn.setResult.getBoolean("chkfriesgo6"));
//                        chkIndicacion1.setSelected(oConn.setResult.getBoolean("chkindicacion1"));
//                        chkIndicacion2.setSelected(oConn.setResult.getBoolean("chkindicacion2"));
//                        chkIndicacion3.setSelected(oConn.setResult.getBoolean("chkindicacion3"));
//                        chkIndicacion4.setSelected(oConn.setResult.getBoolean("chkindicacion4"));
//                        chkIndicacion5.setSelected(oConn.setResult.getBoolean("chkindicacion5"));
//                        chkIndicacion6.setSelected(oConn.setResult.getBoolean("chkindicacion6"));
                        atxtIndicacion.setText(oConn.setResult.getString("txtindicaciones"));
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional");
                    }
                    oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
       limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void chkSS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS3ActionPerformed
        // TODO add your handling code here:
        if(chkSS3.isSelected()){
            txtSintomas.append(" Fiebre,");   
        }
    }//GEN-LAST:event_chkSS3ActionPerformed

    private void chkFRiesgo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo1ActionPerformed
        // TODO add your handling code here:
        if(chkFRiesgo1.isSelected()){
            txtFactorRiesgo.append("- Contacto con Paciente Covid (+)"+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo1ActionPerformed

    private void chkIndicacion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion1ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion1.isSelected()){
            atxtIndicacion.append("- Aislamiento domiciliario por 14 días."+'\n');   
        }
    }//GEN-LAST:event_chkIndicacion1ActionPerformed

    private void chkIndicacion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion2ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion2.isSelected()){
            atxtIndicacion.append("- Dieta Completa."+'\n');   
        }
    }//GEN-LAST:event_chkIndicacion2ActionPerformed

    private void chkIndicacion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion3ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion3.isSelected()){
            atxtIndicacion.append("- Azitromicina 500 mg vo c/24h x 5 dias."+'\n');   
        }
        
    }//GEN-LAST:event_chkIndicacion3ActionPerformed

    private void chkIndicacion4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion4ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion4.isSelected()){
            atxtIndicacion.append("- Ivermectina 6 mg 2 tabletas via oral por una vez o 50 gotas  c/24h x2 dias."+'\n');   
        }
    }//GEN-LAST:event_chkIndicacion4ActionPerformed

    private void chkIndicacion6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion6ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion6.isSelected()){
            atxtIndicacion.append("- Si tiene dificultad para respirar acudira a hospital más cercano."+'\n');   
        }
    }//GEN-LAST:event_chkIndicacion6ActionPerformed

    private void chkSS7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS7ActionPerformed
        // TODO add your handling code here:
        if(chkSS7.isSelected()){
            txtSintomas.append(" Diarrea,");   
        }
    }//GEN-LAST:event_chkSS7ActionPerformed

    private void ChkHAnormal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal1ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal1.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Lucopenia");   
        }
    }//GEN-LAST:event_ChkHAnormal1ActionPerformed

    private void ChkHAnormal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal2ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal2.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Neutrofilia");   
        }
    }//GEN-LAST:event_ChkHAnormal2ActionPerformed

    private void chkIndicacion5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIndicacion5ActionPerformed
        // TODO add your handling code here:
        if(chkIndicacion5.isSelected()){
            atxtIndicacion.append("- Paracetamol 500 mg c/6h 3 días."+'\n');   
        }
    }//GEN-LAST:event_chkIndicacion5ActionPerformed

    private void ChkHAnormal3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal3ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal3.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Leocositosis");   
        }
    }//GEN-LAST:event_ChkHAnormal3ActionPerformed

    private void ChkHAnormal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal4ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal4.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Linfositosis");   
        }
    }//GEN-LAST:event_ChkHAnormal4ActionPerformed

    private void ChkHAnormal5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal5ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal5.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Linfopenia");   
        }
    }//GEN-LAST:event_ChkHAnormal5ActionPerformed

    private void ChkHAnormal6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkHAnormal6ActionPerformed
        // TODO add your handling code here:
        if(ChkHAnormal5.isSelected()&& ChkHAnormal.isSelected()){
            txtHemogama.setText("Eosinofilia");   
        }
    }//GEN-LAST:event_ChkHAnormal6ActionPerformed

    private void chkPNegativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPNegativaActionPerformed
        // TODO add your handling code here:
        txtProteina.setText(null);
        
    }//GEN-LAST:event_chkPNegativaActionPerformed

    private void chkPPositivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPPositivaActionPerformed
        // TODO add your handling code here:
        if(chkPPositiva.isSelected()){
            txtProteina.setText("Positivo");   
        }
    }//GEN-LAST:event_chkPPositivaActionPerformed

    private void chkPPositiva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPPositiva1ActionPerformed
        // TODO add your handling code here:
        if(chkPPositiva1.isSelected()){
            txtProteina.setText("Positivo +");   
        }
    }//GEN-LAST:event_chkPPositiva1ActionPerformed

    private void chkPPositiva2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPPositiva2ActionPerformed
        // TODO add your handling code here:
        if(chkPPositiva2.isSelected()){
            txtProteina.setText("Positivo ++");   
        }
    }//GEN-LAST:event_chkPPositiva2ActionPerformed

    private void chkPPositiva3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPPositiva3ActionPerformed
        // TODO add your handling code here:
        if(chkPPositiva3.isSelected()){
            txtProteina.setText("Positivo +++");   
        }
    }//GEN-LAST:event_chkPPositiva3ActionPerformed

    private void chkSS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS1ActionPerformed
        // TODO add your handling code here:
        if(chkSS1.isSelected()){
            txtSintomas.append("Odinofagia,");   
        }
    }//GEN-LAST:event_chkSS1ActionPerformed

    private void chkSS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS2ActionPerformed
        // TODO add your handling code here:
        if(chkSS2.isSelected()){
            txtSintomas.append(" Tos,");   
        }
    }//GEN-LAST:event_chkSS2ActionPerformed

    private void chkSS4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS4ActionPerformed
        // TODO add your handling code here:
        if(chkSS4.isSelected()){
            txtSintomas.append(" Disfeusio,");   
        }
    }//GEN-LAST:event_chkSS4ActionPerformed

    private void chkSS5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS5ActionPerformed
        // TODO add your handling code here:
        if(chkSS5.isSelected()){
            txtSintomas.append(" Cefalea,");   
        }
    }//GEN-LAST:event_chkSS5ActionPerformed

    private void chkSS6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS6ActionPerformed
        // TODO add your handling code here:
        if(chkSS6.isSelected()){
            txtSintomas.append(" Vómitos,");   
        }
    }//GEN-LAST:event_chkSS6ActionPerformed

    private void chkSS8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS8ActionPerformed
        // TODO add your handling code here:
        if(chkSS8.isSelected()){
            txtSintomas.append(" Anosmio,");   
        }
    }//GEN-LAST:event_chkSS8ActionPerformed

    private void chkSS9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS9ActionPerformed
        // TODO add your handling code here:
         if(chkSS9.isSelected()){
            txtSintomas.append(" Malestar general,");   
        }
    }//GEN-LAST:event_chkSS9ActionPerformed

    private void chkSS10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS10ActionPerformed
        // TODO add your handling code here:
        if(chkSS10.isSelected()){
            txtSintomas.append(" Dificultad respirtoria,");   
        }
    }//GEN-LAST:event_chkSS10ActionPerformed

    private void chkSS11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSS11ActionPerformed
        // TODO add your handling code here:
        if(chkSS11.isSelected()){
            txtSintomas.append(" Dolor abdominal,");   
        }
    }//GEN-LAST:event_chkSS11ActionPerformed

    private void chkFRiesgo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo2ActionPerformed
        // TODO add your handling code here:
        if(chkFRiesgo2.isSelected()){
            txtFactorRiesgo.append("- Mayor de 65 años."+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo2ActionPerformed

    private void chkFRiesgo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo3ActionPerformed
        // TODO add your handling code here:
        if(chkFRiesgo3.isSelected()){
            txtFactorRiesgo.append("- IMC >=40."+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo3ActionPerformed

    private void chkFRiesgo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo4ActionPerformed
        // TODO add your handling code here:
         if(chkFRiesgo4.isSelected()){
            txtFactorRiesgo.append("- Diabetes mellitus II."+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo4ActionPerformed

    private void chkFRiesgo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo5ActionPerformed
        // TODO add your handling code here:
        if(chkFRiesgo5.isSelected()){
            txtFactorRiesgo.append("- Hipertensión no controlada."+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo5ActionPerformed

    private void chkFRiesgo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFRiesgo6ActionPerformed
        // TODO add your handling code here:
        if(chkFRiesgo6.isSelected()){
            txtFactorRiesgo.append("- Enfermedades cardiovasculares."+'\n');   
        }
    }//GEN-LAST:event_chkFRiesgo6ActionPerformed
    private boolean validar(){
        boolean bResultado=true;
        if (((JTextField)FechaExamen.getDateEditor().getUiComponent()).getText().trim().length()< 2 ) 
            {oFunc.SubSistemaMensajeError("Ingrese Fecha ");bResultado = false;}
       
        

       return bResultado;
    }
    private void actualizar(){
        if(!txtNorden.getText().isEmpty()){
            if(validar()){
                String strSqlStmt;
                strSqlStmt="UPDATE indicacion_medica_covid\n" +
                "   SET fecha_examen='"+FechaExamen.getDate()+"'"
                        + ", txtigm='"+txtIgM.getText()+"'"
                        + ", txtigg='"+txtIgG.getText()+"'"
                        + ", txtsintomas='"+txtSintomas.getText()+"'"
                        + ", chkhnormal='"+ChkHNormal.isSelected()+"'"
                        + ", chkhanormal='"+ChkHAnormal.isSelected()+"'"
                        + ", txthemograma='"+txtHemogama.getText()+"'"
                        + ", chkpnegativo='"+chkPNegativa.isSelected()+"'"
                        + ", chkppositivo='"+chkPPositiva.isSelected()+"'"
                        + ", txtproteinas='"+txtProteina.getText()+"'"
                        + ", txtfactorr='"+txtFactorRiesgo.getText()+"'"
//                        + ", chkss5='"+chkSS5.isSelected()+"'"
//                        + ", chkss6='"+chkSS6.isSelected()+"'"
//                        + ", chkss7='"+chkSS7.isSelected()+"'"
//                        + ", chkss8='"+chkSS8.isSelected()+"'"
//                        + ", chkss9='"+chkSS9.isSelected()+"'"
//                        + ", chkss10='"+chkSS10.isSelected()+"'"
//                        + ", chkss11='"+chkSS11.isSelected()+"'"
//                        + ", txtsintomas='"+txtSintomas.getText()+"'"
                        
//                        + ", chkfriesgo1='"+chkFRiesgo1.isSelected()+"'"
//                        + ", chkfriesgo2='"+chkFRiesgo2.isSelected()+"'"
//                        + ", chkfriesgo3='"+chkFRiesgo3.isSelected()+"'"
//                        + ", chkfriesgo4='"+chkFRiesgo4.isSelected()+"'"
//                        + ", chkfriesgo5='"+chkFRiesgo5.isSelected()+"'"
//                        + ", chkfriesgo6='"+chkFRiesgo6.isSelected()+"'"
//                        + ", chkindicacion1='"+chkIndicacion1.isSelected()+"'"
//                        + ", chkindicacion2='"+chkIndicacion2.isSelected()+"'"
//                        + ", chkindicacion3='"+chkIndicacion3.isSelected()+"'"
//                        + ", chkindicacion4='"+chkIndicacion4.isSelected()+"'"
//                        + ", chkindicacion5='"+chkIndicacion5.isSelected()+"'"
//                        + ", chkindicacion6='"+chkIndicacion6.isSelected()+"'"
                        + ", txtindicaciones='"+atxtIndicacion.getText()+"'"
                +" WHERE n_orden='"+txtNorden.getText()+ "'";
                if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
                    oFunc.SubSistemaMensajeInformacion("Se ha actualizado con Éxito");
                    imprimir();
                    limpiar();   
                }else{
                     oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                       }
            }
        }
    }
    private void agregar(){
        if(!txtNorden.getText().isEmpty()){
            if(!oPe.nOrden(txtNorden, "indicacion_medica_covid")){
                if(validar()){
                    String strSqlStmt;
                    String query;
                    strSqlStmt="INSERT INTO indicacion_medica_covid(\n" ;
                    query="Values('";
                    strSqlStmt += "n_orden";query += txtNorden.getText()+ "'";
                    strSqlStmt += ",fecha_examen";query += ",'"+FechaExamen.getDate()+ "'";
                    strSqlStmt += ",txtigm";query += ",'"+txtIgM.getText()+ "'";
                    strSqlStmt += ",txtigg";query += ",'"+txtIgG.getText()+ "'";
                    strSqlStmt += ",txtsintomas";query += ",'"+txtSintomas.getText()+ "'";
                    strSqlStmt += ",chkhnormal";query += ",'"+ChkHNormal.isSelected()+ "'";
                    strSqlStmt += ",chkhanormal";query += ",'"+ChkHAnormal.isSelected()+ "'";
                    strSqlStmt += ",txthemograma";query += ",'"+txtHemogama.getText()+ "'";
                    strSqlStmt += ",chkpnegativo";query += ",'"+chkPNegativa.isSelected()+ "'";
                    strSqlStmt += ",chkppositivo";query += ",'"+chkPPositiva.isSelected()+ "'";
                    strSqlStmt += ",txtproteinas";query += ",'"+txtProteina.getText()+ "'";
                    strSqlStmt += ",txtfactorr";query += ",'"+txtFactorRiesgo.getText()+ "'";
//                    strSqlStmt += ",chkss5";query += ",'"+chkSS5.isSelected()+ "'";
//                    strSqlStmt += ",chkss6";query += ",'"+chkSS6.isSelected()+ "'";
//                    strSqlStmt += ",chkss7";query += ",'"+chkSS7.isSelected()+ "'";
//                    strSqlStmt += ",chkss8";query += ",'"+chkSS8.isSelected()+ "'";
//                    strSqlStmt += ",chkss9";query += ",'"+chkSS9.isSelected()+ "'";
//                    strSqlStmt += ",chkss10";query += ",'"+chkSS10.isSelected()+ "'";
//                    strSqlStmt += ",chkss11";query += ",'"+chkSS11.isSelected()+ "'";
//                    strSqlStmt += ",txtsintomas";query += ",'"+txtSintomas.getText()+ "'";
                    
//                    strSqlStmt += ",chkfriesgo1";query += ",'"+chkFRiesgo1.isSelected()+ "'";
//                    strSqlStmt += ",chkfriesgo2";query += ",'"+chkFRiesgo2.isSelected()+ "'";
//                    strSqlStmt += ",chkfriesgo3";query += ",'"+chkFRiesgo3.isSelected()+ "'";
//                    strSqlStmt += ",chkfriesgo4";query += ",'"+chkFRiesgo4.isSelected()+ "'";
//                    strSqlStmt += ",chkfriesgo5";query += ",'"+chkFRiesgo5.isSelected()+ "'";
//                    strSqlStmt += ",chkfriesgo6";query += ",'"+chkFRiesgo6.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion1";query += ",'"+chkIndicacion1.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion2";query += ",'"+chkIndicacion2.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion3";query += ",'"+chkIndicacion3.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion4";query += ",'"+chkIndicacion4.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion5";query += ",'"+chkIndicacion5.isSelected()+ "'";
//                    strSqlStmt += ",chkindicacion6";query += ",'"+chkIndicacion6.isSelected()+ "'";
                    strSqlStmt += ",txtindicaciones";query += ",'"+atxtIndicacion.getText()+ "'";
                    
                    if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + query.concat(")"))){
                        oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                        imprimir();
                        limpiar(); 
                   }else{oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");} 
                }
             }
        }else { oFunc.SubSistemaMensajeError("Llene los Campos correctamente");
        txtNorden.requestFocus();}
    }
    private void limpiar(){
        txtNorden.setText(null);
        txtNombres.setText(null);
        txtDNI.setText(null);
        dateFechaNacimiento.setDate(null);
        txtSexo.setText(null) ;
        txtEdad.setText(null);
        FechaExamen.setDate(null);
        btgSintomas.clearSelection();
        btgHemograma.clearSelection();
        btgProteina.clearSelection();
        chkSS1.setSelected(false);
        chkSS2.setSelected(false);
        chkSS3.setSelected(false);
        chkSS4.setSelected(false);
        chkSS5.setSelected(false);
        chkSS6.setSelected(false);
        chkSS7.setSelected(false);
        chkSS9.setSelected(false);
        chkSS10.setSelected(false);
        chkSS11.setSelected(false);
        chkSS8.setSelected(false);
        txtSintomas.setText(null);
        txtHemogama.setText(null);
        txtProteina.setText(null);
        chkFRiesgo1.setSelected(false);
        chkFRiesgo2.setSelected(false);
        chkFRiesgo3.setSelected(false);
        chkFRiesgo4.setSelected(false);
        chkFRiesgo5.setSelected(false);
        chkFRiesgo6.setSelected(false);
        txtFactorRiesgo.setText(null);
        chkIndicacion1.setSelected(false);
        chkIndicacion2.setSelected(false);
        chkIndicacion3.setSelected(false);
        chkIndicacion4.setSelected(false);
        chkIndicacion5.setSelected(false);
        chkIndicacion6.setSelected(false);
        atxtIndicacion.setText(null);
        txtNorden.setEditable(true);
        txtNorden.requestFocusInWindow();
    }
    private boolean imprimir() {
        boolean im = false;
        int seleccion = JOptionPane.showOptionDialog(
                this, // Componente padre
                "¿Desea Imprimir?", //Mensaje
                "Seleccione una opción", // Título
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion != -1) {
            if ((seleccion + 1) == 1) {
                printer(Integer.valueOf(txtNorden.getText().toString()));
                im = true;
            } else {
                // PRESIONO NO
            }
        }
        return im;

    }
    private void printer(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                    try 
                {                     
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"IndicacionesMedicas.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer.viewReport(jasperPrint, false);
                    JasperPrintManager.printReport(jasperPrint,true);
//                  JasperExportManager.exportReportToPdfFile( jasperPrint, "E:/prueba/reporte.pdf");
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
     private void print(Integer cod) {

        Map parameters = new HashMap();
        parameters.put("Norden", cod);

        try {
            String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "IndicacionesMedicas.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("Indicaciones Medicas");
            // viewer.setAchkReactivoIgmtrue);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChkHAnormal;
    private javax.swing.JCheckBox ChkHAnormal1;
    private javax.swing.JCheckBox ChkHAnormal2;
    private javax.swing.JCheckBox ChkHAnormal3;
    private javax.swing.JCheckBox ChkHAnormal4;
    private javax.swing.JCheckBox ChkHAnormal5;
    private javax.swing.JCheckBox ChkHAnormal6;
    private javax.swing.JCheckBox ChkHNormal;
    private com.toedter.calendar.JDateChooser FechaExamen;
    private javax.swing.JTextArea atxtIndicacion;
    private javax.swing.JButton btEditar;
    private javax.swing.ButtonGroup btgHemograma;
    private javax.swing.ButtonGroup btgProteina;
    private javax.swing.ButtonGroup btgSintomas;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkFRiesgo1;
    private javax.swing.JCheckBox chkFRiesgo2;
    private javax.swing.JCheckBox chkFRiesgo3;
    private javax.swing.JCheckBox chkFRiesgo4;
    private javax.swing.JCheckBox chkFRiesgo5;
    private javax.swing.JCheckBox chkFRiesgo6;
    private javax.swing.JCheckBox chkIndicacion1;
    private javax.swing.JCheckBox chkIndicacion2;
    private javax.swing.JCheckBox chkIndicacion3;
    private javax.swing.JCheckBox chkIndicacion4;
    private javax.swing.JCheckBox chkIndicacion5;
    private javax.swing.JCheckBox chkIndicacion6;
    private javax.swing.JCheckBox chkPNegativa;
    private javax.swing.JCheckBox chkPPositiva;
    private javax.swing.JCheckBox chkPPositiva1;
    private javax.swing.JCheckBox chkPPositiva2;
    private javax.swing.JCheckBox chkPPositiva3;
    private javax.swing.JCheckBox chkSS1;
    private javax.swing.JCheckBox chkSS10;
    private javax.swing.JCheckBox chkSS11;
    private javax.swing.JCheckBox chkSS2;
    private javax.swing.JCheckBox chkSS3;
    private javax.swing.JCheckBox chkSS4;
    private javax.swing.JCheckBox chkSS5;
    private javax.swing.JCheckBox chkSS6;
    private javax.swing.JCheckBox chkSS7;
    private javax.swing.JCheckBox chkSS8;
    private javax.swing.JCheckBox chkSS9;
    private com.toedter.calendar.JDateChooser dateFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextArea txtFactorRiesgo;
    private javax.swing.JTextField txtHemogama;
    private javax.swing.JTextField txtIMP;
    private javax.swing.JTextField txtIgG;
    private javax.swing.JTextField txtIgM;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtProteina;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextArea txtSintomas;
    // End of variables declaration//GEN-END:variables
}
