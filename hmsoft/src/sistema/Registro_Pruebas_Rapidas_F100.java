/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema;

import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import Clases.clsOperacionesUsuarios;
import autocomplete.ajTextField;
import java.io.File;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DEYMER
 */
public class Registro_Pruebas_Rapidas_F100 extends javax.swing.JInternalFrame {
   
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    clsOperacionesUsuarios oPe = new clsOperacionesUsuarios();
    
    public Registro_Pruebas_Rapidas_F100() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgPerSalud = new javax.swing.ButtonGroup();
        btgProfesion = new javax.swing.ButtonGroup();
        btgSintomas = new javax.swing.ButtonGroup();
        btgProcedencia = new javax.swing.ButtonGroup();
        btgResultados = new javax.swing.ButtonGroup();
        btgClasificacion = new javax.swing.ButtonGroup();
        btgContinuidad = new javax.swing.ButtonGroup();
        btgResultados1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNorden = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        FechaExamen = new com.toedter.calendar.JDateChooser();
        btEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtEdad = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        rbSaludSi = new javax.swing.JRadioButton();
        rbSaludNo = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        rbMedico = new javax.swing.JRadioButton();
        rbEnfermero = new javax.swing.JRadioButton();
        rbObstetra = new javax.swing.JRadioButton();
        rbBiologo = new javax.swing.JRadioButton();
        rbTecnologo = new javax.swing.JRadioButton();
        rbTecnica = new javax.swing.JRadioButton();
        rbOtros = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        rbSintomaSi = new javax.swing.JRadioButton();
        rbSintomasNo = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        FechaSintoma = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        chkTos = new javax.swing.JCheckBox();
        chkDolorG = new javax.swing.JCheckBox();
        chkCongestionN = new javax.swing.JCheckBox();
        chkDificultadR = new javax.swing.JCheckBox();
        chkFiebre = new javax.swing.JCheckBox();
        chkMalestar = new javax.swing.JCheckBox();
        chkDiarrea = new javax.swing.JCheckBox();
        chkNauseas = new javax.swing.JCheckBox();
        chkCefalea = new javax.swing.JCheckBox();
        chkIrritaibilidad = new javax.swing.JCheckBox();
        chkDolor = new javax.swing.JCheckBox();
        chkOtroS = new javax.swing.JCheckBox();
        txtOtroSintoma = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        chkMuscular = new javax.swing.JCheckBox();
        chkAbdominal = new javax.swing.JCheckBox();
        chkPecho = new javax.swing.JCheckBox();
        chkArticulaciones = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        atxtOtrosSintomas = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        txtApMedico = new javax.swing.JTextField();
        txtColegiatura = new javax.swing.JTextField();
        txtNomMedico = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        chkSolicitud1 = new javax.swing.JCheckBox();
        chkSolicitud2 = new javax.swing.JCheckBox();
        chkSolicitud3 = new javax.swing.JCheckBox();
        chkSolicitud4 = new javax.swing.JCheckBox();
        chkSolicitud5 = new javax.swing.JCheckBox();
        chkSolicitud6 = new javax.swing.JCheckBox();
        chkSolicitud7 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        chkNegativo = new javax.swing.JCheckBox();
        chkNovalido = new javax.swing.JCheckBox();
        chkIgMPos = new javax.swing.JCheckBox();
        chkIgGPos = new javax.swing.JCheckBox();
        chkIgMIgGPos = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        rbLeve = new javax.swing.JRadioButton();
        rbModerado = new javax.swing.JRadioButton();
        rbSevera = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        chkCondicionR1 = new javax.swing.JCheckBox();
        chkCondicionR2 = new javax.swing.JCheckBox();
        chkCondicionR3 = new javax.swing.JCheckBox();
        chkCondicionR4 = new javax.swing.JCheckBox();
        chkCondicionR5 = new javax.swing.JCheckBox();
        chkCondicionR6 = new javax.swing.JCheckBox();
        chkCondicionR7 = new javax.swing.JCheckBox();
        chkCondicionR9 = new javax.swing.JCheckBox();
        chkCondicionR8 = new javax.swing.JCheckBox();
        chkCondicionR10 = new javax.swing.JCheckBox();
        chkCondicionR11 = new javax.swing.JCheckBox();
        chkCondicionR12 = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        chkNegativo1 = new javax.swing.JCheckBox();
        chkNovalido1 = new javax.swing.JCheckBox();
        chkIgMPos1 = new javax.swing.JCheckBox();
        chkIgGPos1 = new javax.swing.JCheckBox();
        chkIgMIgGPos1 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        chkContinuidad1 = new javax.swing.JCheckBox();
        chkContinuidad2 = new javax.swing.JCheckBox();
        chkContinuidad3 = new javax.swing.JCheckBox();
        chkContinuidad4 = new javax.swing.JCheckBox();
        chkContinuidad5 = new javax.swing.JCheckBox();
        rbPCR_SI = new javax.swing.JRadioButton();
        rbPCR_NO = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        atxtObservaciones = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        btnGrabar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtIMP = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("REGISTRO DE PRUEBAS RÁPIDAS F100");

        jLabel1.setText("N° orden :");

        txtNorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNordenActionPerformed(evt);
            }
        });

        jLabel9.setText("Fecha :");

        FechaExamen.setBackground(new java.awt.Color(233, 230, 230));

        btEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btEditar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btEditar)
                    .addComponent(FechaExamen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(5, 5, 5))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS PERSONALES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel38.setText("DNI :");

        txtDNI.setEditable(false);
        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombres :");

        txtNombres.setEditable(false);

        jLabel42.setText("Sexo :");

        txtSexo.setEditable(false);

        jLabel41.setText("Fecha Nacimiento :");

        dateFechaNacimiento.setBackground(new java.awt.Color(233, 230, 230));
        dateFechaNacimiento.setEnabled(false);

        jLabel8.setText("Edad :");

        txtEdad.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel38)
                        .addGap(4, 4, 4)
                        .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel38)
                            .addComponent(jLabel3))))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41))))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS ESPECÍFICOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("- ¿ Es personal de salud?");

        btgPerSalud.add(rbSaludSi);
        rbSaludSi.setText("SI");
        rbSaludSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSaludSiActionPerformed(evt);
            }
        });

        btgPerSalud.add(rbSaludNo);
        rbSaludNo.setSelected(true);
        rbSaludNo.setText("NO");
        rbSaludNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSaludNoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("¿ Cuál es su profesión?");

        btgProfesion.add(rbMedico);
        rbMedico.setText("Médico ");
        rbMedico.setEnabled(false);

        btgProfesion.add(rbEnfermero);
        rbEnfermero.setText("Enfermero(a)");
        rbEnfermero.setEnabled(false);

        btgProfesion.add(rbObstetra);
        rbObstetra.setText("Obstetra");
        rbObstetra.setEnabled(false);

        btgProfesion.add(rbBiologo);
        rbBiologo.setText("Biólogo");
        rbBiologo.setEnabled(false);

        btgProfesion.add(rbTecnologo);
        rbTecnologo.setText("Tecnólogo Médico");
        rbTecnologo.setEnabled(false);

        btgProfesion.add(rbTecnica);
        rbTecnica.setText("Técnica de enfermería");
        rbTecnica.setEnabled(false);

        btgProfesion.add(rbOtros);
        rbOtros.setText("Otros");
        rbOtros.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("- ¿ Tiene sintomas?");

        btgSintomas.add(rbSintomaSi);
        rbSintomaSi.setText("SI");
        rbSintomaSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSintomaSiActionPerformed(evt);
            }
        });

        btgSintomas.add(rbSintomasNo);
        rbSintomasNo.setSelected(true);
        rbSintomasNo.setText("NO");
        rbSintomasNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSintomasNoActionPerformed(evt);
            }
        });

        jLabel6.setText("<html>Fecha de inicio <br>de sintoma :</html>");

        FechaSintoma.setBackground(new java.awt.Color(233, 230, 230));
        FechaSintoma.setDoubleBuffered(false);
        FechaSintoma.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Marque los sintomas que presente:");

        chkTos.setText("Tos");
        chkTos.setEnabled(false);

        chkDolorG.setText("Dolor de garganta");
        chkDolorG.setEnabled(false);

        chkCongestionN.setText("Congestión Nasal");
        chkCongestionN.setEnabled(false);

        chkDificultadR.setText("Dificultad respiratoria");
        chkDificultadR.setEnabled(false);

        chkFiebre.setText("Fiebre/ Escalofrio");
        chkFiebre.setEnabled(false);

        chkMalestar.setText("Malestar general");
        chkMalestar.setEnabled(false);

        chkDiarrea.setText("Diarrea");
        chkDiarrea.setEnabled(false);

        chkNauseas.setText("Nauseas / vómitos");
        chkNauseas.setEnabled(false);

        chkCefalea.setText("Cefalea");
        chkCefalea.setEnabled(false);

        chkIrritaibilidad.setText("Irritabilidad / confusión");
        chkIrritaibilidad.setEnabled(false);

        chkDolor.setText("Dolor");
        chkDolor.setEnabled(false);

        chkOtroS.setText("Otros");
        chkOtroS.setEnabled(false);

        txtOtroSintoma.setEnabled(false);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("- Tipo de dolor que presenta :");

        chkMuscular.setText("Muscular");
        chkMuscular.setEnabled(false);

        chkAbdominal.setText("Abdominal");
        chkAbdominal.setEnabled(false);

        chkPecho.setText("Pecho");
        chkPecho.setEnabled(false);

        chkArticulaciones.setText("Articulaciones");
        chkArticulaciones.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("- Otros sintomas: ");

        atxtOtrosSintomas.setColumns(20);
        atxtOtrosSintomas.setRows(5);
        atxtOtrosSintomas.setEnabled(false);
        jScrollPane1.setViewportView(atxtOtrosSintomas);

        txtApMedico.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtApMedico.setText("MONTILLA GARCIA");

        txtColegiatura.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtColegiatura.setText("10795");

        txtNomMedico.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtNomMedico.setText("DOLIBETH");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel19.setText("Apellidos del Evaluador");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel20.setText("Nombres del Evaluador");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel21.setText("Colegiatura");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApMedico)
                    .addComponent(txtColegiatura)
                    .addComponent(txtNomMedico)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel19)
                .addGap(3, 3, 3)
                .addComponent(txtApMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel20)
                .addGap(1, 1, 1)
                .addComponent(txtNomMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel21)
                .addGap(1, 1, 1)
                .addComponent(txtColegiatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rbBiologo)
                                    .addComponent(rbMedico))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(rbEnfermero)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rbObstetra))
                                    .addComponent(rbTecnologo)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rbTecnica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbOtros))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbSintomaSi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbSintomasNo))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkDificultadR)
                                            .addComponent(chkCongestionN)
                                            .addComponent(chkTos)
                                            .addComponent(chkDolorG)
                                            .addComponent(chkFiebre)
                                            .addComponent(chkMalestar))
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkCefalea)
                                                    .addComponent(chkNauseas)
                                                    .addComponent(chkDiarrea))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkOtroS)
                                                    .addComponent(chkDolor)
                                                    .addComponent(chkIrritaibilidad))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(FechaSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel7))
                                        .addGap(30, 30, 30)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(chkAbdominal)
                                                    .addComponent(chkMuscular)
                                                    .addComponent(chkPecho)
                                                    .addComponent(chkArticulaciones)))
                                            .addComponent(jLabel11))))))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOtroSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(rbSaludSi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbSaludNo))
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbMedico)
                                    .addComponent(rbEnfermero)
                                    .addComponent(rbObstetra))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbBiologo)
                                    .addComponent(rbTecnologo))
                                .addGap(0, 0, 0)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbTecnica)
                                    .addComponent(rbOtros))
                                .addGap(1, 1, 1)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(rbSintomaSi)
                                    .addComponent(rbSintomasNo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FechaSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)
                                .addComponent(jLabel7))
                            .addComponent(jSeparator1))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkTos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkDiarrea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkDolorG, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkNauseas, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkCongestionN, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkCefalea, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkDificultadR, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkIrritaibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkFiebre, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkDolor, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkMalestar, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOtroS, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOtroSintoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbSaludSi)
                                    .addComponent(rbSaludNo)
                                    .addComponent(jLabel2))
                                .addGap(2, 2, 2)
                                .addComponent(jLabel4))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(5, 5, 5)
                                .addComponent(chkMuscular, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkAbdominal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkPecho, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkArticulaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11)
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 109, Short.MAX_VALUE)))
                .addGap(1, 1, 1))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DATOS DE LA PRUEBA RÁPIDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("- Procedencia de la solicitud de diagnóstico :");

        btgProcedencia.add(chkSolicitud1);
        chkSolicitud1.setText("Llamar al 113");

        btgProcedencia.add(chkSolicitud2);
        chkSolicitud2.setText("Prueba en establecimiento de salud");

        btgProcedencia.add(chkSolicitud3);
        chkSolicitud3.setText("Personal de salud");

        btgProcedencia.add(chkSolicitud4);
        chkSolicitud4.setText("Contacto con caso confirmado");

        btgProcedencia.add(chkSolicitud5);
        chkSolicitud5.setText("Contacto con caso sospechoso");

        btgProcedencia.add(chkSolicitud6);
        chkSolicitud6.setText("Persona proveniente del extranjero");

        btgProcedencia.add(chkSolicitud7);
        chkSolicitud7.setSelected(true);
        chkSolicitud7.setText("Otro priorizado");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("- Resultados de la prueba rápida");

        chkNegativo.setText("Negativo");

        chkNovalido.setText("No válido");

        chkIgMPos.setText("IgM Positivo");

        chkIgGPos.setText("IgG Positivo");

        chkIgMIgGPos.setText("IgM e IgG Positivo");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("<html> - Clasificación clínica <br>de severidad</html>");

        btgClasificacion.add(rbLeve);
        rbLeve.setText("Leve");

        btgClasificacion.add(rbModerado);
        rbModerado.setText("Moderada");

        btgClasificacion.add(rbSevera);
        rbSevera.setText("Severa");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("- ¿ El paciente cumple alguna condición de riesgo?");

        chkCondicionR1.setText("Mayor de 60 años");

        chkCondicionR2.setText("Hipertensión arterial");

        chkCondicionR3.setText("Enfermedades cardiovasculares");

        chkCondicionR4.setText("Diabetes");

        chkCondicionR5.setText("Obesidad ");

        chkCondicionR6.setText("Asma");

        chkCondicionR7.setText("Enfermedades pulmonar crónica");

        chkCondicionR9.setText("<html>Enfermedad o tratamiento <br>inmonusuperior</html> ");

        chkCondicionR8.setText("Insuficiencia renal crónica");

        chkCondicionR10.setText("Cáncer");

        chkCondicionR11.setText("Embarazo o puerperio");

        chkCondicionR12.setText("Personal de salud");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("- Resultados de la 2° prueba rápida");

        chkNegativo1.setText("Negativo");

        chkNovalido1.setText("No válido");

        chkIgMPos1.setText("IgM Positivo");

        chkIgGPos1.setText("IgG Positivo");

        chkIgMIgGPos1.setText("IgM e IgG Positivo");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkCondicionR3)
                                        .addComponent(chkCondicionR1))
                                    .addGap(2, 2, 2))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(chkCondicionR2)
                                    .addGap(56, 56, 56)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkCondicionR4)
                                    .addComponent(chkCondicionR5)
                                    .addComponent(chkCondicionR6))
                                .addGap(106, 106, 106)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkCondicionR12)
                            .addComponent(chkCondicionR11)
                            .addComponent(chkCondicionR10)
                            .addComponent(chkCondicionR8)
                            .addComponent(chkCondicionR7)
                            .addComponent(chkCondicionR9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkSolicitud2)
                                            .addComponent(chkSolicitud1)
                                            .addComponent(chkSolicitud3)
                                            .addComponent(chkNegativo)
                                            .addComponent(chkSolicitud5)
                                            .addComponent(chkSolicitud6)
                                            .addComponent(chkSolicitud7)
                                            .addComponent(chkNovalido)
                                            .addComponent(chkIgMPos)
                                            .addComponent(chkIgGPos)
                                            .addComponent(chkIgMIgGPos)
                                            .addComponent(chkSolicitud4))))
                                .addGap(2, 2, 2)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbLeve)
                            .addComponent(rbModerado)
                            .addComponent(rbSevera)
                            .addComponent(jLabel18)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkNegativo1)
                                    .addComponent(chkNovalido1)
                                    .addComponent(chkIgMPos1)
                                    .addComponent(chkIgGPos1)
                                    .addComponent(chkIgMIgGPos1))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(2, 2, 2)
                                .addComponent(chkSolicitud1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSolicitud7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(rbLeve)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbModerado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbSevera)))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(1, 1, 1)
                                .addComponent(chkNegativo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNovalido, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgMPos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgGPos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgMIgGPos, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNegativo1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkNovalido1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgMPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgGPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkIgMIgGPos1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(1, 1, 1)
                .addComponent(jLabel15)
                .addGap(1, 1, 1)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCondicionR1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCondicionR2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCondicionR3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCondicionR4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCondicionR5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCondicionR6, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCondicionR12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONTINUIDAD DE LA ATENCIÓN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 204))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("- ¿ Se aplicará PCR? ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("<html>- De acuerdo a la situación clínica del paciente, <br>¿qué seguimiento procede?</html>");

        chkContinuidad1.setText("Retir prueba en 7 días");

        chkContinuidad2.setText("Seguimiento clínico remoto cada 24 horas ");

        chkContinuidad3.setText("<html>Seguimiento clínico presencial cada 72 horas<br> y seguimiento clínico remota cada 24 horas</html> ");

        chkContinuidad4.setText("Traslado al hospital ");

        chkContinuidad5.setText("Traslado al hospital en UCI");
        chkContinuidad5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkContinuidad5ActionPerformed(evt);
            }
        });

        btgContinuidad.add(rbPCR_SI);
        rbPCR_SI.setText("SI");

        btgContinuidad.add(rbPCR_NO);
        rbPCR_NO.setText("NO");

        atxtObservaciones.setColumns(20);
        atxtObservaciones.setRows(5);
        atxtObservaciones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 153))); // NOI18N
        jScrollPane2.setViewportView(atxtObservaciones);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(rbPCR_SI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbPCR_NO))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkContinuidad5)
                                    .addComponent(chkContinuidad2)
                                    .addComponent(chkContinuidad1)
                                    .addComponent(chkContinuidad3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chkContinuidad4))))
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(rbPCR_SI)
                            .addComponent(rbPCR_NO))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkContinuidad1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkContinuidad2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkContinuidad3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chkContinuidad4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chkContinuidad5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
        );

        btnGrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        btnGrabar.setText("Grbar/ Actualizar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Imprimir N°orden"));

        txtIMP.setBackground(new java.awt.Color(204, 255, 204));
        txtIMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIMPActionPerformed(evt);
            }
        });

        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/impresora.png"))); // NOI18N
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel44)
                .addGap(2, 2, 2))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtIMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel44)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(btnGrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void chkContinuidad5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkContinuidad5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkContinuidad5ActionPerformed

    private void txtIMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIMPActionPerformed
//        
        if(!txtIMP.getText().isEmpty()){        
           print(Integer.valueOf(txtIMP.getText().toString()));
         }
    }//GEN-LAST:event_txtIMPActionPerformed

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
//        ReImp();
        if(!txtIMP.getText().isEmpty()){        
           print(Integer.valueOf(txtIMP.getText().toString()));
         }
    }//GEN-LAST:event_jLabel44MouseClicked

    private void rbSaludSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSaludSiActionPerformed
        // TODO add your handling code here:
        rbMedico.setEnabled(true);
        rbEnfermero.setEnabled(true);
        rbObstetra.setEnabled(true);
        rbBiologo.setEnabled(true);
        rbTecnologo.setEnabled(true);
        rbTecnica.setEnabled(true);
        rbOtros.setEnabled(true);
        
          
    }//GEN-LAST:event_rbSaludSiActionPerformed

    private void txtNordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNordenActionPerformed
        // TODO add your handling code here:
        if(!txtNorden.getText().isEmpty()){
          if(!oPe.nOrden(txtNorden, "pruebas_rapidas_covid19"))  {
            dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
            boolean igm,igg,inval,neg,neg1;
             String Sql="select d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, d.cod_pa, d.fecha_nacimiento_pa,"
                     + "e.chkigm_reactivo,e.chkigg_reactivo,e.chkinvalido, e.chkigm_noreactivo,e.chkigg_noreactivo "
                + " from datos_paciente AS d "
                + "INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) "
                + "INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "
                + "WHERE n.n_orden ='"+txtNorden.getText().toString()+"'";
            oConn.FnBoolQueryExecute(Sql);      
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        igm=oConn.setResult.getBoolean("chkigm_reactivo");
                        igg=oConn.setResult.getBoolean("chkigg_reactivo");
                        inval=oConn.setResult.getBoolean("chkinvalido");
                        neg=oConn.setResult.getBoolean("chkigm_noreactivo");
                        neg1=oConn.setResult.getBoolean("chkigg_noreactivo");
                        if(inval){
                            chkNovalido.setSelected(inval);
                        }else if(igm &&igg){
                            chkIgMIgGPos.setSelected(true);
                        }else if(neg && neg1){
                            chkNegativo.setSelected(true);
                        }else if(igm){
                            chkIgMPos.setSelected(igm);
                        }else if(igg){
                            chkIgGPos.setSelected(igg);
                        }
                        
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
                        oPe.fecha(FechaExamen);
                        FechaExamen.requestFocus(); 
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro en Laboratorio");
                    }
                oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          }else{
              oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
          }
        }
    }//GEN-LAST:event_txtNordenActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        // TODO add your handling code here:
        if(oPe.nOrden(txtNorden, "pruebas_rapidas_covid19"))  {
           actualizar();
       }else{
            agregar();
       }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        // TODO add your handling code here:
        if(!txtNorden.getText().isEmpty()){
        dateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        boolean igm,igg,inval,neg,neg1;
    String Sql="SELECT d.nombres_pa||' '||d.apellidos_pa AS nombre, d.sexo_pa, d.cod_pa, d.fecha_nacimiento_pa," +
       "p.fecha_registro, p.rbsalud_si, p.rbsalud_no, p.rbmedico, p.rbenfermero, \n" +
"       p.rbobstetra, p.rbbiologo, p.rbtecnologo, p.rbtecnica, p.rbotros, p.rbsintomas_si, \n" +
"       p.rbsintomas_no, p.fecha_sintoma, p.chktos, p.chkdolor_g, p.chkcongestion_n, \n" +
"       p.chkdificultad_r, p.chkfiebre, p.chkmalestar_g, p.chkdiarrea, p.chknauseas, \n" +
"       p.chkcefalea, p.chkirritabilidad, p.chkdolor, p.chkotros, p.txtotros, p.chkmuscular, \n" +
"       p.chkabdominal, p.chkpecho, p.chkarticulaciones, p.atxtotros_sintomas, \n" +
"       p.chksolicitud1, p.chksolicitud2, p.chksolicitud3, p.chksolicitud4, p.chksolicitud5, \n" +
"       p.chksolicitud6, p.chksolicitud7, p.chknegativo, p.chknovalido, p.chkigmpositivo, \n" +
"       p.chkiggpositivo, p.chkigmiggpositivo, chknegativo1, chknovalido1, \n" +
"       chkigmpositivo1, chkiggpositivo1, chkigmiggpositivo1,p.chkcondicion_r1, p.chkcondicion_r2, \n" +
"       p.chkcondicion_r3, p.chkcondicion_r4, p.chkcondicion_r5, p.chkcondicion_r6, \n" +
"       p.chkcondicion_r7, p.chkcondicion_r8, p.chkcondicion_r9, p.chkcondicion_r10, \n" +
"       p.chkcondicion_r11, p.chkcondicion_r12, p.chkleve, p.chkmodrado, p.chksevera, \n" +
"       p.chkpcr_si, p.chkpcr_no, p.chkcontinuidad1, p.chkcontinuidad2, p.chkcontinuidad3, \n" +
"       p.chkcontinuidad4, p.chkcontinuidad5, p.txtobservaciones, txtapellidos_medico, txtnombres_medico, \n" +
"       cmp_medico, e.chkigm_reactivo,e.chkigg_reactivo,e.chkinvalido,e.chkigm_noreactivo,e.chkigg_noreactivo " +
"FROM datos_paciente AS d \n" +
"INNER JOIN n_orden_ocupacional AS n ON (d.cod_pa=n.cod_pa) \n" +
"INNER JOIN pruebas_rapidas_covid19 AS p ON (n.n_orden=p.n_orden) \n" +
"INNER JOIN examen_inmunologico AS e ON (n.n_orden = e.n_orden) "+
"WHERE n.n_orden ='"+txtNorden.getText()+"'";
            oConn.FnBoolQueryExecute(Sql);      
            try {
                    if (oConn.setResult.next()) {
                        txtNombres.setText(oConn.setResult.getString("nombre"));
                        txtDNI.setText(oConn.setResult.getString("cod_pa"));
                        dateFechaNacimiento.setDate(oConn.setResult.getDate("fecha_nacimiento_pa"));
                        txtSexo.setText(oConn.setResult.getString("sexo_pa").equals("M")? "MASCULINO":"FEMENINO") ;
                        txtEdad.setText(String.valueOf(oFunc.calcularEdad(dateFechaNacimiento.getCalendar())) );
                        igm=oConn.setResult.getBoolean("chkigm_reactivo");
                        igg=oConn.setResult.getBoolean("chkigg_reactivo");
                        inval=oConn.setResult.getBoolean("chkinvalido");
                        neg=oConn.setResult.getBoolean("chkigm_noreactivo");
                        neg1=oConn.setResult.getBoolean("chkigg_noreactivo");
                        if(inval){
                            chkNovalido.setSelected(inval);
                        }else if(igm && igg){
                            chkIgMIgGPos.setSelected(true);
                        }else if(neg && neg1){
                            chkNegativo.setSelected(true);
                        }else if(igm){
                            chkIgMPos.setSelected(igm);
                        }else if(igg){
                            chkIgGPos.setSelected(igg);
                        }
                        FechaExamen.setDate(oConn.setResult.getDate("fecha_registro"));
                        rbSaludSi.setSelected(oConn.setResult.getBoolean("rbsalud_si"));
                        rbSaludNo.setSelected(oConn.setResult.getBoolean("rbsalud_no"));
                        rbMedico.setSelected(oConn.setResult.getBoolean("rbmedico"));
                        rbEnfermero.setSelected(oConn.setResult.getBoolean("rbenfermero"));
                        rbObstetra.setSelected(oConn.setResult.getBoolean("rbobstetra"));
                        rbBiologo.setSelected(oConn.setResult.getBoolean("rbbiologo"));
                        rbTecnologo.setSelected(oConn.setResult.getBoolean("rbtecnologo"));
                        rbTecnica.setSelected(oConn.setResult.getBoolean("rbtecnica"));
                        rbOtros.setSelected(oConn.setResult.getBoolean("rbotros"));
                        rbSintomaSi.setSelected(oConn.setResult.getBoolean("rbsintomas_si"));
                        rbSintomasNo.setSelected(oConn.setResult.getBoolean("rbsintomas_no"));
                        FechaSintoma.setDate(oConn.setResult.getDate("fecha_sintoma"));
                        chkTos.setSelected(oConn.setResult.getBoolean("chktos"));
                        chkDolorG.setSelected(oConn.setResult.getBoolean("chkdolor_g"));
                        chkCongestionN.setSelected(oConn.setResult.getBoolean("chkcongestion_n"));
                        chkDificultadR.setSelected(oConn.setResult.getBoolean("chkdificultad_r"));
                        chkFiebre.setSelected(oConn.setResult.getBoolean("chkfiebre"));
                        chkMalestar.setSelected(oConn.setResult.getBoolean("chkmalestar_g"));
                        chkDiarrea.setSelected(oConn.setResult.getBoolean("chkdiarrea"));
                        chkNauseas.setSelected(oConn.setResult.getBoolean("chknauseas"));
                        chkCefalea.setSelected(oConn.setResult.getBoolean("chkcefalea"));
                        chkIrritaibilidad.setSelected(oConn.setResult.getBoolean("chkirritabilidad"));
                        chkDolor.setSelected(oConn.setResult.getBoolean("chkdolor"));
                        chkOtroS.setSelected(oConn.setResult.getBoolean("chkotros"));
                        txtOtroSintoma.setText(oConn.setResult.getString("txtotros"));
                        chkMuscular.setSelected(oConn.setResult.getBoolean("chkmuscular"));
                        chkAbdominal.setSelected(oConn.setResult.getBoolean("chkabdominal"));
                        chkPecho.setSelected(oConn.setResult.getBoolean("chkpecho"));
                        chkArticulaciones.setSelected(oConn.setResult.getBoolean("chkarticulaciones"));
                        atxtOtrosSintomas.setText(oConn.setResult.getString("atxtotros_sintomas"));
                        chkSolicitud1.setSelected(oConn.setResult.getBoolean("chksolicitud1"));
                        chkSolicitud2.setSelected(oConn.setResult.getBoolean("chksolicitud2"));
                        chkSolicitud3.setSelected(oConn.setResult.getBoolean("chksolicitud3"));
                        chkSolicitud4.setSelected(oConn.setResult.getBoolean("chksolicitud4"));
                        chkSolicitud5.setSelected(oConn.setResult.getBoolean("chksolicitud5"));
                        chkSolicitud6.setSelected(oConn.setResult.getBoolean("chksolicitud6"));
                        chkSolicitud7.setSelected(oConn.setResult.getBoolean("chksolicitud7"));
//                        chkNegativo.setSelected(oConn.setResult.getBoolean("chknegativo"));
//                        chkNovalido.setSelected(oConn.setResult.getBoolean("chknovalido"));
//                        chkIgMPos.setSelected(oConn.setResult.getBoolean("chkigmpositivo"));
//                        chkIgGPos.setSelected(oConn.setResult.getBoolean("chkiggpositivo"));
//                        chkIgMIgGPos.setSelected(oConn.setResult.getBoolean("chkigmiggpositivo"));
                        chkNegativo1.setSelected(oConn.setResult.getBoolean("chknegativo1"));
                        chkNovalido1.setSelected(oConn.setResult.getBoolean("chknovalido1"));
                        chkIgMPos1.setSelected(oConn.setResult.getBoolean("chkigmpositivo1"));
                        chkIgGPos1.setSelected(oConn.setResult.getBoolean("chkiggpositivo1"));
                        chkIgMIgGPos1.setSelected(oConn.setResult.getBoolean("chkigmiggpositivo1"));
                        chkCondicionR1.setSelected(oConn.setResult.getBoolean("chkcondicion_r1"));
                        chkCondicionR2.setSelected(oConn.setResult.getBoolean("chkcondicion_r2"));
                        chkCondicionR3.setSelected(oConn.setResult.getBoolean("chkcondicion_r3"));
                        chkCondicionR4.setSelected(oConn.setResult.getBoolean("chkcondicion_r4"));
                        chkCondicionR5.setSelected(oConn.setResult.getBoolean("chkcondicion_r5"));
                        chkCondicionR6.setSelected(oConn.setResult.getBoolean("chkcondicion_r6"));
                        chkCondicionR7.setSelected(oConn.setResult.getBoolean("chkcondicion_r7"));
                        chkCondicionR8.setSelected(oConn.setResult.getBoolean("chkcondicion_r8"));
                        chkCondicionR9.setSelected(oConn.setResult.getBoolean("chkcondicion_r9"));
                        chkCondicionR10.setSelected(oConn.setResult.getBoolean("chkcondicion_r10"));
                        chkCondicionR11.setSelected(oConn.setResult.getBoolean("chkcondicion_r11"));
                        chkCondicionR12.setSelected(oConn.setResult.getBoolean("chkcondicion_r12"));
                        rbLeve.setSelected(oConn.setResult.getBoolean("chkleve"));
                        rbModerado.setSelected(oConn.setResult.getBoolean("chkmodrado"));
                        rbSevera.setSelected(oConn.setResult.getBoolean("chksevera"));
                        rbPCR_SI.setSelected(oConn.setResult.getBoolean("chkpcr_si"));
                        rbPCR_NO.setSelected(oConn.setResult.getBoolean("chkpcr_no"));
                        chkContinuidad1.setSelected(oConn.setResult.getBoolean("chkcontinuidad1"));
                        chkContinuidad2.setSelected(oConn.setResult.getBoolean("chkcontinuidad2"));
                        chkContinuidad3.setSelected(oConn.setResult.getBoolean("chkcontinuidad3"));
                        chkContinuidad4.setSelected(oConn.setResult.getBoolean("chkcontinuidad4"));
                        chkContinuidad5.setSelected(oConn.setResult.getBoolean("chkcontinuidad5"));
                        atxtObservaciones.setText(oConn.setResult.getString("txtobservaciones"));
                        txtApMedico.setText(oConn.setResult.getString("txtapellidos_medico"));
                        txtNomMedico.setText(oConn.setResult.getString("txtnombres_medico"));
                        txtColegiatura.setText(oConn.setResult.getString("cmp_medico"));
                        txtNorden.setEditable(false);
                        FechaExamen.requestFocusInWindow();
                       }else{
                        oFunc.SubSistemaMensajeError("No se encuentra Registro: \n 1- Intente de nuevo \n 2- Si el error sigue Registre Usuario o \n    Aperture EX-Preocupacional");
                    }
                    oConn.setResult.close();
            } catch (SQLException ex) {
            oFunc.SubSistemaMensajeInformacion("Error:" + ex.getMessage().toString());
            }
          
        }
    }//GEN-LAST:event_btEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
       limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void rbSaludNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSaludNoActionPerformed
        // TODO add your handling code here:
        rbMedico.setEnabled(false);
        rbEnfermero.setEnabled(false);
        rbObstetra.setEnabled(false);
        rbBiologo.setEnabled(false);
        rbTecnologo.setEnabled(false);
        rbTecnica.setEnabled(false);
        rbOtros.setEnabled(false);
       
    }//GEN-LAST:event_rbSaludNoActionPerformed

    private void rbSintomaSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSintomaSiActionPerformed
        // TODO add your handling code here:
        
        FechaSintoma.setEnabled(true);
        chkTos.setEnabled(true);
        chkDolorG.setEnabled(true);
        chkCongestionN.setEnabled(true);
        chkDificultadR.setEnabled(true);
        chkFiebre.setEnabled(true);
        chkMalestar.setEnabled(true);
        chkDiarrea.setEnabled(true);
        chkNauseas.setEnabled(true);
        chkCefalea.setEnabled(true);
        chkIrritaibilidad.setEnabled(true);
        chkDolor.setEnabled(true);
        chkOtroS.setEnabled(true);
        txtOtroSintoma.setEnabled(true);
        chkMuscular.setEnabled(true);
        chkAbdominal.setEnabled(true);
        chkPecho.setEnabled(true);
        chkArticulaciones.setEnabled(true);
        atxtOtrosSintomas.setEnabled(true);
    }//GEN-LAST:event_rbSintomaSiActionPerformed

    private void rbSintomasNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSintomasNoActionPerformed
        // TODO add your handling code here:
        
        FechaSintoma.setEnabled(false);
        chkTos.setEnabled(false);
        chkDolorG.setEnabled(false);
        chkCongestionN.setEnabled(false);
        chkDificultadR.setEnabled(false);
        chkFiebre.setEnabled(false);
        chkMalestar.setEnabled(false);
        chkDiarrea.setEnabled(false);
        chkNauseas.setEnabled(false);
        chkCefalea.setEnabled(false);
        chkIrritaibilidad.setEnabled(false);
        chkDolor.setEnabled(false);
        chkOtroS.setEnabled(false);
        txtOtroSintoma.setEnabled(false);
        chkMuscular.setEnabled(false);
        chkAbdominal.setEnabled(false);
        chkPecho.setEnabled(false);
        chkArticulaciones.setEnabled(false);
        atxtOtrosSintomas.setEnabled(false);
    }//GEN-LAST:event_rbSintomasNoActionPerformed
    private boolean validar(){
        boolean bResultado=true;
        if (((JTextField)FechaExamen.getDateEditor().getUiComponent()).getText().trim().length()< 2 ) 
            {oFunc.SubSistemaMensajeError("Ingrese Fecha ");bResultado = false;}
        

       return bResultado;
    }
    private void actualizar(){
        if(!txtNorden.getText().isEmpty()){
            if(validar()){
                String strSqlStmt;
                strSqlStmt="UPDATE pruebas_rapidas_covid19\n" +
                "   SET fecha_registro='"+FechaExamen.getDate()+"'"
                        + ", rbsalud_si='"+rbSaludSi.isSelected()+"'"
                        + ", rbsalud_no='"+rbSaludNo.isSelected()+"'"
                        + ", rbmedico='"+rbMedico.isSelected()+"'"
                        + ", rbenfermero='"+rbEnfermero.isSelected()+"'"
                        + ", rbobstetra='"+rbObstetra.isSelected()+"'"
                        + ", rbbiologo='"+rbBiologo.isSelected()+"'"
                        + ", rbtecnologo='"+rbTecnologo.isSelected()+"'"
                        + ", rbtecnica='"+rbTecnica.isSelected()+"'"
                        + ", rbotros='"+rbOtros.isSelected()+"'"
                        + ", rbsintomas_si='"+rbSintomaSi.isSelected()+"'"
                        + ", rbsintomas_no='"+rbSintomasNo.isSelected()+"'";
                        if (((JTextField)FechaSintoma.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                        strSqlStmt+=", fecha_sintoma='"+FechaSintoma.getDate()+"'";}
                        strSqlStmt+= ", chktos='"+chkTos.isSelected()+"'"
                        + ", chkdolor_g='"+chkDolorG.isSelected()+"'"
                        + ", chkcongestion_n='"+chkCongestionN.isSelected()+"'"
                        + ", chkdificultad_r='"+chkDificultadR.isSelected()+"'"
                        + ", chkfiebre='"+chkFiebre.isSelected()+"'"
                        + ", chkmalestar_g='"+chkMalestar.isSelected()+"'"
                        + ", chkdiarrea='"+chkDiarrea.isSelected()+"'"
                        + ", chknauseas='"+chkNauseas.isSelected()+"'"
                        + ", chkcefalea='"+chkCefalea.isSelected()+"'"
                        + ", chkirritabilidad='"+chkIrritaibilidad.isSelected()+"'"
                        + ", chkdolor='"+chkDolor.isSelected()+"'"
                        + ", chkotros='"+chkOtroS.isSelected()+"'"
                        + ", txtotros='"+txtOtroSintoma.getText()+"'"
                        + ", chkmuscular='"+chkMuscular.isSelected()+"'"
                        + ", chkabdominal='"+chkAbdominal.isSelected()+"'"
                        + ", chkpecho='"+chkPecho.isSelected()+"'"
                        + ", chkarticulaciones='"+chkArticulaciones.isSelected()+"'"
                        + ", atxtotros_sintomas='"+atxtOtrosSintomas.getText()+"'"
                        + ", chksolicitud1='"+chkSolicitud1.isSelected()+"'"
                        + ", chksolicitud2='"+chkSolicitud2.isSelected()+"'"
                        + ", chksolicitud3='"+chkSolicitud3.isSelected()+"'"
                        + ", chksolicitud4='"+chkSolicitud4.isSelected()+"'"
                        + ", chksolicitud5='"+chkSolicitud5.isSelected()+"'"
                        + ", chksolicitud6='"+chkSolicitud6.isSelected()+"'"
                        + ", chksolicitud7='"+chkSolicitud7.isSelected()+"'"
                        + ", chknegativo='"+chkNegativo.isSelected()+"'"
                        + ", chknovalido='"+chkNovalido.isSelected()+"'"
                        + ", chkigmpositivo='"+chkIgMPos.isSelected()+"'"
                        + ", chkiggpositivo='"+chkIgGPos.isSelected()+"'"
                        + ", chkigmiggpositivo='"+chkIgMIgGPos.isSelected()+"'"
                        + ", chknegativo1='"+chkNegativo1.isSelected()+"'"
                        + ", chknovalido1='"+chkNovalido1.isSelected()+"'"
                        + ", chkigmpositivo1='"+chkIgMPos1.isSelected()+"'"
                        + ", chkiggpositivo1='"+chkIgGPos1.isSelected()+"'"
                        + ", chkigmiggpositivo1='"+chkIgMIgGPos1.isSelected()+"'"
                        + ", chkcondicion_r1='"+chkCondicionR1.isSelected()+"'"
                        + ", chkcondicion_r2='"+chkCondicionR2.isSelected()+"'"
                        + ", chkcondicion_r3='"+chkCondicionR3.isSelected()+"'"
                        + ", chkcondicion_r4='"+chkCondicionR4.isSelected()+"'"
                        + ", chkcondicion_r5='"+chkCondicionR5.isSelected()+"'"
                        + ", chkcondicion_r6='"+chkCondicionR6.isSelected()+"'"
                        + ", chkcondicion_r7='"+chkCondicionR7.isSelected()+"'"
                        + ", chkcondicion_r8='"+chkCondicionR8.isSelected()+"'"
                        + ", chkcondicion_r9='"+chkCondicionR9.isSelected()+"'"
                        + ", chkcondicion_r10='"+chkCondicionR10.isSelected()+"'"
                        + ", chkcondicion_r11='"+chkCondicionR11.isSelected()+"'"
                        + ", chkcondicion_r12='"+chkCondicionR12.isSelected()+"'"
                        + ", chkleve='"+rbLeve.isSelected()+"'"
                        + ", chkmodrado='"+rbModerado.isSelected()+"'"
                        + ", chksevera='"+rbSevera.isSelected()+"'"
                        + ", chkpcr_si='"+rbPCR_SI.isSelected()+"'"
                        + ", chkpcr_no='"+rbPCR_NO.isSelected()+"'"
                        + ", chkcontinuidad1='"+chkContinuidad1.isSelected()+"'"
                        + ", chkcontinuidad2='"+chkContinuidad2.isSelected()+"'"
                        + ", chkcontinuidad3='"+chkContinuidad3.isSelected()+"'"
                        + ", chkcontinuidad4='"+chkContinuidad4.isSelected()+"'"
                        + ", chkcontinuidad5='"+chkContinuidad5.isSelected()+"'"
                        + ", txtobservaciones='"+atxtObservaciones.getText()+"'" 
                        + ", dni_user='"+clsGlobales.sDniOperador+"'" 
                        + ", txtapellidos_medico='"+txtApMedico.getText()+"'"
                        + ", txtnombres_medico='"+txtNomMedico.getText()+"'" 
                        + ", cmp_medico='"+txtColegiatura.getText()+"'" +
                " WHERE n_orden='"+txtNorden.getText()+ "'";
                if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt)){
                    oFunc.SubSistemaMensajeInformacion("Se ha actualizado con Éxito");
                    imprimir();
                    limpiar();
                    try {
                        oConn.sqlStmt.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(Registro_Pruebas_Rapidas_F100.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                     oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                       }
            }
        }
    }
    private void agregar(){
        if(!txtNorden.getText().isEmpty()){
            if(!oPe.nOrden(txtNorden, "pruebas_rapidas_covid19")){
                if(validar()){
                    String strSqlStmt;
                    String query;
                    strSqlStmt="INSERT INTO pruebas_rapidas_covid19(\n" ;
                    query="Values('";
                    strSqlStmt += "n_orden";query += txtNorden.getText()+ "'";
                    strSqlStmt += ",fecha_registro";query += ",'"+FechaExamen.getDate()+ "'";
                    strSqlStmt += ",rbsalud_si";query += ",'"+rbSaludSi.isSelected()+ "'";
                    strSqlStmt += ",rbsalud_no";query += ",'"+rbSaludNo.isSelected()+ "'";
                    strSqlStmt += ",rbmedico";query += ",'"+rbMedico.isSelected()+ "'";
                    strSqlStmt += ",rbenfermero";query += ",'"+rbEnfermero.isSelected()+ "'";
                    strSqlStmt += ",rbobstetra";query += ",'"+rbObstetra.isSelected()+ "'";
                    strSqlStmt += ",rbbiologo";query += ",'"+rbBiologo.isSelected()+ "'";
                    strSqlStmt += ",rbtecnologo";query += ",'"+rbTecnologo.isSelected()+ "'";
                    strSqlStmt += ",rbtecnica";query += ",'"+rbTecnica.isSelected()+ "'";
                    strSqlStmt += ",rbotros";query += ",'"+rbOtros.isSelected()+ "'";
                    strSqlStmt += ",rbsintomas_si";query += ",'"+rbSintomaSi.isSelected()+ "'";
                    strSqlStmt += ",rbsintomas_no";query += ",'"+rbSintomasNo.isSelected()+ "'";
                    if (((JTextField)FechaSintoma.getDateEditor().getUiComponent()).getText().trim().length()> 1 ){
                    strSqlStmt += ",fecha_sintoma";query += ",'"+FechaSintoma.getDate()+ "'";}
                    strSqlStmt += ",chktos";query += ",'"+chkTos.isSelected()+ "'";
                    strSqlStmt += ",chkdolor_g";query += ",'"+chkDolorG.isSelected()+ "'";
                    strSqlStmt += ",chkcongestion_n";query += ",'"+chkCongestionN.isSelected()+ "'";
                    strSqlStmt += ",chkdificultad_r";query += ",'"+chkDificultadR.isSelected()+ "'";
                    strSqlStmt += ",chkfiebre";query += ",'"+chkFiebre.isSelected()+ "'";
                    strSqlStmt += ",chkmalestar_g";query += ",'"+chkMalestar.isSelected()+ "'";
                    strSqlStmt += ",chkdiarrea";query += ",'"+chkDiarrea.isSelected()+ "'";
                    strSqlStmt += ",chknauseas";query += ",'"+chkNauseas.isSelected()+ "'";
                    strSqlStmt += ",chkcefalea";query += ",'"+chkCefalea.isSelected()+ "'";
                    strSqlStmt += ",chkirritabilidad";query += ",'"+chkIrritaibilidad.isSelected()+ "'";
                    strSqlStmt += ",chkdolor";query += ",'"+chkDolor.isSelected()+ "'";
                    strSqlStmt += ",chkotros";query += ",'"+chkOtroS.isSelected()+ "'";
                    strSqlStmt += ",txtotros";query += ",'"+txtOtroSintoma.getText()+ "'";
                    strSqlStmt += ",chkmuscular";query += ",'"+chkMuscular.isSelected()+ "'";
                    strSqlStmt += ",chkabdominal";query += ",'"+chkAbdominal.isSelected()+ "'";
                    strSqlStmt += ",chkpecho";query += ",'"+chkPecho.isSelected()+ "'";
                    strSqlStmt += ",chkarticulaciones";query += ",'"+chkArticulaciones.isSelected()+ "'";
                    strSqlStmt += ",atxtotros_sintomas";query += ",'"+atxtOtrosSintomas.getText()+ "'";
                    strSqlStmt += ",chksolicitud1";query += ",'"+chkSolicitud1.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud2";query += ",'"+chkSolicitud2.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud3";query += ",'"+chkSolicitud3.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud4";query += ",'"+chkSolicitud4.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud5";query += ",'"+chkSolicitud5.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud6";query += ",'"+chkSolicitud6.isSelected()+ "'";
                    strSqlStmt += ",chksolicitud7";query += ",'"+chkSolicitud7.isSelected()+ "'";
                    strSqlStmt += ",chknegativo";query += ",'"+chkNegativo.isSelected()+ "'";
                    strSqlStmt += ",chknovalido";query += ",'"+chkNovalido.isSelected()+ "'";
                    strSqlStmt += ",chkigmpositivo";query += ",'"+chkIgMPos.isSelected()+ "'";
                    strSqlStmt += ",chkiggpositivo";query += ",'"+chkIgGPos.isSelected()+ "'";
                    strSqlStmt += ",chkigmiggpositivo";query += ",'"+chkIgMIgGPos.isSelected()+ "'";
                    strSqlStmt += ",chknegativo1";query += ",'"+chkNegativo1.isSelected()+ "'";
                    strSqlStmt += ",chknovalido1";query += ",'"+chkNovalido1.isSelected()+ "'";
                    strSqlStmt += ",chkigmpositivo1";query += ",'"+chkIgMPos1.isSelected()+ "'";
                    strSqlStmt += ",chkiggpositivo1";query += ",'"+chkIgGPos1.isSelected()+ "'";
                    strSqlStmt += ",chkigmiggpositivo1";query += ",'"+chkIgMIgGPos1.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r1";query += ",'"+chkCondicionR1.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r2";query += ",'"+chkCondicionR2.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r3";query += ",'"+chkCondicionR3.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r4";query += ",'"+chkCondicionR4.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r5";query += ",'"+chkCondicionR5.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r6";query += ",'"+chkCondicionR6.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r7";query += ",'"+chkCondicionR7.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r8";query += ",'"+chkCondicionR8.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r9";query += ",'"+chkCondicionR9.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r10";query += ",'"+chkCondicionR10.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r11";query += ",'"+chkCondicionR11.isSelected()+ "'";
                    strSqlStmt += ",chkcondicion_r12";query += ",'"+chkCondicionR12.isSelected()+ "'";
                    strSqlStmt += ",chkleve";query += ",'"+rbLeve.isSelected()+ "'";
                    strSqlStmt += ",chkmodrado";query += ",'"+rbModerado.isSelected()+ "'";
                    strSqlStmt += ",chksevera";query += ",'"+rbSevera.isSelected()+ "'";
                    strSqlStmt += ",chkpcr_si";query += ",'"+rbPCR_SI.isSelected()+ "'";
                    strSqlStmt += ",chkpcr_no";query += ",'"+rbPCR_NO.isSelected()+ "'";
                    strSqlStmt += ",chkcontinuidad1";query += ",'"+chkContinuidad1.isSelected()+ "'";
                    strSqlStmt += ",chkcontinuidad2";query += ",'"+chkContinuidad2.isSelected()+ "'";
                    strSqlStmt += ",chkcontinuidad3";query += ",'"+chkContinuidad3.isSelected()+ "'";
                    strSqlStmt += ",chkcontinuidad4";query += ",'"+chkContinuidad4.isSelected()+ "'";
                    strSqlStmt += ",chkcontinuidad5";query += ",'"+chkContinuidad5.isSelected()+ "'";
                    strSqlStmt += ",txtobservaciones";query += ",'"+atxtObservaciones.getText()+ "'";
                    strSqlStmt += ",dni_user";query += ",'"+clsGlobales.sDniOperador+ "'";
                    strSqlStmt += ",txtapellidos_medico";query += ",'"+txtApMedico.getText()+ "'";
                    strSqlStmt += ",txtnombres_medico";query += ",'"+txtNomMedico.getText()+ "'";
                    strSqlStmt += ",cmp_medico";query += ",'"+txtColegiatura.getText()+ "'";
                    if (oConn.FnBoolQueryExecuteUpdate(strSqlStmt.concat(") ") + query.concat(")"))){
                        oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                        imprimir();
                        limpiar();
                        try {
                            oConn.sqlStmt.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(Registro_Pruebas_Rapidas_F100.class.getName()).log(Level.SEVERE, null, ex);
                        }
                   }else{oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");} 
                }
             }
        }else { oFunc.SubSistemaMensajeError("Llene los Campos correctamente");
        txtNorden.requestFocus();}
    }
    private void limpiar(){
        txtNorden.setText(null);
        txtNombres.setText(null);
        txtDNI.setText(null);
        dateFechaNacimiento.setDate(null);
        txtSexo.setText(null) ;
        txtEdad.setText(null);
        FechaExamen.setDate(null);
        btgPerSalud.clearSelection();
        btgProfesion.clearSelection();
        btgSintomas.clearSelection();
        FechaSintoma.setDate(null);
        chkTos.setSelected(false);
        chkDolorG.setSelected(false);
        chkCongestionN.setSelected(false);
        chkDificultadR.setSelected(false);
        chkFiebre.setSelected(false);
        chkMalestar.setSelected(false);
        chkDiarrea.setSelected(false);
        chkNauseas.setSelected(false);
        chkCefalea.setSelected(false);
        chkIrritaibilidad.setSelected(false);
        chkDolor.setSelected(false);
        chkOtroS.setSelected(false);
        txtOtroSintoma.setText(null);
        chkMuscular.setSelected(false);
        chkAbdominal.setSelected(false);
        chkPecho.setSelected(false);
        chkArticulaciones.setSelected(false);
        atxtOtrosSintomas.setText(null);
        btgProcedencia.clearSelection();
//        chkSolicitud1.setSelected(false);
//        chkSolicitud2.setSelected(false);
//        chkSolicitud3.setSelected(false);
//        chkSolicitud4.setSelected(false);
//        chkSolicitud5.setSelected(false);
//        chkSolicitud6.setSelected(false);
        rbSaludNo.setSelected(true);
        rbSintomasNo.setSelected(true);
        chkSolicitud7.setSelected(true);
        btgResultados.clearSelection();
        btgResultados1.clearSelection();
        chkNegativo.setSelected(false);
        chkNovalido.setSelected(false);
        chkIgMPos.setSelected(false);
        chkIgGPos.setSelected(false);
        chkIgMIgGPos.setSelected(false);
        chkNegativo1.setSelected(false);
        chkNovalido1.setSelected(false);
        chkIgMPos1.setSelected(false);
        chkIgGPos1.setSelected(false);
        chkIgMIgGPos1.setSelected(false);
        chkCondicionR1.setSelected(false);
        chkCondicionR2.setSelected(false);
        chkCondicionR3.setSelected(false);
        chkCondicionR4.setSelected(false);
        chkCondicionR5.setSelected(false);
        chkCondicionR6.setSelected(false);
        chkCondicionR7.setSelected(false);
        chkCondicionR8.setSelected(false);
        chkCondicionR9.setSelected(false);
        chkCondicionR10.setSelected(false);
        chkCondicionR11.setSelected(false);
        chkCondicionR12.setSelected(false);
        btgClasificacion.clearSelection();
        btgContinuidad.clearSelection();
//        rbLeve.setSelected(false);
//        rbModerado.setSelected(false);
//        rbSevera.setSelected(false);
//        rbPCR_SI.setSelected(false);
//        rbPCR_NO.setSelected(false);
        chkContinuidad1.setSelected(false);
        chkContinuidad2.setSelected(false);
        chkContinuidad3.setSelected(false);
        chkContinuidad4.setSelected(false);
        chkContinuidad5.setSelected(false);
        atxtObservaciones.setText(null);
        txtApMedico.setText("GARCIA MONTILLA");
        txtNomMedico.setText("DOLIBETH");
        txtColegiatura.setText("10795");
        txtNorden.setEditable(true);
        txtNorden.requestFocusInWindow();
    }
    private boolean imprimir() {
        boolean im = false;
        int seleccion = JOptionPane.showOptionDialog(
                this, // Componente padre
                "¿Desea Imprimir?", //Mensaje
                "Seleccione una opción", // Título
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, // null para icono por defecto.
                new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                "Si");
        if (seleccion != -1) {
            if ((seleccion + 1) == 1) {
                printer(Integer.valueOf(txtNorden.getText().toString()));
                im = true;
            } else {
                // PRESIONO NO
            }
        }
        return im;

    }
    private void printer(Integer cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);      
                    try 
                {                     
                    String direccionReporte = System.getProperty("user.dir")+File.separator+"reportes"+File.separator+"f100_Pruebas_Rapidas.jasper";
                    JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                    JasperPrint jasperPrint= JasperFillManager.fillReport(myReport,parameters,clsConnection.oConnection);
                    JasperViewer.viewReport(jasperPrint, false);
                    JasperPrintManager.printReport(jasperPrint,true);
//                  JasperExportManager.exportReportToPdfFile( jasperPrint, "E:/prueba/reporte.pdf");
                   } catch (JRException ex) {
                    Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
                }
   }
     private void print(Integer cod) {

        Map parameters = new HashMap();
        parameters.put("Norden", cod);

        try {
            String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "f100_Pruebas_Rapidas.jasper";
            JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
            JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
            JasperViewer viewer = new JasperViewer(myPrint, false);
            viewer.setTitle("Certificación Conducción");
            // viewer.setAlwaysOnTop(true);
            viewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Odontograma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FechaExamen;
    private com.toedter.calendar.JDateChooser FechaSintoma;
    private javax.swing.JTextArea atxtObservaciones;
    private javax.swing.JTextArea atxtOtrosSintomas;
    private javax.swing.JButton btEditar;
    private javax.swing.ButtonGroup btgClasificacion;
    private javax.swing.ButtonGroup btgContinuidad;
    private javax.swing.ButtonGroup btgPerSalud;
    private javax.swing.ButtonGroup btgProcedencia;
    private javax.swing.ButtonGroup btgProfesion;
    private javax.swing.ButtonGroup btgResultados;
    private javax.swing.ButtonGroup btgResultados1;
    private javax.swing.ButtonGroup btgSintomas;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JCheckBox chkAbdominal;
    private javax.swing.JCheckBox chkArticulaciones;
    private javax.swing.JCheckBox chkCefalea;
    private javax.swing.JCheckBox chkCondicionR1;
    private javax.swing.JCheckBox chkCondicionR10;
    private javax.swing.JCheckBox chkCondicionR11;
    private javax.swing.JCheckBox chkCondicionR12;
    private javax.swing.JCheckBox chkCondicionR2;
    private javax.swing.JCheckBox chkCondicionR3;
    private javax.swing.JCheckBox chkCondicionR4;
    private javax.swing.JCheckBox chkCondicionR5;
    private javax.swing.JCheckBox chkCondicionR6;
    private javax.swing.JCheckBox chkCondicionR7;
    private javax.swing.JCheckBox chkCondicionR8;
    private javax.swing.JCheckBox chkCondicionR9;
    private javax.swing.JCheckBox chkCongestionN;
    private javax.swing.JCheckBox chkContinuidad1;
    private javax.swing.JCheckBox chkContinuidad2;
    private javax.swing.JCheckBox chkContinuidad3;
    private javax.swing.JCheckBox chkContinuidad4;
    private javax.swing.JCheckBox chkContinuidad5;
    private javax.swing.JCheckBox chkDiarrea;
    private javax.swing.JCheckBox chkDificultadR;
    private javax.swing.JCheckBox chkDolor;
    private javax.swing.JCheckBox chkDolorG;
    private javax.swing.JCheckBox chkFiebre;
    private javax.swing.JCheckBox chkIgGPos;
    private javax.swing.JCheckBox chkIgGPos1;
    private javax.swing.JCheckBox chkIgMIgGPos;
    private javax.swing.JCheckBox chkIgMIgGPos1;
    private javax.swing.JCheckBox chkIgMPos;
    private javax.swing.JCheckBox chkIgMPos1;
    private javax.swing.JCheckBox chkIrritaibilidad;
    private javax.swing.JCheckBox chkMalestar;
    private javax.swing.JCheckBox chkMuscular;
    private javax.swing.JCheckBox chkNauseas;
    private javax.swing.JCheckBox chkNegativo;
    private javax.swing.JCheckBox chkNegativo1;
    private javax.swing.JCheckBox chkNovalido;
    private javax.swing.JCheckBox chkNovalido1;
    private javax.swing.JCheckBox chkOtroS;
    private javax.swing.JCheckBox chkPecho;
    private javax.swing.JCheckBox chkSolicitud1;
    private javax.swing.JCheckBox chkSolicitud2;
    private javax.swing.JCheckBox chkSolicitud3;
    private javax.swing.JCheckBox chkSolicitud4;
    private javax.swing.JCheckBox chkSolicitud5;
    private javax.swing.JCheckBox chkSolicitud6;
    private javax.swing.JCheckBox chkSolicitud7;
    private javax.swing.JCheckBox chkTos;
    private com.toedter.calendar.JDateChooser dateFechaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rbBiologo;
    private javax.swing.JRadioButton rbEnfermero;
    private javax.swing.JRadioButton rbLeve;
    private javax.swing.JRadioButton rbMedico;
    private javax.swing.JRadioButton rbModerado;
    private javax.swing.JRadioButton rbObstetra;
    private javax.swing.JRadioButton rbOtros;
    private javax.swing.JRadioButton rbPCR_NO;
    private javax.swing.JRadioButton rbPCR_SI;
    private javax.swing.JRadioButton rbSaludNo;
    private javax.swing.JRadioButton rbSaludSi;
    private javax.swing.JRadioButton rbSevera;
    private javax.swing.JRadioButton rbSintomaSi;
    private javax.swing.JRadioButton rbSintomasNo;
    private javax.swing.JRadioButton rbTecnica;
    private javax.swing.JRadioButton rbTecnologo;
    private javax.swing.JTextField txtApMedico;
    private javax.swing.JTextField txtColegiatura;
    private javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtIMP;
    private javax.swing.JTextField txtNomMedico;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNorden;
    private javax.swing.JTextField txtOtroSintoma;
    private javax.swing.JTextField txtSexo;
    // End of variables declaration//GEN-END:variables
}
