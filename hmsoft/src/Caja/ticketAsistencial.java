/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caja;

import Clases.GestorTime;
import Clases.clsConnection;
import Clases.clsFunciones;
import Clases.clsGlobales;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author USER
 */
public class ticketAsistencial extends javax.swing.JFrame {
    clsConnection oConn = new clsConnection();
    clsFunciones oFunc = new clsFunciones();
    String fecha_nacc="",hist_cli="",dni_pa="",ticket_ge="";
        private com.toedter.calendar.JDateChooser FechaNacimiento2;
    DefaultTableModel ticket;

    /**
     * Creates new form ticketAsistencial
     */
    public ticketAsistencial() {
        initComponents();
        CargarDoctor();
                    setLocationRelativeTo(null);
        AutoCompleteDecorator.decorate(this.cboServicios);
        AutoCompleteDecorator.decorate(this.jComboBox3);
        AutoCompleteDecorator.decorate(this.jComboBox2);
        AutoCompleteDecorator.decorate(this.cboSexo);
        AutoCompleteDecorator.decorate(this.cboEstadoCivil);
        jRadioButton4.setSelected(true);
        jRadioButton3.setSelected(false);
        jButtonActualizar.setVisible(false);
        cboServicios.setSelectedItem("CONSULTA MEDICA");
   jComboBox3.setSelectedItem(clsGlobales.sNomOperador.toString()); 
jTextField2.setVisible(false);
   fecha();
 timer.start();
 txtDni.requestFocus();
 sbTicket();
         CargarServicios();
popuptable();
    }
    
       public void popuptable(){
    JPopupMenu popupMenu=new JPopupMenu();
    JMenuItem menuItem1=new JMenuItem("Eliminar Registro");
    menuItem1.addActionListener(new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent ae) {
     int a =tbTicket.getSelectedRow();
       System.out.println("la fila es:"+a);
     
    String id= (String) tbTicket.getValueAt(a,0);
        DefaultTableModel tblDatos = (DefaultTableModel) tbTicket.getModel();
        tblDatos.removeRow(a);
        
     
               JOptionPane.showMessageDialog(null, "SERVICIO ELIMINADO (X)");
                    
        }
    
    });    
    popupMenu.add(menuItem1);
    tbTicket.setComponentPopupMenu(popupMenu);
  
    }  
    
Timer timer = new Timer (1000, new ActionListener ()
{

    @Override
    public void actionPerformed(ActionEvent e)
{
Date HorNew = new Date();
SimpleDateFormat fechaforma = new SimpleDateFormat("hh:mm:ss a");
String FfechaSystemA = fechaforma.format(HorNew);

GestorTime.setFfechaSystem(FfechaSystemA);

jTextField7.setText(GestorTime.getFfechaSystem());
}
});
private void fecha(){
Date dateHoy = new Date();
Date fechaact=null;
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    System.out.println("la fechaa:"+formato.format(dateHoy));
        try {
            fechaact=formato.parse(formato.format(dateHoy).toString());
        } catch (ParseException ex) {
            Logger.getLogger(ticketAsistencial.class.getName()).log(Level.SEVERE, null, ex);
        }
//Fdesde.setDateFormatString(formato.format(dateHoy).toString());
Fdesde.setDate(fechaact);
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cboSexo = new javax.swing.JComboBox();
        txtEmail = new javax.swing.JTextField();
        txtLugarNacimiento = new javax.swing.JTextField();
        cboEstadoCivil = new javax.swing.JComboBox();
        txtCelular = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnLimpiar1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jTextField5 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        Fdesde = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButtonGenerar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTextField9 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        btnEditar1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jTextField12 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButtonActualizar = new javax.swing.JButton();
        btnLimpiar2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbTicket = new javax.swing.JTable();
        cboServicios = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTabbedPane1KeyPressed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Email:");
        jPanel5.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        jLabel7.setText("(*)Sexo:");
        jPanel5.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        jLabel6.setText("(*)Fecha Nacimiento:");
        jPanel5.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel1.setText("(*)Nombres :");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        jLabel13.setText("Estado Civil:");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel5.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 251, -1));

        cboSexo.setEditable(true);
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMENINO" }));
        cboSexo.setSelectedIndex(-1);
        cboSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSexoActionPerformed(evt);
            }
        });
        jPanel5.add(cboSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 131, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        jPanel5.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 251, -1));

        txtLugarNacimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLugarNacimientoActionPerformed(evt);
            }
        });
        jPanel5.add(txtLugarNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 251, 20));

        cboEstadoCivil.setEditable(true);
        cboEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SOLTERO", "CASADO", "VIUDO", "DIVORCIADO", "CONVIVIENTE" }));
        cboEstadoCivil.setSelectedIndex(-1);
        cboEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboEstadoCivilActionPerformed(evt);
            }
        });
        jPanel5.add(cboEstadoCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 155, -1));

        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });
        jPanel5.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 155, -1));

        jLabel20.setText("(*)Documento:");
        jPanel5.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel5.setText("Telefono:");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, -1));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/celular.png"))); // NOI18N
        jPanel5.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        FechaNacimiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FechaNacimientoMouseClicked(evt);
            }
        });
        FechaNacimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                FechaNacimientoPropertyChange(evt);
            }
        });
        FechaNacimiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FechaNacimientoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FechaNacimientoKeyReleased(evt);
            }
        });
        jPanel5.add(FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 145, -1));

        jLabel14.setText("(*)Apellidos:");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });
        jPanel5.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 251, -1));
        jPanel5.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(584, 242, 52, -1));

        txtDni.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniActionPerformed(evt);
            }
        });
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDniKeyTyped(evt);
            }
        });
        jPanel5.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 251, -1));

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("D.N.I.");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        jRadioButton2.setText("Pasaporte");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jLabel9.setText("Dirección:");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        jLabel2.setText("Edad :");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel5.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 70, -1));

        jButton1.setText("GUARDAR/ACTUALIZAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 180, 30));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar.setMnemonic('e');
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel5.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, -1));

        btnLimpiar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar1.setText("Limpiar");
        btnLimpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar1ActionPerformed(evt);
            }
        });
        jPanel5.add(btnLimpiar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 110, -1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(226, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("REGISTRO", jPanel1);

        jPanel3.setBackground(new java.awt.Color(153, 0, 51));
        jPanel3.setForeground(new java.awt.Color(102, 153, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRadioButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton4.setSelected(true);
        jRadioButton4.setText("D.N.I.");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton3.setText("Historia Clínica");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 130, -1));

        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });
        jPanel3.add(jTextField11, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 320, -1));

        jLabel18.setText("Nombres:");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel21.setText("Apellidos:");
        jPanel3.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel3.add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 320, -1));

        jLabel12.setText("Doctor:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jComboBox3.setEditable(true);
        jPanel3.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 320, -1));
        jPanel3.add(Fdesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 140, -1));

        jLabel15.setText("Fecha:");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel16.setText("Hora:");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        jTextField7.setForeground(new java.awt.Color(0, 153, 153));
        jTextField7.setEnabled(false);
        jPanel3.add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 130, 20));

        jLabel17.setText("Método de pago:");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 90, -1));

        jComboBox2.setEditable(true);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONTADO", "CREDITO", "TARJETA DEBITO", "TARJETA CREDITO" }));
        jPanel3.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 270, -1));

        jButtonGenerar.setText("GENERAR TICKET");
        jButtonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 140, 30));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setForeground(new java.awt.Color(0, 153, 102));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField9.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setText("00000000");

        jLabel22.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 200, 110));
        jPanel4.getAccessibleContext().setAccessibleName("HIstoria del paciente");

        btnEditar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/configuracion.png"))); // NOI18N
        btnEditar1.setText("Editar");
        btnEditar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditar1ActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 30, -1, -1));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Nro Ticket:"));
        jPanel7.setForeground(new java.awt.Color(0, 153, 102));
        jPanel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextField12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jTextField12.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField12.setText("00000-00000");
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(102, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, 300, 100));

        jButtonActualizar.setText("ACTUALIZAR TICKET");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 30, 170, -1));

        btnLimpiar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar2.setText("Limpiar");
        btnLimpiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiar2ActionPerformed(evt);
            }
        });
        jPanel3.add(btnLimpiar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, -1));

        tbTicket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbTicket);

        cboServicios.setEditable(true);
        cboServicios.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cboServiciosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cboServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboServiciosActionPerformed(evt);
            }
        });

        jLabel3.setText("Servicio:");

        jLabel4.setText("Cod. Servicio:");

        jLabel10.setText("Precio:");

        jLabel11.setText("Unidad:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField4.setText("1");

        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/entrar.png"))); // NOI18N
        btnAgregar.setMnemonic('a');
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("TOTAL:");

        jButton4.setText("GUARDAR/ACTUALIZAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setText("Imprimir");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar)
                .addGap(43, 43, 43)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1038, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(btnLimpiar)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TICKET", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1073, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        txtApellidos.requestFocus();
    }//GEN-LAST:event_txtNombreActionPerformed

    private void cboSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSexoActionPerformed
//cboEstadoCivil.requestFocus();
    }//GEN-LAST:event_cboSexoActionPerformed
private void CargarServicios(){
    String Consulta;    
    Consulta = "select descripcion from servicios_generales "
             + " ORDER BY  descripcion asc ";
        if (oConn.FnBoolQueryExecute(Consulta))
        {
            try 
            {
                while (oConn.setResult.next())
                 {                     
                   cboServicios.addItem(oConn.setResult.getString ("descripcion"));                     
                 }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(Comprobantes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}
public void limpiar_paciente(){
txtDni.setText("");
txtNombre.setText("");
txtApellidos.setText("");
FechaNacimiento.setDate(null);
jTextField1.setText("");
cboSexo.setSelectedIndex(-1);
cboEstadoCivil.setSelectedIndex(-1);
txtLugarNacimiento.setText("");
txtEmail.setText("");
txtCelular.setText("");
}

  private void CargarDoctor(){
    String Consulta;    
    Consulta = "select nombre_user||' '||apellido_user as nombre FROM usuarios  ";
        if (oConn.FnBoolQueryExecute(Consulta))
        {
            try 
            {
                while (oConn.setResult.next())
                 {                     
                   jComboBox3.addItem(oConn.setResult.getString ("nombre"));                     
                 }
                    oConn.setResult.close();
                    oConn.sqlStmt.close();
            } 
            catch (SQLException ex) 
            {
                //JOptionPane.showMessageDialorootPane,ex);
                oFunc.SubSistemaMensajeError(ex.toString());
                Logger.getLogger(Ticket.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
}  
   public void sbServicioAgrega()
    {

        double decPrecio;

        // Variable para el modelo de la tabla
        DefaultTableModel tblDatos = (DefaultTableModel) tbTicket.getModel();

        // Prepara los datos vacios iniciales
        Object [] oFila = new Object[7];
        
        // Para el Query
        String sQuery;
        
        // Valida que haya algo en el Codigo
        if (! jTextField2.getText().trim().isEmpty())
        {
            // Prepara el Query
            sQuery  = "select cod_servicio,descripcion,precio::money::numeric ,unidad from servicios_generales where cod_servicio ='"+jTextField2.getText().toString()+"'";

            //Ejecuta el Query
            oConn.FnBoolQueryExecute(sQuery);

            // Capturo el Error
            try {
               if (oConn.setResult.next())
                {       
                        oFila[0]=oConn.setResult.getString("cod_servicio");
                        oFila[1]=jTextField4.getText().toString().trim();
                        oFila[2]=oConn.setResult.getString("unidad");
                        oFila[3]=oConn.setResult.getString("descripcion");
                    // oFila[4]=oFunc.convertir(Double.valueOf(txtPrecioT.getText().toString()));
                       // oFila[4]=oFunc.convertir(Double.valueOf(txtPrecioT.getText().toString()));  
                      
                       // System.out.println("el mensaje es en fila 4 con txt"+oFila[4]);
                        //oFila[4]=oFunc.convertir(Double.valueOf(oConn.setResult.getString("precio")));
                     // 
                     oFila[4]=jTextField3.getText().toString();     
                       System.out.println("el mensaje es en fila 4 con txt "+oFila[4]);
                        
                  decPrecio = oConn.setResult.getDouble("precio");
                  System.out.println("el dec precio "+decPrecio);
                  // decPrecio =Double.valueOf(txtPrecioT.getText().toString());
                   //  System.out.println("el dec precio "+decPrecio);

                        Double Total = decPrecio; 
                        tblDatos.insertRow(0, oFila);  
                        tbTicket.setModel(tblDatos);
                       jTextField8.setText(oFunc.convertir(Total));
                }
                else 
                {
                    oFunc.SubSistemaMensajeError("No se agrego correctamente");
                    
                }

                // Cierro los Resultados
                oConn.setResult.close();
                oConn.sqlStmt.close();
            } catch (SQLException ex) {
                oFunc.SubSistemaMensajeError("Boleta de venta:"+ex.getMessage().toString());
            }
        }
            
        
        
    }
    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        txtCelular.requestFocus();
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtLugarNacimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLugarNacimientoActionPerformed
txtEmail.requestFocus();
    }//GEN-LAST:event_txtLugarNacimientoActionPerformed

    private void cboEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboEstadoCivilActionPerformed
//txtLugarNacimiento.requestFocus();
    }//GEN-LAST:event_cboEstadoCivilActionPerformed

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed

    }//GEN-LAST:event_txtCelularActionPerformed

    private void FechaNacimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_FechaNacimientoPropertyChange

    }//GEN-LAST:event_FechaNacimientoPropertyChange

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        FechaNacimiento.requestFocusInWindow();
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void txtDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniActionPerformed
     if(txtDni.getText().toString().trim().length()>=8)
     {       if(OrdenExiste())
         JOptionPane.showMessageDialog(null, "EL PACIENTE YA ESTA REGISTRADO");
     }
     else
                          JOptionPane.showMessageDialog(null, "INGRESAR DNI/PASPORTE COMPLETO");

    txtNombre.requestFocus();
    }//GEN-LAST:event_txtDniActionPerformed

    private void txtDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyTyped

    }//GEN-LAST:event_txtDniKeyTyped

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton2.setSelected(false);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        jRadioButton1.setSelected(false);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(OrdenExiste()){
            actualizarPciente();
            limpiar_paciente();
        }
        else
        {
        insertarPciente();
        String dni=txtDni.getText().toString();
        jTextField5.setText(dni);
        limpiar_paciente();
        jTextField5.requestFocus();
        
        }
        
        //   jPanel3.setVisible(false);
        //   jPanel4.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void actualizarPciente(){
       String tipoDoc="";
        if(jRadioButton1.isSelected())
            tipoDoc="DNI";
        else 
            tipoDoc="PASAPORTE";
    String query="update paciente_asistencial set tipo_doc='"+tipoDoc+"',nombres='"+txtNombre.getText().toString().trim()+"',apellidos='"+
            txtApellidos.getText().toString().trim()+"',fecha_nac='"+FechaNacimiento.getDate().toString()+"',edad="+
         jTextField1.getText().toString().trim()+",sexo='"+cboSexo.getSelectedItem().toString().trim()+"',estado_civil='"+
         cboEstadoCivil.getSelectedItem().toString().trim()+"',direccion='"+txtLugarNacimiento.getText().toString().trim()+"',email='"+
            txtEmail.getText().toString().trim()+"',telefono='"+txtCelular.getText().toString().toString()+"' where cod_pa="+txtDni.getText().toString().trim();
      try {
               System.out.println("el query actualziar:"+query);
                if (oConn.FnBoolQueryExecuteUpdate(query)){
                    oFunc.SubSistemaMensajeInformacion("Se ha actualizado la Entrada con Éxito");
                     
                }else{
                    oFunc.SubSistemaMensajeError("No se pudo actualizar La Entrada");
                }
                oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (Exception e) {
            }
    }
    
       public void Act_ticket_info( ){

    String query="update ticket_g set doctor='"+jComboBox3.getSelectedItem().toString().trim()+"',fecha='"+
            Fdesde.getDate().toString().trim()+"',metodo_pago='"+
            jComboBox2.getSelectedItem().toString().trim()+
            "'  where nro_ticket='"+jTextField12.getText().toString().trim()+"'";
            try {
          System.out.println("la coonsulta:"+query);
                if (oConn.FnBoolQueryExecuteUpdate(query)){
                    oFunc.SubSistemaMensajeInformacion("SE ACTUALIZO CON EXITO");
                }else{
                    oFunc.SubSistemaMensajeError("No se pudo guardar La Entrada");
                }
                oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (Exception e) {
            }
    
    }
    
    
    public void insertarPciente(){
       String tipoDoc="";
        if(jRadioButton1.isSelected())
            tipoDoc="DNI";
        else 
            tipoDoc="PASAPORTE";
    String query="insert into paciente_asistencial (cod_pa,\n" +
"tipo_doc,\n" +
"nombres,\n" +
"apellidos,\n" +
"fecha_nac, \n" +
"edad,\n" +
"sexo,\n" +
"estado_civil,\n" +
"direccion,\n" +
"email,\n" +
"telefono) values("+txtDni.getText().toString().trim()+
            ",'"+tipoDoc+"','"+txtNombre.getText().toString().trim()+"','"+
            txtApellidos.getText().toString().trim()+"','"+FechaNacimiento.getDate().toString()+"',"+
         jTextField1.getText().toString().trim()+",'"+cboSexo.getSelectedItem().toString().trim()+"','"+
         cboEstadoCivil.getSelectedItem().toString().trim()+"','"+txtLugarNacimiento.getText().toString().trim()+"','"+
            txtEmail.getText().toString().trim()+"','"+txtCelular.getText().toString().toString()+"') RETURNING historia_clinica;";
      try {
          System.out.println("la coonsulta:"+query);
                if (oConn.FnBoolQueryExecute(query)){
                    oConn.setResult.next();
                    oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                }else{
                    oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                }
                oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (Exception e) {
            }
    
    }
    
      public void insertarTicket(){
    String query="insert into ticket_info (cod_pa) values ("+dni_pa+")RETURNING id_ticket";
      try {
          System.out.println("la coonsulta:"+query);
                if (oConn.FnBoolQueryExecute(query)){
                           oConn.setResult.next();
                           ticket_ge = oConn.setResult.getString("id_ticket");
                           insertarTicket_detalle();
                }else{
                    oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                }
                oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (Exception e) {
            }
    
    }
        public void insertarTicket_detalle(){
                  System.out.println("entro al detalle del ticket");

       String namesede=clsGlobales.sedeSede;
       String ipi=clsGlobales.ipIp;
       String inicial="";
       if(ipi.equals("148.251.179.84")){
            if(namesede.equals("Huamachuco"))
                 {
                 inicial="HM-";
                 }
             if(namesede.equals("Huancayo"))
                {
                 inicial="HY-";
                }
             if(namesede.equals("Trujillo-Pierola"))
                {
                 inicial="TP-";
                 }
            if(namesede.equals("Trujillo"))
             {
            inicial="HC-";
            }  
       }else{
        if(namesede.equals("Trujillo"))
             {
            inicial="SD-";
            }  
        if(namesede.equals("Huamachuco"))
                 {
                 inicial="HM-";
                 }
       }
      inicial+=ticket_ge;
      System.out.println("historial:"+inicial);
    String query="insert into ticket_g(nro_ticket,\n" +
"	cod_pa,\n" +
"	fecha,\n" +
"	hora,\n" +
"	doctor,\n" +
"	metodo_pago) values ('"+inicial+"',"+dni_pa+",'"+
            Fdesde.getDate().toString()+"','"+jTextField7.getText().toString()+"','"+
            jComboBox3.getSelectedItem().toString().trim()+"','"+
            jComboBox2.getSelectedItem().toString().trim()+"') RETURNING nro_ticket;";
      try {
          System.out.println("la coonsulta:"+query);
                if (oConn.FnBoolQueryExecute(query)){
                   oConn.setResult.next();
                   String tickets=oConn.setResult.getString("nro_ticket");
                    jTextField12.setText(tickets);
                    oFunc.SubSistemaMensajeInformacion("Se ha registrado la Entrada con Éxito");
                   
                }else{
                    oFunc.SubSistemaMensajeError("No se pudo registrar La Entrada");
                }
                oConn.setResult.close();
                    oConn.sqlStmt.close();
            } catch (Exception e) {
            }
    
    }
    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        jRadioButton3.setSelected(false);
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        jRadioButton4.setSelected(false);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void cboServiciosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cboServiciosPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_cboServiciosPopupMenuWillBecomeInvisible

    private void cboServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboServiciosActionPerformed
mostrar_datos_servicio();
    }//GEN-LAST:event_cboServiciosActionPerformed
    public void editar_paciente(){
     
        String sQuery;

        sQuery  = "Select * from paciente_asistencial Where cod_pa ="+txtDni.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                 txtNombre.setText(oConn.setResult.getString("nombres"));
                    txtApellidos.setText(oConn.setResult.getString("apellidos"));
                    FechaNacimiento.setDate(oConn.setResult.getDate("fecha_nac"));
                    jTextField1.setText(oConn.setResult.getString("edad"));
                    cboSexo.setSelectedItem(oConn.setResult.getString("sexo"));
                    cboEstadoCivil.setSelectedItem(oConn.setResult.getString("estado_civil"));
                    txtLugarNacimiento.setText(oConn.setResult.getString("direccion"));
                    txtEmail.setText(oConn.setResult.getString("email"));
                    txtCelular.setText(oConn.setResult.getString("telefono"));

                 
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        
    }
    public void mostrar_Actualizar_ticket(){
     
        String sQuery;

        sQuery  = "select pa.nombres,pa.apellidos,pa.cod_pa,tg.fecha, tg.doctor,tg.metodo_pago,pa.historia_clinica "
                + "from ticket_g as tg "
                + "inner join paciente_asistencial as pa on tg.cod_pa=pa.cod_pa\n" +
" where tg.nro_ticket='"+jTextField12.getText().toString().trim()+"'";
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                 jTextField11.setText(oConn.setResult.getString("nombres"));
                    jTextField10.setText(oConn.setResult.getString("apellidos"));
                    jComboBox3.setSelectedItem(oConn.setResult.getString("doctor"));
                    jComboBox2.setSelectedItem(oConn.setResult.getString("metodo_pago"));
                    jTextField9.setText(oConn.setResult.getString("historia_clinica"));
                    Fdesde.setDate(oConn.setResult.getDate("fecha"));
                jTextField5.setText(oConn.setResult.getString("cod_pa"));
                 jRadioButton4.setSelected(true);
                 jRadioButton3.setSelected(false);
                           jLabel22.setText("Historia P.:");

//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        
    }
    
        public void mostrar_datos_servicio(){
     
        String sQuery;

        sQuery  = "Select * from servicios_generales Where descripcion ='"+cboServicios.getSelectedItem().toString()+"'";
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                 jTextField2.setText(oConn.setResult.getString("cod_servicio"));
                    jTextField3.setText(oConn.setResult.getString("precio"));
           
                 
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        
    }   
        public void oTicketContenido()
    {
        // Para los resultados
        
        // Variable para las filas de la Tabla de Productos
        int iFila;
        
        // Variables para los diferentes datos
        String sCodigo, sDescripcion, sPrecioU,sPrecioT,sDescuento, sCantidad, sUnidad;
        
        // Para la sentencia Sql
        String strSqlStmt; // Para el Query
        
        // Ciclo para grabar el detalle de la venta
        for(iFila = 0; iFila < tbTicket.getRowCount();iFila++)
        {
            //Obtiene dato contenido en una celda de la tabla
            sCodigo = tbTicket.getModel().getValueAt(iFila, 0).toString();
            sCantidad = tbTicket.getModel().getValueAt(iFila, 1).toString();
            sUnidad = tbTicket.getModel().getValueAt(iFila, 2).toString();
            sDescripcion = tbTicket.getModel().getValueAt(iFila, 3).toString();
            sPrecioU = tbTicket.getModel().getValueAt(iFila, 4).toString();

                    // Prepara Query para grabar venta detalle
                    strSqlStmt = " insert into servicio_ticket ";
                    strSqlStmt = strSqlStmt + "(cod_servicio,";
                    strSqlStmt = strSqlStmt + " nro_ticket,";
                    strSqlStmt = strSqlStmt + " precio,";
                    strSqlStmt = strSqlStmt + " unidad)";
                    strSqlStmt = strSqlStmt + " Values (";
                    strSqlStmt = strSqlStmt + "'"+sCodigo.toString()+"'";
                    strSqlStmt = strSqlStmt + ",'"+jTextField12.getText().toString().trim()+"'";
                    strSqlStmt = strSqlStmt + ",'"+sPrecioU.toString()+"'";
                    strSqlStmt = strSqlStmt + ","+sCantidad.toString()+")";
                    System.out.println(strSqlStmt);
                    // Ejecuta la Sentencia
                    if ( oConn.FnBoolQueryExecuteUpdate(strSqlStmt))
                    {
                        try {
                            // break;
                            oConn.sqlStmt.close();
                        } catch (SQLException ex) {
                            Logger.getLogger(Comprobantes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
          
        
        }
    }
       
    public void mostrar_paciente_dni(){
     
        String sQuery;

        sQuery  = "Select * from paciente_asistencial Where cod_pa ="+jTextField5.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                 jTextField11.setText(oConn.setResult.getString("nombres"));
                    jTextField10.setText(oConn.setResult.getString("apellidos"));
                    jTextField9.setText(oConn.setResult.getString("historia_clinica"));
                
                 
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        
    }
     
    public void mostrar_paciente_hp(){
     
        String sQuery;

        sQuery  = "Select * from paciente_asistencial Where historia_clinica ="+jTextField5.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                 jTextField11.setText(oConn.setResult.getString("nombres"));
                    jTextField10.setText(oConn.setResult.getString("apellidos"));
                    jTextField9.setText(oConn.setResult.getString("cod_pa"));
                
                 
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        
    }
    
    public boolean OrdenExiste()
    {
        boolean bResultado=false;
        if(!txtDni.getText().isEmpty()){
        String sQuery;

        sQuery  = "Select cod_pa from paciente_asistencial Where cod_pa ="+txtDni.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        }
        else
                  JOptionPane.showMessageDialog(null, "NO SE LLENO EL CAMPO DE DNI/PASAPORTE");
        return bResultado;
        }
    
    
    
     public boolean OrdenExiste_ticket()
    {
        boolean bResultado=false;
        if(!jTextField12.getText().isEmpty()){
        String sQuery;

        sQuery  = "Select nro_ticket from ticket_g Where nro_ticket ='"+jTextField12.getText().toString().trim()+"';";
        System.out.println(sQuery);
               oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
                System.out.println("verificar si esta actualizando");
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        }
        else
                  JOptionPane.showMessageDialog(null, "NO SE LLENO EL CAMPO DE DNI/PASAPORTE");
        return bResultado;
        }
      public boolean OrdenExiste_dni()
    {
        boolean bResultado=false;
        if(!jTextField5.getText().isEmpty()){
        String sQuery;

        sQuery  = "Select cod_pa from paciente_asistencial Where cod_pa ="+jTextField5.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        }
        else
                  JOptionPane.showMessageDialog(null, "NO SE LLENO EL CAMPO DE DNI/Historia P");
        return bResultado;
        }
      public boolean OrdenExiste_hp()
    {
        boolean bResultado=false;
        if(!jTextField5.getText().isEmpty()){
        String sQuery;

        sQuery  = "Select historia_clinica from paciente_asistencial Where historia_clinica ="+jTextField5.getText().toString().trim();
        oConn.FnBoolQueryExecute(sQuery);
        try {
            if (oConn.setResult.next())
            {
                bResultado = true;
//             oFunc.SubSistemaMensajeError("Número de Orden Utilizado");
//             txtNorden.setText(null);
            }
            oConn.setResult.close();
            oConn.sqlStmt.close();
        } catch (SQLException ex) {
         
        }
        }
        else
                  JOptionPane.showMessageDialog(null, "NO SE LLENO EL CAMPO DE DNI/Historia P.");
        return bResultado;
        }
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        sbServicioAgrega();
        sumar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        oTicketContenido();  
         imprimir();
        limpiar_ticket();
    }//GEN-LAST:event_jButton4ActionPerformed
private void sbTicket(){
         // Declaro un modelo de datos
   ticket = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if (columnIndex == 1) {
                return true;
            } else {
                return false;
            }
        }

    };
        ticket.addTableModelListener(new TableModelListener(){
            @Override
                    public void tableChanged(TableModelEvent e) {
                       if(e.getColumn() == 1){
                        sumar();
                    }
                        }
                });
        // Añadimos columnas al modelo de datos
        ticket.addColumn("Cod");
        ticket.addColumn("Cant");
        ticket.addColumn("Unidad");
        ticket.addColumn("Descripción");
        ticket.addColumn("P.Unitario");
    
                
        // Coloca el Modelo en la Tabla
        tbTicket.setModel(ticket);
        
        // Directamente
        tbTicket.getColumnModel().getColumn(0).setPreferredWidth(5);
        tbTicket.getColumnModel().getColumn(1).setPreferredWidth(5);
        tbTicket.getColumnModel().getColumn(2).setPreferredWidth(10);
        tbTicket.getColumnModel().getColumn(3).setPreferredWidth(255);
        tbTicket.getColumnModel().getColumn(4).setPreferredWidth(10);
  
        tbTicket.getTableHeader().setReorderingAllowed(false);
        tbTicket.getTableHeader().setResizingAllowed(false);

       // tbBoleta.setFont(new java.awt.Font("Lucida Sans", 0, 12)); 
       
        // Alinear a la derecha las cantidades y precios
        DefaultTableCellRenderer cellAlinear = new DefaultTableCellRenderer();
        
        // Asignamos el Alineamiento Horizontal a la derecha
        cellAlinear.setHorizontalAlignment(SwingConstants.CENTER);
        
        // Asignamos la Variable de celda de alineamiento a cada una de las columnas a alinear
        tbTicket.getColumnModel().getColumn(0).setCellRenderer(cellAlinear);
        tbTicket.getColumnModel().getColumn(1).setCellRenderer(cellAlinear);        
        tbTicket.getColumnModel().getColumn(2).setCellRenderer(cellAlinear);
        tbTicket.getColumnModel().getColumn(3).setCellRenderer(cellAlinear);
        tbTicket.getColumnModel().getColumn(4).setCellRenderer(cellAlinear);

        
    }
public void sumar(){
   //if(!lblTotal.getText().equals("S/.00.00")){
    if(tbTicket.getRowCount()>=1){
       
        double total = 0;
		double subtotal;
		for (int i = 0; i < ticket.getRowCount(); i++) {
			
                        String sCantidad = tbTicket.getModel().getValueAt(i,1).toString();
                        String sPrecio = tbTicket.getModel().getValueAt(i,4).toString();
                        //Double Total = (Double.valueOf(sCantidad) * oFunc.Sol(sPrecio))/oFunc.numtext(sDscto);
                        Double Total = (Double.valueOf(sCantidad) * oFunc.SolAll(sPrecio));                  
                        subtotal = Double.valueOf(oFunc.Soles(ticket.getValueAt(i, 4).toString()));
			total += subtotal;
                        
		}
                   jTextField8.setText(oFunc.convertir(total));
     //   }
    
   }
}
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
 if(txtDni.getText().toString().trim().length()>=8)
 {
            if(OrdenExiste())
                {
                     editar_paciente();    
                 }
             else
               JOptionPane.showMessageDialog(null, "EL PACIENTE NO ESTA REGISTRADO:");
 }
 else
                 JOptionPane.showMessageDialog(null, "INGRESAR DNI/PASPORTE COMPLETO");

    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTabbedPane1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane1KeyPressed
        
    }//GEN-LAST:event_jTabbedPane1KeyPressed

    private void FechaNacimientoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaNacimientoKeyPressed

        jTextField1.requestFocus();
    }//GEN-LAST:event_FechaNacimientoKeyPressed

    private void FechaNacimientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FechaNacimientoMouseClicked
        
    }//GEN-LAST:event_FechaNacimientoMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
       // System.out.println("la fecha de nacimiento es:"+FechaNacimiento.getDate());
        jTextField1.setText(String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())));
             // System.out.println("la edad: "+String.valueOf(oFunc.calcularEdad(FechaNacimiento.getCalendar())));
              cboSexo.requestFocus();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void FechaNacimientoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FechaNacimientoKeyReleased
       
    }//GEN-LAST:event_FechaNacimientoKeyReleased

    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
//     txtNombre.requestFocus();

    }//GEN-LAST:event_txtDniKeyPressed

    private void btnEditar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditar1ActionPerformed
        mostrar_Actualizar_ticket();
        jButtonActualizar.setVisible(true);
        jButtonGenerar.setVisible(false);
    }//GEN-LAST:event_btnEditar1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        if(jRadioButton4.isSelected())
        {
           if(OrdenExiste_dni())
           {
           mostrar_paciente_dni();
                           jLabel22.setText("Historia P.:");
                            dni_pa=jTextField5.getText().toString().trim();
           }
           else
     JOptionPane.showMessageDialog(null, "NO SE ENCUENTRA ESE DNI REGISTRADO");

        }
        else
        {
            if(OrdenExiste_hp())
            {
                mostrar_paciente_hp();
                jLabel22.setText("DNI:");
                dni_pa=jTextField9.getText().toString();

            }
            else
            {
                 JOptionPane.showMessageDialog(null, "NO SE ENCUENTRA REGISTROS DE ESA HISTORIA C.");

            }
            
        }
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
     limpiar_ticket();

    }//GEN-LAST:event_btnLimpiarActionPerformed
public void limpiar_ticket(){
       jTextField5.setText("");
                        jTextField11.setText("");
                        jTextField10.setText("");
                        jTextField9.setText("");
                        jTextField12.setText("00000-00000");        
                        jTextField2.setText("");
                        jTextField3.setText("");
                        jTextField4.setText("1");
                        int a = tbTicket.getRowCount()-1;
                 DefaultTableModel tblDatos = (DefaultTableModel) tbTicket.getModel();
        for (int i = a; i >= 0; i--) {          
        tblDatos.removeRow(tblDatos.getRowCount()-1);
        }
                        jTextField8.setText("");
                   //     jButtonGenerar.setVisible(true);
                    //    jButtonActualizar.setVisible(false);
}
    private void btnLimpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar1ActionPerformed
  limpiar_paciente();
    }//GEN-LAST:event_btnLimpiar1ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jButtonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarActionPerformed
        if(!jTextField12.getText().isEmpty()){
            if(OrdenExiste_ticket())
                 {
                JOptionPane.showMessageDialog(null, "TICKET YA REGISTRADO");
                 
                 }
            else
            {
                insertarTicket();
               jButtonGenerar.setVisible(false);
               jButtonActualizar.setVisible(true);

            }
        
        }
        
 
    }//GEN-LAST:event_jButtonGenerarActionPerformed

    private void print(String cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);             
                
                try 
                {
                        String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "HistoriaClinicaAsistencial.jasper";
                        JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                        JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
                        JasperViewer viewer = new JasperViewer(myPrint, false);
                        viewer.setTitle("TICKET ASISTENCIAL");
                        // viewer.setAlwaysOnTop(true);
                        viewer.setVisible(true);
                   
                 } catch (JRException ex) {
                    Logger.getLogger(ticketAsistencial.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
 
 }
  
    private void print1(String cod){
                Map parameters = new HashMap(); 
                parameters.put("Norden",cod);             
                
                try 
                {
                        String direccionReporte = System.getProperty("user.dir") + File.separator + "reportes" + File.separator + "HistoriaClinicaAsistencial.jasper";
                  JasperReport myReport = (JasperReport) JRLoader.loadObjectFromFile(direccionReporte);
                JasperPrint myPrint = JasperFillManager.fillReport(myReport, parameters, clsConnection.oConnection);
                JasperPrintManager.printReport(myPrint,true);

                 } catch (JRException ex) {
                    Logger.getLogger(ticketAsistencial.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
 
 }  
    
    
       private boolean imprimir(){
    boolean im = false;
int seleccion = JOptionPane.showOptionDialog(
    this, // Componente padre
    "¿Desea Imprimir?", //Mensaje
    "Seleccione una opción", // Título
    JOptionPane.YES_NO_CANCEL_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,    // null para icono por defecto.
    new Object[] { "Si", "No"},    // null para YES, NO y CANCEL
    "Si");
    if (seleccion != -1)
    {
   if((seleccion + 1)==1)
   {  //  System.out.println("el numero es "+Integer.valueOf(num));
        print1(jTextField12.getText().toString().trim());
   //   printer(Integer.valueOf(txtNorden.getText().toString()));
       im = true;
   }
   else
   {
      // PRESIONO NO
     }
    }
    return im;

}
    
    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
               mostrar_Actualizar_ticket();

    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        if(!jTextField12.getText().isEmpty()){
            if(OrdenExiste_ticket())
            {
           Act_ticket_info();             
            
            }
            else
            {
               
            JOptionPane.showMessageDialog(null, "EL TICKET NO ESTA REGISTRADO");
                 
            }
        
        }       
        

    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        print(jTextField12.getText().toString().trim());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnLimpiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiar2ActionPerformed
             jTextField5.setText("");
                        jTextField11.setText("");
                        jTextField10.setText("");
                        jTextField9.setText("");
                        jTextField12.setText("00000-00000");        
                       jButtonActualizar.setVisible(false);
                       jButtonGenerar.setVisible(true);
jComboBox2.setSelectedItem("CONTADO");
    }//GEN-LAST:event_btnLimpiar2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ticketAsistencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ticketAsistencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ticketAsistencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ticketAsistencial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ticketAsistencial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Fdesde;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditar1;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiar1;
    private javax.swing.JButton btnLimpiar2;
    private javax.swing.JComboBox cboEstadoCivil;
    private javax.swing.JComboBox cboServicios;
    private javax.swing.JComboBox cboSexo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonGenerar;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTable tbTicket;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLugarNacimiento;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
